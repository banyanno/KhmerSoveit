'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:2.0.50727.4927
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSOPERATIONNOTE"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSOPERATIONNOTE
    Inherits Global.System.Data.DataSet
    
    Private tableS_OPER_SCLERAL_BUCKLING As S_OPER_SCLERAL_BUCKLINGDataTable
    
    Private tableTblDoctor As TblDoctorDataTable
    
    Private tableTblSurgery As TblSurgeryDataTable
    
    Private tableView_OTRegistration As View_OTRegistrationDataTable
    
    Private tableS_OPER_INJECTION As S_OPER_INJECTIONDataTable
    
    Private tableS_OPER_GENERAL_OPERATIVE As S_OPER_GENERAL_OPERATIVEDataTable
    
    Private tableS_OPER_PHACOEMULSIFICATION As S_OPER_PHACOEMULSIFICATIONDataTable
    
    Private tableS_OPERA_ECCE As S_OPERA_ECCEDataTable
    
    Private tableS_OPER_PAR_PLANA_VITRECTOMY As S_OPER_PAR_PLANA_VITRECTOMYDataTable
    
    Private tableS_OPER_TRABECULECTOMY As S_OPER_TRABECULECTOMYDataTable
    
    Private tableS_OPER_PTERYGIUM As S_OPER_PTERYGIUMDataTable
    
    Private relationOperationNotesScleral As Global.System.Data.DataRelation
    
    Private relationOperInjection As Global.System.Data.DataRelation
    
    Private relationGENERAL_OPERATIVE As Global.System.Data.DataRelation
    
    Private relationOper_Phacoemul As Global.System.Data.DataRelation
    
    Private relationOper_ECCE As Global.System.Data.DataRelation
    
    Private relationOperParPlana As Global.System.Data.DataRelation
    
    Private relationS_OPER_TRABECULECTOMY As Global.System.Data.DataRelation
    
    Private relationS_OPER_PTERYGIUM As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("S_OPER_SCLERAL_BUCKLING")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_SCLERAL_BUCKLINGDataTable(ds.Tables("S_OPER_SCLERAL_BUCKLING")))
            End If
            If (Not (ds.Tables("TblDoctor")) Is Nothing) Then
                MyBase.Tables.Add(New TblDoctorDataTable(ds.Tables("TblDoctor")))
            End If
            If (Not (ds.Tables("TblSurgery")) Is Nothing) Then
                MyBase.Tables.Add(New TblSurgeryDataTable(ds.Tables("TblSurgery")))
            End If
            If (Not (ds.Tables("View_OTRegistration")) Is Nothing) Then
                MyBase.Tables.Add(New View_OTRegistrationDataTable(ds.Tables("View_OTRegistration")))
            End If
            If (Not (ds.Tables("S_OPER_INJECTION")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_INJECTIONDataTable(ds.Tables("S_OPER_INJECTION")))
            End If
            If (Not (ds.Tables("S_OPER_GENERAL_OPERATIVE")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_GENERAL_OPERATIVEDataTable(ds.Tables("S_OPER_GENERAL_OPERATIVE")))
            End If
            If (Not (ds.Tables("S_OPER_PHACOEMULSIFICATION")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_PHACOEMULSIFICATIONDataTable(ds.Tables("S_OPER_PHACOEMULSIFICATION")))
            End If
            If (Not (ds.Tables("S_OPERA_ECCE")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPERA_ECCEDataTable(ds.Tables("S_OPERA_ECCE")))
            End If
            If (Not (ds.Tables("S_OPER_PAR_PLANA_VITRECTOMY")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_PAR_PLANA_VITRECTOMYDataTable(ds.Tables("S_OPER_PAR_PLANA_VITRECTOMY")))
            End If
            If (Not (ds.Tables("S_OPER_TRABECULECTOMY")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_TRABECULECTOMYDataTable(ds.Tables("S_OPER_TRABECULECTOMY")))
            End If
            If (Not (ds.Tables("S_OPER_PTERYGIUM")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_PTERYGIUMDataTable(ds.Tables("S_OPER_PTERYGIUM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_OPER_SCLERAL_BUCKLING() As S_OPER_SCLERAL_BUCKLINGDataTable
        Get
            Return Me.tableS_OPER_SCLERAL_BUCKLING
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TblDoctor() As TblDoctorDataTable
        Get
            Return Me.tableTblDoctor
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TblSurgery() As TblSurgeryDataTable
        Get
            Return Me.tableTblSurgery
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property View_OTRegistration() As View_OTRegistrationDataTable
        Get
            Return Me.tableView_OTRegistration
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_OPER_INJECTION() As S_OPER_INJECTIONDataTable
        Get
            Return Me.tableS_OPER_INJECTION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_OPER_GENERAL_OPERATIVE() As S_OPER_GENERAL_OPERATIVEDataTable
        Get
            Return Me.tableS_OPER_GENERAL_OPERATIVE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_OPER_PHACOEMULSIFICATION() As S_OPER_PHACOEMULSIFICATIONDataTable
        Get
            Return Me.tableS_OPER_PHACOEMULSIFICATION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_OPERA_ECCE() As S_OPERA_ECCEDataTable
        Get
            Return Me.tableS_OPERA_ECCE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_OPER_PAR_PLANA_VITRECTOMY() As S_OPER_PAR_PLANA_VITRECTOMYDataTable
        Get
            Return Me.tableS_OPER_PAR_PLANA_VITRECTOMY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_OPER_TRABECULECTOMY() As S_OPER_TRABECULECTOMYDataTable
        Get
            Return Me.tableS_OPER_TRABECULECTOMY
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property S_OPER_PTERYGIUM() As S_OPER_PTERYGIUMDataTable
        Get
            Return Me.tableS_OPER_PTERYGIUM
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSOPERATIONNOTE = CType(MyBase.Clone,DSOPERATIONNOTE)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("S_OPER_SCLERAL_BUCKLING")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_SCLERAL_BUCKLINGDataTable(ds.Tables("S_OPER_SCLERAL_BUCKLING")))
            End If
            If (Not (ds.Tables("TblDoctor")) Is Nothing) Then
                MyBase.Tables.Add(New TblDoctorDataTable(ds.Tables("TblDoctor")))
            End If
            If (Not (ds.Tables("TblSurgery")) Is Nothing) Then
                MyBase.Tables.Add(New TblSurgeryDataTable(ds.Tables("TblSurgery")))
            End If
            If (Not (ds.Tables("View_OTRegistration")) Is Nothing) Then
                MyBase.Tables.Add(New View_OTRegistrationDataTable(ds.Tables("View_OTRegistration")))
            End If
            If (Not (ds.Tables("S_OPER_INJECTION")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_INJECTIONDataTable(ds.Tables("S_OPER_INJECTION")))
            End If
            If (Not (ds.Tables("S_OPER_GENERAL_OPERATIVE")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_GENERAL_OPERATIVEDataTable(ds.Tables("S_OPER_GENERAL_OPERATIVE")))
            End If
            If (Not (ds.Tables("S_OPER_PHACOEMULSIFICATION")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_PHACOEMULSIFICATIONDataTable(ds.Tables("S_OPER_PHACOEMULSIFICATION")))
            End If
            If (Not (ds.Tables("S_OPERA_ECCE")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPERA_ECCEDataTable(ds.Tables("S_OPERA_ECCE")))
            End If
            If (Not (ds.Tables("S_OPER_PAR_PLANA_VITRECTOMY")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_PAR_PLANA_VITRECTOMYDataTable(ds.Tables("S_OPER_PAR_PLANA_VITRECTOMY")))
            End If
            If (Not (ds.Tables("S_OPER_TRABECULECTOMY")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_TRABECULECTOMYDataTable(ds.Tables("S_OPER_TRABECULECTOMY")))
            End If
            If (Not (ds.Tables("S_OPER_PTERYGIUM")) Is Nothing) Then
                MyBase.Tables.Add(New S_OPER_PTERYGIUMDataTable(ds.Tables("S_OPER_PTERYGIUM")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableS_OPER_SCLERAL_BUCKLING = CType(MyBase.Tables("S_OPER_SCLERAL_BUCKLING"),S_OPER_SCLERAL_BUCKLINGDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_OPER_SCLERAL_BUCKLING) Is Nothing) Then
                Me.tableS_OPER_SCLERAL_BUCKLING.InitVars
            End If
        End If
        Me.tableTblDoctor = CType(MyBase.Tables("TblDoctor"),TblDoctorDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTblDoctor) Is Nothing) Then
                Me.tableTblDoctor.InitVars
            End If
        End If
        Me.tableTblSurgery = CType(MyBase.Tables("TblSurgery"),TblSurgeryDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTblSurgery) Is Nothing) Then
                Me.tableTblSurgery.InitVars
            End If
        End If
        Me.tableView_OTRegistration = CType(MyBase.Tables("View_OTRegistration"),View_OTRegistrationDataTable)
        If (initTable = true) Then
            If (Not (Me.tableView_OTRegistration) Is Nothing) Then
                Me.tableView_OTRegistration.InitVars
            End If
        End If
        Me.tableS_OPER_INJECTION = CType(MyBase.Tables("S_OPER_INJECTION"),S_OPER_INJECTIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_OPER_INJECTION) Is Nothing) Then
                Me.tableS_OPER_INJECTION.InitVars
            End If
        End If
        Me.tableS_OPER_GENERAL_OPERATIVE = CType(MyBase.Tables("S_OPER_GENERAL_OPERATIVE"),S_OPER_GENERAL_OPERATIVEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_OPER_GENERAL_OPERATIVE) Is Nothing) Then
                Me.tableS_OPER_GENERAL_OPERATIVE.InitVars
            End If
        End If
        Me.tableS_OPER_PHACOEMULSIFICATION = CType(MyBase.Tables("S_OPER_PHACOEMULSIFICATION"),S_OPER_PHACOEMULSIFICATIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_OPER_PHACOEMULSIFICATION) Is Nothing) Then
                Me.tableS_OPER_PHACOEMULSIFICATION.InitVars
            End If
        End If
        Me.tableS_OPERA_ECCE = CType(MyBase.Tables("S_OPERA_ECCE"),S_OPERA_ECCEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_OPERA_ECCE) Is Nothing) Then
                Me.tableS_OPERA_ECCE.InitVars
            End If
        End If
        Me.tableS_OPER_PAR_PLANA_VITRECTOMY = CType(MyBase.Tables("S_OPER_PAR_PLANA_VITRECTOMY"),S_OPER_PAR_PLANA_VITRECTOMYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_OPER_PAR_PLANA_VITRECTOMY) Is Nothing) Then
                Me.tableS_OPER_PAR_PLANA_VITRECTOMY.InitVars
            End If
        End If
        Me.tableS_OPER_TRABECULECTOMY = CType(MyBase.Tables("S_OPER_TRABECULECTOMY"),S_OPER_TRABECULECTOMYDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_OPER_TRABECULECTOMY) Is Nothing) Then
                Me.tableS_OPER_TRABECULECTOMY.InitVars
            End If
        End If
        Me.tableS_OPER_PTERYGIUM = CType(MyBase.Tables("S_OPER_PTERYGIUM"),S_OPER_PTERYGIUMDataTable)
        If (initTable = true) Then
            If (Not (Me.tableS_OPER_PTERYGIUM) Is Nothing) Then
                Me.tableS_OPER_PTERYGIUM.InitVars
            End If
        End If
        Me.relationOperationNotesScleral = Me.Relations("OperationNotesScleral")
        Me.relationOperInjection = Me.Relations("OperInjection")
        Me.relationGENERAL_OPERATIVE = Me.Relations("GENERAL_OPERATIVE")
        Me.relationOper_Phacoemul = Me.Relations("Oper_Phacoemul")
        Me.relationOper_ECCE = Me.Relations("Oper_ECCE")
        Me.relationOperParPlana = Me.Relations("OperParPlana")
        Me.relationS_OPER_TRABECULECTOMY = Me.Relations("S_OPER_TRABECULECTOMY")
        Me.relationS_OPER_PTERYGIUM = Me.Relations("S_OPER_PTERYGIUM")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "DSOPERATIONNOTE"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSOPERATIONNOTE.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableS_OPER_SCLERAL_BUCKLING = New S_OPER_SCLERAL_BUCKLINGDataTable
        MyBase.Tables.Add(Me.tableS_OPER_SCLERAL_BUCKLING)
        Me.tableTblDoctor = New TblDoctorDataTable
        MyBase.Tables.Add(Me.tableTblDoctor)
        Me.tableTblSurgery = New TblSurgeryDataTable
        MyBase.Tables.Add(Me.tableTblSurgery)
        Me.tableView_OTRegistration = New View_OTRegistrationDataTable
        MyBase.Tables.Add(Me.tableView_OTRegistration)
        Me.tableS_OPER_INJECTION = New S_OPER_INJECTIONDataTable
        MyBase.Tables.Add(Me.tableS_OPER_INJECTION)
        Me.tableS_OPER_GENERAL_OPERATIVE = New S_OPER_GENERAL_OPERATIVEDataTable
        MyBase.Tables.Add(Me.tableS_OPER_GENERAL_OPERATIVE)
        Me.tableS_OPER_PHACOEMULSIFICATION = New S_OPER_PHACOEMULSIFICATIONDataTable
        MyBase.Tables.Add(Me.tableS_OPER_PHACOEMULSIFICATION)
        Me.tableS_OPERA_ECCE = New S_OPERA_ECCEDataTable
        MyBase.Tables.Add(Me.tableS_OPERA_ECCE)
        Me.tableS_OPER_PAR_PLANA_VITRECTOMY = New S_OPER_PAR_PLANA_VITRECTOMYDataTable
        MyBase.Tables.Add(Me.tableS_OPER_PAR_PLANA_VITRECTOMY)
        Me.tableS_OPER_TRABECULECTOMY = New S_OPER_TRABECULECTOMYDataTable
        MyBase.Tables.Add(Me.tableS_OPER_TRABECULECTOMY)
        Me.tableS_OPER_PTERYGIUM = New S_OPER_PTERYGIUMDataTable
        MyBase.Tables.Add(Me.tableS_OPER_PTERYGIUM)
        Me.relationOperationNotesScleral = New Global.System.Data.DataRelation("OperationNotesScleral", New Global.System.Data.DataColumn() {Me.tableView_OTRegistration.OTNoColumn}, New Global.System.Data.DataColumn() {Me.tableS_OPER_SCLERAL_BUCKLING.OPERA_NOColumn}, false)
        Me.Relations.Add(Me.relationOperationNotesScleral)
        Me.relationOperInjection = New Global.System.Data.DataRelation("OperInjection", New Global.System.Data.DataColumn() {Me.tableView_OTRegistration.OTNoColumn}, New Global.System.Data.DataColumn() {Me.tableS_OPER_INJECTION.OPERA_NOColumn}, false)
        Me.Relations.Add(Me.relationOperInjection)
        Me.relationGENERAL_OPERATIVE = New Global.System.Data.DataRelation("GENERAL_OPERATIVE", New Global.System.Data.DataColumn() {Me.tableView_OTRegistration.OTNoColumn}, New Global.System.Data.DataColumn() {Me.tableS_OPER_GENERAL_OPERATIVE.OPERA_NOColumn}, false)
        Me.Relations.Add(Me.relationGENERAL_OPERATIVE)
        Me.relationOper_Phacoemul = New Global.System.Data.DataRelation("Oper_Phacoemul", New Global.System.Data.DataColumn() {Me.tableView_OTRegistration.OTNoColumn}, New Global.System.Data.DataColumn() {Me.tableS_OPER_PHACOEMULSIFICATION.OPERA_NOColumn}, false)
        Me.Relations.Add(Me.relationOper_Phacoemul)
        Me.relationOper_ECCE = New Global.System.Data.DataRelation("Oper_ECCE", New Global.System.Data.DataColumn() {Me.tableView_OTRegistration.OTNoColumn}, New Global.System.Data.DataColumn() {Me.tableS_OPERA_ECCE.OPERA_NOColumn}, false)
        Me.Relations.Add(Me.relationOper_ECCE)
        Me.relationOperParPlana = New Global.System.Data.DataRelation("OperParPlana", New Global.System.Data.DataColumn() {Me.tableView_OTRegistration.OTNoColumn}, New Global.System.Data.DataColumn() {Me.tableS_OPER_PAR_PLANA_VITRECTOMY.OPERA_NOColumn}, false)
        Me.Relations.Add(Me.relationOperParPlana)
        Me.relationS_OPER_TRABECULECTOMY = New Global.System.Data.DataRelation("S_OPER_TRABECULECTOMY", New Global.System.Data.DataColumn() {Me.tableView_OTRegistration.OTNoColumn}, New Global.System.Data.DataColumn() {Me.tableS_OPER_TRABECULECTOMY.OPERA_NOColumn}, false)
        Me.Relations.Add(Me.relationS_OPER_TRABECULECTOMY)
        Me.relationS_OPER_PTERYGIUM = New Global.System.Data.DataRelation("S_OPER_PTERYGIUM", New Global.System.Data.DataColumn() {Me.tableView_OTRegistration.OTNoColumn}, New Global.System.Data.DataColumn() {Me.tableS_OPER_PTERYGIUM.OPERA_NOColumn}, false)
        Me.Relations.Add(Me.relationS_OPER_PTERYGIUM)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_OPER_SCLERAL_BUCKLING() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTblDoctor() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeTblSurgery() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeView_OTRegistration() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_OPER_INJECTION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_OPER_GENERAL_OPERATIVE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_OPER_PHACOEMULSIFICATION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_OPERA_ECCE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_OPER_PAR_PLANA_VITRECTOMY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_OPER_TRABECULECTOMY() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeS_OPER_PTERYGIUM() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub S_OPER_SCLERAL_BUCKLINGRowChangeEventHandler(ByVal sender As Object, ByVal e As S_OPER_SCLERAL_BUCKLINGRowChangeEvent)
    
    Public Delegate Sub TblDoctorRowChangeEventHandler(ByVal sender As Object, ByVal e As TblDoctorRowChangeEvent)
    
    Public Delegate Sub TblSurgeryRowChangeEventHandler(ByVal sender As Object, ByVal e As TblSurgeryRowChangeEvent)
    
    Public Delegate Sub View_OTRegistrationRowChangeEventHandler(ByVal sender As Object, ByVal e As View_OTRegistrationRowChangeEvent)
    
    Public Delegate Sub S_OPER_INJECTIONRowChangeEventHandler(ByVal sender As Object, ByVal e As S_OPER_INJECTIONRowChangeEvent)
    
    Public Delegate Sub S_OPER_GENERAL_OPERATIVERowChangeEventHandler(ByVal sender As Object, ByVal e As S_OPER_GENERAL_OPERATIVERowChangeEvent)
    
    Public Delegate Sub S_OPER_PHACOEMULSIFICATIONRowChangeEventHandler(ByVal sender As Object, ByVal e As S_OPER_PHACOEMULSIFICATIONRowChangeEvent)
    
    Public Delegate Sub S_OPERA_ECCERowChangeEventHandler(ByVal sender As Object, ByVal e As S_OPERA_ECCERowChangeEvent)
    
    Public Delegate Sub S_OPER_PAR_PLANA_VITRECTOMYRowChangeEventHandler(ByVal sender As Object, ByVal e As S_OPER_PAR_PLANA_VITRECTOMYRowChangeEvent)
    
    Public Delegate Sub S_OPER_TRABECULECTOMYRowChangeEventHandler(ByVal sender As Object, ByVal e As S_OPER_TRABECULECTOMYRowChangeEvent)
    
    Public Delegate Sub S_OPER_PTERYGIUMRowChangeEventHandler(ByVal sender As Object, ByVal e As S_OPER_PTERYGIUMRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_OPER_SCLERAL_BUCKLINGDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_OPER_SCLERAL_BUCKLINGRow)
        
        Private columnSCLERAL_ID As Global.System.Data.DataColumn
        
        Private columnOPERA_NO As Global.System.Data.DataColumn
        
        Private columnRIGHT_EYE As Global.System.Data.DataColumn
        
        Private columnLEFT_EYE As Global.System.Data.DataColumn
        
        Private columnSTART_TIME As Global.System.Data.DataColumn
        
        Private columnSCRUB As Global.System.Data.DataColumn
        
        Private columnCIRCULATING As Global.System.Data.DataColumn
        
        Private columnANESTHESIONLOGIST As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnS_PERITOMY360 As Global.System.Data.DataColumn
        
        Private columnS_RECTUS_MUSCLES As Global.System.Data.DataColumn
        
        Private columnS_AN_GA As Global.System.Data.DataColumn
        
        Private columnS_AN_NEURO As Global.System.Data.DataColumn
        
        Private columnS_AN_STANDBY As Global.System.Data.DataColumn
        
        Private columnS_AN_RETROBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_PERIBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_TOPICAL As Global.System.Data.DataColumn
        
        Private columnS_EX_GA As Global.System.Data.DataColumn
        
        Private columnS_EX_RETROBULBAR As Global.System.Data.DataColumn
        
        Private columnS_EX_TOPICAL As Global.System.Data.DataColumn
        
        Private columnS_NOTE As Global.System.Data.DataColumn
        
        Private columnS_INTRAVITREAL As Global.System.Data.DataColumn
        
        Private columnS_OTHER_PROCEDURES As Global.System.Data.DataColumn
        
        Private columnS_CON_8VICRYL As Global.System.Data.DataColumn
        
        Private columnS_CON_10NYLON As Global.System.Data.DataColumn
        
        Private columnS_CON_OTHERS As Global.System.Data.DataColumn
        
        Private columnS_SUB_GENTAMICIN As Global.System.Data.DataColumn
        
        Private columnS_SUB_CEFAZOLIN As Global.System.Data.DataColumn
        
        Private columnS_SUB_DEXAMETHASONE As Global.System.Data.DataColumn
        
        Private columnS_SUB_OTHERS As Global.System.Data.DataColumn
        
        Private columnS_TOP_MAXITROL As Global.System.Data.DataColumn
        
        Private columnS_TOP_PILOCARPINE As Global.System.Data.DataColumn
        
        Private columnS_TOP_ATROPINE As Global.System.Data.DataColumn
        
        Private columnS_TOP_OTHERS As Global.System.Data.DataColumn
        
        Private columnS_SUGEON_NAME As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnSURGEON As Global.System.Data.DataColumn
        
        Private columnPATIENT_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NAME As Global.System.Data.DataColumn
        
        Private columnPATIENT_SEX As Global.System.Data.DataColumn
        
        Private columnPATIENT_AGE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_OPER_SCLERAL_BUCKLING"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLERAL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLERAL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OPERA_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERA_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RIGHT_EYEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIGHT_EYE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LEFT_EYEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEFT_EYE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTART_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCRUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIRCULATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCULATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANESTHESIONLOGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANESTHESIONLOGIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_PERITOMY360Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_PERITOMY360
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_RECTUS_MUSCLESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_RECTUS_MUSCLES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_GA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_NEUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_NEURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_STANDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_STANDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_RETROBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_RETROBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_PERIBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_PERIBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_EX_GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_EX_GA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_EX_RETROBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_EX_RETROBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_EX_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_EX_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_INTRAVITREALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_INTRAVITREAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_OTHER_PROCEDURESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_OTHER_PROCEDURES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_CON_8VICRYLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_CON_8VICRYL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_CON_10NYLONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_CON_10NYLON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_CON_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_CON_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_SUB_GENTAMICINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_SUB_GENTAMICIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_SUB_CEFAZOLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_SUB_CEFAZOLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_SUB_DEXAMETHASONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_SUB_DEXAMETHASONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_SUB_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_SUB_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_TOP_MAXITROLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_TOP_MAXITROL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_TOP_PILOCARPINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_TOP_PILOCARPINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_TOP_ATROPINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_TOP_ATROPINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_TOP_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_TOP_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_SUGEON_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_SUGEON_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_OPER_SCLERAL_BUCKLINGRow
            Get
                Return CType(Me.Rows(index),S_OPER_SCLERAL_BUCKLINGRow)
            End Get
        End Property
        
        Public Event S_OPER_SCLERAL_BUCKLINGRowChanging As S_OPER_SCLERAL_BUCKLINGRowChangeEventHandler
        
        Public Event S_OPER_SCLERAL_BUCKLINGRowChanged As S_OPER_SCLERAL_BUCKLINGRowChangeEventHandler
        
        Public Event S_OPER_SCLERAL_BUCKLINGRowDeleting As S_OPER_SCLERAL_BUCKLINGRowChangeEventHandler
        
        Public Event S_OPER_SCLERAL_BUCKLINGRowDeleted As S_OPER_SCLERAL_BUCKLINGRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_OPER_SCLERAL_BUCKLINGRow(ByVal row As S_OPER_SCLERAL_BUCKLINGRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_OPER_SCLERAL_BUCKLINGRow( _
                    ByVal parentView_OTRegistrationRowByOperationNotesScleral As View_OTRegistrationRow,  _
                    ByVal RIGHT_EYE As Boolean,  _
                    ByVal LEFT_EYE As Boolean,  _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_PERITOMY360 As Boolean,  _
                    ByVal S_RECTUS_MUSCLES As Boolean,  _
                    ByVal S_AN_GA As Boolean,  _
                    ByVal S_AN_NEURO As Boolean,  _
                    ByVal S_AN_STANDBY As Boolean,  _
                    ByVal S_AN_RETROBULBAR As Boolean,  _
                    ByVal S_AN_PERIBULBAR As Boolean,  _
                    ByVal S_AN_TOPICAL As Boolean,  _
                    ByVal S_EX_GA As Boolean,  _
                    ByVal S_EX_RETROBULBAR As Boolean,  _
                    ByVal S_EX_TOPICAL As Boolean,  _
                    ByVal S_NOTE As String,  _
                    ByVal S_INTRAVITREAL As Boolean,  _
                    ByVal S_OTHER_PROCEDURES As String,  _
                    ByVal S_CON_8VICRYL As Boolean,  _
                    ByVal S_CON_10NYLON As Boolean,  _
                    ByVal S_CON_OTHERS As String,  _
                    ByVal S_SUB_GENTAMICIN As Boolean,  _
                    ByVal S_SUB_CEFAZOLIN As Boolean,  _
                    ByVal S_SUB_DEXAMETHASONE As Boolean,  _
                    ByVal S_SUB_OTHERS As String,  _
                    ByVal S_TOP_MAXITROL As Boolean,  _
                    ByVal S_TOP_PILOCARPINE As Boolean,  _
                    ByVal S_TOP_ATROPINE As Boolean,  _
                    ByVal S_TOP_OTHERS As String,  _
                    ByVal S_SUGEON_NAME As String,  _
                    ByVal CREATE_DATE As Date,  _
                    ByVal SURGEON As String,  _
                    ByVal PATIENT_NO As Decimal,  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String) As S_OPER_SCLERAL_BUCKLINGRow
            Dim rowS_OPER_SCLERAL_BUCKLINGRow As S_OPER_SCLERAL_BUCKLINGRow = CType(Me.NewRow,S_OPER_SCLERAL_BUCKLINGRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, RIGHT_EYE, LEFT_EYE, START_TIME, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_PERITOMY360, S_RECTUS_MUSCLES, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_EX_GA, S_EX_RETROBULBAR, S_EX_TOPICAL, S_NOTE, S_INTRAVITREAL, S_OTHER_PROCEDURES, S_CON_8VICRYL, S_CON_10NYLON, S_CON_OTHERS, S_SUB_GENTAMICIN, S_SUB_CEFAZOLIN, S_SUB_DEXAMETHASONE, S_SUB_OTHERS, S_TOP_MAXITROL, S_TOP_PILOCARPINE, S_TOP_ATROPINE, S_TOP_OTHERS, S_SUGEON_NAME, CREATE_DATE, SURGEON, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE}
            If (Not (parentView_OTRegistrationRowByOperationNotesScleral) Is Nothing) Then
                columnValuesArray(1) = parentView_OTRegistrationRowByOperationNotesScleral(0)
            End If
            rowS_OPER_SCLERAL_BUCKLINGRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_OPER_SCLERAL_BUCKLINGRow)
            Return rowS_OPER_SCLERAL_BUCKLINGRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindBySCLERAL_ID(ByVal SCLERAL_ID As Decimal) As S_OPER_SCLERAL_BUCKLINGRow
            Return CType(Me.Rows.Find(New Object() {SCLERAL_ID}),S_OPER_SCLERAL_BUCKLINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_OPER_SCLERAL_BUCKLINGDataTable = CType(MyBase.Clone,S_OPER_SCLERAL_BUCKLINGDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_OPER_SCLERAL_BUCKLINGDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSCLERAL_ID = MyBase.Columns("SCLERAL_ID")
            Me.columnOPERA_NO = MyBase.Columns("OPERA_NO")
            Me.columnRIGHT_EYE = MyBase.Columns("RIGHT_EYE")
            Me.columnLEFT_EYE = MyBase.Columns("LEFT_EYE")
            Me.columnSTART_TIME = MyBase.Columns("START_TIME")
            Me.columnSCRUB = MyBase.Columns("SCRUB")
            Me.columnCIRCULATING = MyBase.Columns("CIRCULATING")
            Me.columnANESTHESIONLOGIST = MyBase.Columns("ANESTHESIONLOGIST")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnS_PERITOMY360 = MyBase.Columns("S_PERITOMY360")
            Me.columnS_RECTUS_MUSCLES = MyBase.Columns("S_RECTUS_MUSCLES")
            Me.columnS_AN_GA = MyBase.Columns("S_AN_GA")
            Me.columnS_AN_NEURO = MyBase.Columns("S_AN_NEURO")
            Me.columnS_AN_STANDBY = MyBase.Columns("S_AN_STANDBY")
            Me.columnS_AN_RETROBULBAR = MyBase.Columns("S_AN_RETROBULBAR")
            Me.columnS_AN_PERIBULBAR = MyBase.Columns("S_AN_PERIBULBAR")
            Me.columnS_AN_TOPICAL = MyBase.Columns("S_AN_TOPICAL")
            Me.columnS_EX_GA = MyBase.Columns("S_EX_GA")
            Me.columnS_EX_RETROBULBAR = MyBase.Columns("S_EX_RETROBULBAR")
            Me.columnS_EX_TOPICAL = MyBase.Columns("S_EX_TOPICAL")
            Me.columnS_NOTE = MyBase.Columns("S_NOTE")
            Me.columnS_INTRAVITREAL = MyBase.Columns("S_INTRAVITREAL")
            Me.columnS_OTHER_PROCEDURES = MyBase.Columns("S_OTHER_PROCEDURES")
            Me.columnS_CON_8VICRYL = MyBase.Columns("S_CON_8VICRYL")
            Me.columnS_CON_10NYLON = MyBase.Columns("S_CON_10NYLON")
            Me.columnS_CON_OTHERS = MyBase.Columns("S_CON_OTHERS")
            Me.columnS_SUB_GENTAMICIN = MyBase.Columns("S_SUB_GENTAMICIN")
            Me.columnS_SUB_CEFAZOLIN = MyBase.Columns("S_SUB_CEFAZOLIN")
            Me.columnS_SUB_DEXAMETHASONE = MyBase.Columns("S_SUB_DEXAMETHASONE")
            Me.columnS_SUB_OTHERS = MyBase.Columns("S_SUB_OTHERS")
            Me.columnS_TOP_MAXITROL = MyBase.Columns("S_TOP_MAXITROL")
            Me.columnS_TOP_PILOCARPINE = MyBase.Columns("S_TOP_PILOCARPINE")
            Me.columnS_TOP_ATROPINE = MyBase.Columns("S_TOP_ATROPINE")
            Me.columnS_TOP_OTHERS = MyBase.Columns("S_TOP_OTHERS")
            Me.columnS_SUGEON_NAME = MyBase.Columns("S_SUGEON_NAME")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnSURGEON = MyBase.Columns("SURGEON")
            Me.columnPATIENT_NO = MyBase.Columns("PATIENT_NO")
            Me.columnPATIENT_NAME = MyBase.Columns("PATIENT_NAME")
            Me.columnPATIENT_SEX = MyBase.Columns("PATIENT_SEX")
            Me.columnPATIENT_AGE = MyBase.Columns("PATIENT_AGE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSCLERAL_ID = New Global.System.Data.DataColumn("SCLERAL_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLERAL_ID)
            Me.columnOPERA_NO = New Global.System.Data.DataColumn("OPERA_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERA_NO)
            Me.columnRIGHT_EYE = New Global.System.Data.DataColumn("RIGHT_EYE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIGHT_EYE)
            Me.columnLEFT_EYE = New Global.System.Data.DataColumn("LEFT_EYE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEFT_EYE)
            Me.columnSTART_TIME = New Global.System.Data.DataColumn("START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTART_TIME)
            Me.columnSCRUB = New Global.System.Data.DataColumn("SCRUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRUB)
            Me.columnCIRCULATING = New Global.System.Data.DataColumn("CIRCULATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCULATING)
            Me.columnANESTHESIONLOGIST = New Global.System.Data.DataColumn("ANESTHESIONLOGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANESTHESIONLOGIST)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnS_PERITOMY360 = New Global.System.Data.DataColumn("S_PERITOMY360", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_PERITOMY360)
            Me.columnS_RECTUS_MUSCLES = New Global.System.Data.DataColumn("S_RECTUS_MUSCLES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_RECTUS_MUSCLES)
            Me.columnS_AN_GA = New Global.System.Data.DataColumn("S_AN_GA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_GA)
            Me.columnS_AN_NEURO = New Global.System.Data.DataColumn("S_AN_NEURO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_NEURO)
            Me.columnS_AN_STANDBY = New Global.System.Data.DataColumn("S_AN_STANDBY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_STANDBY)
            Me.columnS_AN_RETROBULBAR = New Global.System.Data.DataColumn("S_AN_RETROBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_RETROBULBAR)
            Me.columnS_AN_PERIBULBAR = New Global.System.Data.DataColumn("S_AN_PERIBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_PERIBULBAR)
            Me.columnS_AN_TOPICAL = New Global.System.Data.DataColumn("S_AN_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_TOPICAL)
            Me.columnS_EX_GA = New Global.System.Data.DataColumn("S_EX_GA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_EX_GA)
            Me.columnS_EX_RETROBULBAR = New Global.System.Data.DataColumn("S_EX_RETROBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_EX_RETROBULBAR)
            Me.columnS_EX_TOPICAL = New Global.System.Data.DataColumn("S_EX_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_EX_TOPICAL)
            Me.columnS_NOTE = New Global.System.Data.DataColumn("S_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_NOTE)
            Me.columnS_INTRAVITREAL = New Global.System.Data.DataColumn("S_INTRAVITREAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_INTRAVITREAL)
            Me.columnS_OTHER_PROCEDURES = New Global.System.Data.DataColumn("S_OTHER_PROCEDURES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_OTHER_PROCEDURES)
            Me.columnS_CON_8VICRYL = New Global.System.Data.DataColumn("S_CON_8VICRYL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_CON_8VICRYL)
            Me.columnS_CON_10NYLON = New Global.System.Data.DataColumn("S_CON_10NYLON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_CON_10NYLON)
            Me.columnS_CON_OTHERS = New Global.System.Data.DataColumn("S_CON_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_CON_OTHERS)
            Me.columnS_SUB_GENTAMICIN = New Global.System.Data.DataColumn("S_SUB_GENTAMICIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_SUB_GENTAMICIN)
            Me.columnS_SUB_CEFAZOLIN = New Global.System.Data.DataColumn("S_SUB_CEFAZOLIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_SUB_CEFAZOLIN)
            Me.columnS_SUB_DEXAMETHASONE = New Global.System.Data.DataColumn("S_SUB_DEXAMETHASONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_SUB_DEXAMETHASONE)
            Me.columnS_SUB_OTHERS = New Global.System.Data.DataColumn("S_SUB_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_SUB_OTHERS)
            Me.columnS_TOP_MAXITROL = New Global.System.Data.DataColumn("S_TOP_MAXITROL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_TOP_MAXITROL)
            Me.columnS_TOP_PILOCARPINE = New Global.System.Data.DataColumn("S_TOP_PILOCARPINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_TOP_PILOCARPINE)
            Me.columnS_TOP_ATROPINE = New Global.System.Data.DataColumn("S_TOP_ATROPINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_TOP_ATROPINE)
            Me.columnS_TOP_OTHERS = New Global.System.Data.DataColumn("S_TOP_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_TOP_OTHERS)
            Me.columnS_SUGEON_NAME = New Global.System.Data.DataColumn("S_SUGEON_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_SUGEON_NAME)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnSURGEON = New Global.System.Data.DataColumn("SURGEON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON)
            Me.columnPATIENT_NO = New Global.System.Data.DataColumn("PATIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NO)
            Me.columnPATIENT_NAME = New Global.System.Data.DataColumn("PATIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NAME)
            Me.columnPATIENT_SEX = New Global.System.Data.DataColumn("PATIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_SEX)
            Me.columnPATIENT_AGE = New Global.System.Data.DataColumn("PATIENT_AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_AGE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnSCLERAL_ID}, true))
            Me.columnSCLERAL_ID.AutoIncrement = true
            Me.columnSCLERAL_ID.AutoIncrementSeed = -1
            Me.columnSCLERAL_ID.AutoIncrementStep = -1
            Me.columnSCLERAL_ID.AllowDBNull = false
            Me.columnSCLERAL_ID.ReadOnly = true
            Me.columnSCLERAL_ID.Unique = true
            Me.columnSCRUB.MaxLength = 50
            Me.columnCIRCULATING.MaxLength = 50
            Me.columnANESTHESIONLOGIST.MaxLength = 50
            Me.columnDIAGNOSIS.MaxLength = 50
            Me.columnS_NOTE.MaxLength = 250
            Me.columnS_OTHER_PROCEDURES.MaxLength = 250
            Me.columnS_CON_OTHERS.MaxLength = 250
            Me.columnS_SUB_OTHERS.MaxLength = 250
            Me.columnS_TOP_OTHERS.MaxLength = 250
            Me.columnS_SUGEON_NAME.MaxLength = 50
            Me.columnSURGEON.MaxLength = 50
            Me.columnPATIENT_NAME.MaxLength = 50
            Me.columnPATIENT_SEX.MaxLength = 1
            Me.columnPATIENT_AGE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_OPER_SCLERAL_BUCKLINGRow() As S_OPER_SCLERAL_BUCKLINGRow
            Return CType(Me.NewRow,S_OPER_SCLERAL_BUCKLINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_OPER_SCLERAL_BUCKLINGRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_OPER_SCLERAL_BUCKLINGRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_OPER_SCLERAL_BUCKLINGRowChangedEvent) Is Nothing) Then
                RaiseEvent S_OPER_SCLERAL_BUCKLINGRowChanged(Me, New S_OPER_SCLERAL_BUCKLINGRowChangeEvent(CType(e.Row,S_OPER_SCLERAL_BUCKLINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_OPER_SCLERAL_BUCKLINGRowChangingEvent) Is Nothing) Then
                RaiseEvent S_OPER_SCLERAL_BUCKLINGRowChanging(Me, New S_OPER_SCLERAL_BUCKLINGRowChangeEvent(CType(e.Row,S_OPER_SCLERAL_BUCKLINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_OPER_SCLERAL_BUCKLINGRowDeletedEvent) Is Nothing) Then
                RaiseEvent S_OPER_SCLERAL_BUCKLINGRowDeleted(Me, New S_OPER_SCLERAL_BUCKLINGRowChangeEvent(CType(e.Row,S_OPER_SCLERAL_BUCKLINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_OPER_SCLERAL_BUCKLINGRowDeletingEvent) Is Nothing) Then
                RaiseEvent S_OPER_SCLERAL_BUCKLINGRowDeleting(Me, New S_OPER_SCLERAL_BUCKLINGRowChangeEvent(CType(e.Row,S_OPER_SCLERAL_BUCKLINGRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_OPER_SCLERAL_BUCKLINGRow(ByVal row As S_OPER_SCLERAL_BUCKLINGRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_OPER_SCLERAL_BUCKLINGDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TblDoctorDataTable
        Inherits Global.System.Data.TypedTableBase(Of TblDoctorRow)
        
        Private columnDoctorNo As Global.System.Data.DataColumn
        
        Private columnDoctorName As Global.System.Data.DataColumn
        
        Private columnSex As Global.System.Data.DataColumn
        
        Private columnAge As Global.System.Data.DataColumn
        
        Private columnTel As Global.System.Data.DataColumn
        
        Private columnJob As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TblDoctor"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DoctorNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDoctorNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DoctorNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDoctorName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TelColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTel
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property JobColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnJob
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TblDoctorRow
            Get
                Return CType(Me.Rows(index),TblDoctorRow)
            End Get
        End Property
        
        Public Event TblDoctorRowChanging As TblDoctorRowChangeEventHandler
        
        Public Event TblDoctorRowChanged As TblDoctorRowChangeEventHandler
        
        Public Event TblDoctorRowDeleting As TblDoctorRowChangeEventHandler
        
        Public Event TblDoctorRowDeleted As TblDoctorRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTblDoctorRow(ByVal row As TblDoctorRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTblDoctorRow(ByVal DoctorName As String, ByVal Sex As String, ByVal Age As Decimal, ByVal Tel As String, ByVal Job As String) As TblDoctorRow
            Dim rowTblDoctorRow As TblDoctorRow = CType(Me.NewRow,TblDoctorRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DoctorName, Sex, Age, Tel, Job}
            rowTblDoctorRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTblDoctorRow)
            Return rowTblDoctorRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByDoctorNo(ByVal DoctorNo As Decimal) As TblDoctorRow
            Return CType(Me.Rows.Find(New Object() {DoctorNo}),TblDoctorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TblDoctorDataTable = CType(MyBase.Clone,TblDoctorDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TblDoctorDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnDoctorNo = MyBase.Columns("DoctorNo")
            Me.columnDoctorName = MyBase.Columns("DoctorName")
            Me.columnSex = MyBase.Columns("Sex")
            Me.columnAge = MyBase.Columns("Age")
            Me.columnTel = MyBase.Columns("Tel")
            Me.columnJob = MyBase.Columns("Job")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnDoctorNo = New Global.System.Data.DataColumn("DoctorNo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDoctorNo)
            Me.columnDoctorName = New Global.System.Data.DataColumn("DoctorName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDoctorName)
            Me.columnSex = New Global.System.Data.DataColumn("Sex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSex)
            Me.columnAge = New Global.System.Data.DataColumn("Age", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAge)
            Me.columnTel = New Global.System.Data.DataColumn("Tel", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTel)
            Me.columnJob = New Global.System.Data.DataColumn("Job", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnJob)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDoctorNo}, true))
            Me.columnDoctorNo.AutoIncrement = true
            Me.columnDoctorNo.AutoIncrementSeed = -1
            Me.columnDoctorNo.AutoIncrementStep = -1
            Me.columnDoctorNo.AllowDBNull = false
            Me.columnDoctorNo.ReadOnly = true
            Me.columnDoctorNo.Unique = true
            Me.columnDoctorName.MaxLength = 50
            Me.columnSex.MaxLength = 1
            Me.columnTel.MaxLength = 50
            Me.columnJob.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTblDoctorRow() As TblDoctorRow
            Return CType(Me.NewRow,TblDoctorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TblDoctorRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TblDoctorRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TblDoctorRowChangedEvent) Is Nothing) Then
                RaiseEvent TblDoctorRowChanged(Me, New TblDoctorRowChangeEvent(CType(e.Row,TblDoctorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TblDoctorRowChangingEvent) Is Nothing) Then
                RaiseEvent TblDoctorRowChanging(Me, New TblDoctorRowChangeEvent(CType(e.Row,TblDoctorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TblDoctorRowDeletedEvent) Is Nothing) Then
                RaiseEvent TblDoctorRowDeleted(Me, New TblDoctorRowChangeEvent(CType(e.Row,TblDoctorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TblDoctorRowDeletingEvent) Is Nothing) Then
                RaiseEvent TblDoctorRowDeleting(Me, New TblDoctorRowChangeEvent(CType(e.Row,TblDoctorRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTblDoctorRow(ByVal row As TblDoctorRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TblDoctorDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TblSurgeryDataTable
        Inherits Global.System.Data.TypedTableBase(Of TblSurgeryRow)
        
        Private columnSID As Global.System.Data.DataColumn
        
        Private columnSurgery As Global.System.Data.DataColumn
        
        Private columnDescription As Global.System.Data.DataColumn
        
        Private columnCode As Global.System.Data.DataColumn
        
        Private columnType As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TblSurgery"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SurgeryColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurgery
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescriptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescription
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TblSurgeryRow
            Get
                Return CType(Me.Rows(index),TblSurgeryRow)
            End Get
        End Property
        
        Public Event TblSurgeryRowChanging As TblSurgeryRowChangeEventHandler
        
        Public Event TblSurgeryRowChanged As TblSurgeryRowChangeEventHandler
        
        Public Event TblSurgeryRowDeleting As TblSurgeryRowChangeEventHandler
        
        Public Event TblSurgeryRowDeleted As TblSurgeryRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddTblSurgeryRow(ByVal row As TblSurgeryRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddTblSurgeryRow(ByVal Surgery As String, ByVal Description As String, ByVal Code As String, ByVal Type As Boolean) As TblSurgeryRow
            Dim rowTblSurgeryRow As TblSurgeryRow = CType(Me.NewRow,TblSurgeryRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Surgery, Description, Code, Type}
            rowTblSurgeryRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTblSurgeryRow)
            Return rowTblSurgeryRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TblSurgeryDataTable = CType(MyBase.Clone,TblSurgeryDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TblSurgeryDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnSID = MyBase.Columns("SID")
            Me.columnSurgery = MyBase.Columns("Surgery")
            Me.columnDescription = MyBase.Columns("Description")
            Me.columnCode = MyBase.Columns("Code")
            Me.columnType = MyBase.Columns("Type")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnSID = New Global.System.Data.DataColumn("SID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSID)
            Me.columnSurgery = New Global.System.Data.DataColumn("Surgery", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurgery)
            Me.columnDescription = New Global.System.Data.DataColumn("Description", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescription)
            Me.columnCode = New Global.System.Data.DataColumn("Code", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCode)
            Me.columnType = New Global.System.Data.DataColumn("Type", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnType)
            Me.columnSID.AutoIncrement = true
            Me.columnSID.AutoIncrementSeed = -1
            Me.columnSID.AutoIncrementStep = -1
            Me.columnSID.AllowDBNull = false
            Me.columnSID.ReadOnly = true
            Me.columnSurgery.MaxLength = 100
            Me.columnDescription.MaxLength = 100
            Me.columnCode.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewTblSurgeryRow() As TblSurgeryRow
            Return CType(Me.NewRow,TblSurgeryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TblSurgeryRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TblSurgeryRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TblSurgeryRowChangedEvent) Is Nothing) Then
                RaiseEvent TblSurgeryRowChanged(Me, New TblSurgeryRowChangeEvent(CType(e.Row,TblSurgeryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TblSurgeryRowChangingEvent) Is Nothing) Then
                RaiseEvent TblSurgeryRowChanging(Me, New TblSurgeryRowChangeEvent(CType(e.Row,TblSurgeryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TblSurgeryRowDeletedEvent) Is Nothing) Then
                RaiseEvent TblSurgeryRowDeleted(Me, New TblSurgeryRowChangeEvent(CType(e.Row,TblSurgeryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TblSurgeryRowDeletingEvent) Is Nothing) Then
                RaiseEvent TblSurgeryRowDeleting(Me, New TblSurgeryRowChangeEvent(CType(e.Row,TblSurgeryRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveTblSurgeryRow(ByVal row As TblSurgeryRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TblSurgeryDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class View_OTRegistrationDataTable
        Inherits Global.System.Data.TypedTableBase(Of View_OTRegistrationRow)
        
        Private columnOTNo As Global.System.Data.DataColumn
        
        Private columnNewInPatientNo As Global.System.Data.DataColumn
        
        Private columnPatientNo As Global.System.Data.DataColumn
        
        Private columnNameKhmer As Global.System.Data.DataColumn
        
        Private columnAge As Global.System.Data.DataColumn
        
        Private columnSex As Global.System.Data.DataColumn
        
        Private columnAddress As Global.System.Data.DataColumn
        
        Private columnOperationTime As Global.System.Data.DataColumn
        
        Private columnAnesthesia As Global.System.Data.DataColumn
        
        Private columnAnesthetist As Global.System.Data.DataColumn
        
        Private columnEye As Global.System.Data.DataColumn
        
        Private columnOperationType As Global.System.Data.DataColumn
        
        Private columnIOL As Global.System.Data.DataColumn
        
        Private columnSurgeon As Global.System.Data.DataColumn
        
        Private columnAssistant As Global.System.Data.DataColumn
        
        Private columnCirculation As Global.System.Data.DataColumn
        
        Private columnCompli As Global.System.Data.DataColumn
        
        Private columnCreateDate As Global.System.Data.DataColumn
        
        Private columnStatus As Global.System.Data.DataColumn
        
        Private columnDateOperated As Global.System.Data.DataColumn
        
        Private columnOthers As Global.System.Data.DataColumn
        
        Private columnWaiting As Global.System.Data.DataColumn
        
        Private columnDeleteOption As Global.System.Data.DataColumn
        
        Private columnIOL_ID As Global.System.Data.DataColumn
        
        Private columnIOL_ID_OLD As Global.System.Data.DataColumn
        
        Private columnNameEng As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "View_OTRegistration"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NewInPatientNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNewInPatientNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PatientNoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPatientNo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameKhmerColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameKhmer
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AgeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAge
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SexColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSex
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationTimeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationTime
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AnesthesiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnesthesia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AnesthetistColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAnesthetist
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EyeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEye
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OperationTypeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOperationType
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SurgeonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSurgeon
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AssistantColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAssistant
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CirculationColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCirculation
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CompliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCompli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CreateDateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCreateDate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property StatusColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStatus
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DateOperatedColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDateOperated
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OthersColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOthers
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property WaitingColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnWaiting
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DeleteOptionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDeleteOption
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_ID_OLDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_ID_OLD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NameEngColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNameEng
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As View_OTRegistrationRow
            Get
                Return CType(Me.Rows(index),View_OTRegistrationRow)
            End Get
        End Property
        
        Public Event View_OTRegistrationRowChanging As View_OTRegistrationRowChangeEventHandler
        
        Public Event View_OTRegistrationRowChanged As View_OTRegistrationRowChangeEventHandler
        
        Public Event View_OTRegistrationRowDeleting As View_OTRegistrationRowChangeEventHandler
        
        Public Event View_OTRegistrationRowDeleted As View_OTRegistrationRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddView_OTRegistrationRow(ByVal row As View_OTRegistrationRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddView_OTRegistrationRow( _
                    ByVal OTNo As Decimal,  _
                    ByVal NewInPatientNo As Decimal,  _
                    ByVal PatientNo As Decimal,  _
                    ByVal NameKhmer As String,  _
                    ByVal Age As Decimal,  _
                    ByVal Sex As String,  _
                    ByVal Address As String,  _
                    ByVal OperationTime As String,  _
                    ByVal Anesthesia As String,  _
                    ByVal Anesthetist As String,  _
                    ByVal Eye As String,  _
                    ByVal OperationType As String,  _
                    ByVal IOL As String,  _
                    ByVal Surgeon As String,  _
                    ByVal Assistant As String,  _
                    ByVal Circulation As String,  _
                    ByVal Compli As String,  _
                    ByVal CreateDate As Date,  _
                    ByVal Status As Boolean,  _
                    ByVal DateOperated As Date,  _
                    ByVal Others As String,  _
                    ByVal Waiting As Decimal,  _
                    ByVal DeleteOption As Boolean,  _
                    ByVal IOL_ID As Decimal,  _
                    ByVal IOL_ID_OLD As Decimal,  _
                    ByVal NameEng As String) As View_OTRegistrationRow
            Dim rowView_OTRegistrationRow As View_OTRegistrationRow = CType(Me.NewRow,View_OTRegistrationRow)
            Dim columnValuesArray() As Object = New Object() {OTNo, NewInPatientNo, PatientNo, NameKhmer, Age, Sex, Address, OperationTime, Anesthesia, Anesthetist, Eye, OperationType, IOL, Surgeon, Assistant, Circulation, Compli, CreateDate, Status, DateOperated, Others, Waiting, DeleteOption, IOL_ID, IOL_ID_OLD, NameEng}
            rowView_OTRegistrationRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowView_OTRegistrationRow)
            Return rowView_OTRegistrationRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As View_OTRegistrationDataTable = CType(MyBase.Clone,View_OTRegistrationDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New View_OTRegistrationDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnOTNo = MyBase.Columns("OTNo")
            Me.columnNewInPatientNo = MyBase.Columns("NewInPatientNo")
            Me.columnPatientNo = MyBase.Columns("PatientNo")
            Me.columnNameKhmer = MyBase.Columns("NameKhmer")
            Me.columnAge = MyBase.Columns("Age")
            Me.columnSex = MyBase.Columns("Sex")
            Me.columnAddress = MyBase.Columns("Address")
            Me.columnOperationTime = MyBase.Columns("OperationTime")
            Me.columnAnesthesia = MyBase.Columns("Anesthesia")
            Me.columnAnesthetist = MyBase.Columns("Anesthetist")
            Me.columnEye = MyBase.Columns("Eye")
            Me.columnOperationType = MyBase.Columns("OperationType")
            Me.columnIOL = MyBase.Columns("IOL")
            Me.columnSurgeon = MyBase.Columns("Surgeon")
            Me.columnAssistant = MyBase.Columns("Assistant")
            Me.columnCirculation = MyBase.Columns("Circulation")
            Me.columnCompli = MyBase.Columns("Compli")
            Me.columnCreateDate = MyBase.Columns("CreateDate")
            Me.columnStatus = MyBase.Columns("Status")
            Me.columnDateOperated = MyBase.Columns("DateOperated")
            Me.columnOthers = MyBase.Columns("Others")
            Me.columnWaiting = MyBase.Columns("Waiting")
            Me.columnDeleteOption = MyBase.Columns("DeleteOption")
            Me.columnIOL_ID = MyBase.Columns("IOL_ID")
            Me.columnIOL_ID_OLD = MyBase.Columns("IOL_ID_OLD")
            Me.columnNameEng = MyBase.Columns("NameEng")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnOTNo = New Global.System.Data.DataColumn("OTNo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTNo)
            Me.columnNewInPatientNo = New Global.System.Data.DataColumn("NewInPatientNo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNewInPatientNo)
            Me.columnPatientNo = New Global.System.Data.DataColumn("PatientNo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPatientNo)
            Me.columnNameKhmer = New Global.System.Data.DataColumn("NameKhmer", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameKhmer)
            Me.columnAge = New Global.System.Data.DataColumn("Age", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAge)
            Me.columnSex = New Global.System.Data.DataColumn("Sex", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSex)
            Me.columnAddress = New Global.System.Data.DataColumn("Address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAddress)
            Me.columnOperationTime = New Global.System.Data.DataColumn("OperationTime", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationTime)
            Me.columnAnesthesia = New Global.System.Data.DataColumn("Anesthesia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnesthesia)
            Me.columnAnesthetist = New Global.System.Data.DataColumn("Anesthetist", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAnesthetist)
            Me.columnEye = New Global.System.Data.DataColumn("Eye", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEye)
            Me.columnOperationType = New Global.System.Data.DataColumn("OperationType", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOperationType)
            Me.columnIOL = New Global.System.Data.DataColumn("IOL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL)
            Me.columnSurgeon = New Global.System.Data.DataColumn("Surgeon", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSurgeon)
            Me.columnAssistant = New Global.System.Data.DataColumn("Assistant", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAssistant)
            Me.columnCirculation = New Global.System.Data.DataColumn("Circulation", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCirculation)
            Me.columnCompli = New Global.System.Data.DataColumn("Compli", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCompli)
            Me.columnCreateDate = New Global.System.Data.DataColumn("CreateDate", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCreateDate)
            Me.columnStatus = New Global.System.Data.DataColumn("Status", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStatus)
            Me.columnDateOperated = New Global.System.Data.DataColumn("DateOperated", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDateOperated)
            Me.columnOthers = New Global.System.Data.DataColumn("Others", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOthers)
            Me.columnWaiting = New Global.System.Data.DataColumn("Waiting", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnWaiting)
            Me.columnDeleteOption = New Global.System.Data.DataColumn("DeleteOption", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDeleteOption)
            Me.columnIOL_ID = New Global.System.Data.DataColumn("IOL_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_ID)
            Me.columnIOL_ID_OLD = New Global.System.Data.DataColumn("IOL_ID_OLD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_ID_OLD)
            Me.columnNameEng = New Global.System.Data.DataColumn("NameEng", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNameEng)
            Me.columnOTNo.AllowDBNull = false
            Me.columnNewInPatientNo.AllowDBNull = false
            Me.columnPatientNo.AllowDBNull = false
            Me.columnNameKhmer.MaxLength = 50
            Me.columnSex.MaxLength = 1
            Me.columnAddress.MaxLength = 1000
            Me.columnOperationTime.MaxLength = 50
            Me.columnAnesthesia.MaxLength = 50
            Me.columnAnesthetist.MaxLength = 50
            Me.columnEye.MaxLength = 50
            Me.columnOperationType.MaxLength = 50
            Me.columnIOL.MaxLength = 50
            Me.columnSurgeon.MaxLength = 50
            Me.columnAssistant.MaxLength = 50
            Me.columnCirculation.MaxLength = 50
            Me.columnCompli.MaxLength = 50
            Me.columnOthers.MaxLength = 200
            Me.columnNameEng.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewView_OTRegistrationRow() As View_OTRegistrationRow
            Return CType(Me.NewRow,View_OTRegistrationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New View_OTRegistrationRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(View_OTRegistrationRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.View_OTRegistrationRowChangedEvent) Is Nothing) Then
                RaiseEvent View_OTRegistrationRowChanged(Me, New View_OTRegistrationRowChangeEvent(CType(e.Row,View_OTRegistrationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.View_OTRegistrationRowChangingEvent) Is Nothing) Then
                RaiseEvent View_OTRegistrationRowChanging(Me, New View_OTRegistrationRowChangeEvent(CType(e.Row,View_OTRegistrationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.View_OTRegistrationRowDeletedEvent) Is Nothing) Then
                RaiseEvent View_OTRegistrationRowDeleted(Me, New View_OTRegistrationRowChangeEvent(CType(e.Row,View_OTRegistrationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.View_OTRegistrationRowDeletingEvent) Is Nothing) Then
                RaiseEvent View_OTRegistrationRowDeleting(Me, New View_OTRegistrationRowChangeEvent(CType(e.Row,View_OTRegistrationRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveView_OTRegistrationRow(ByVal row As View_OTRegistrationRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "View_OTRegistrationDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_OPER_INJECTIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_OPER_INJECTIONRow)
        
        Private columnINJECTION_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnOPERA_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NAME As Global.System.Data.DataColumn
        
        Private columnPATIENT_SEX As Global.System.Data.DataColumn
        
        Private columnPATIENT_AGE As Global.System.Data.DataColumn
        
        Private columnSTART_TIME As Global.System.Data.DataColumn
        
        Private columnSURGEON As Global.System.Data.DataColumn
        
        Private columnSCRUB As Global.System.Data.DataColumn
        
        Private columnCIRCULATING As Global.System.Data.DataColumn
        
        Private columnANESTHESIONLOGIST As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnIVTA As Global.System.Data.DataColumn
        
        Private columnAVASTIN As Global.System.Data.DataColumn
        
        Private columnLUCENTIS As Global.System.Data.DataColumn
        
        Private columnAN_TOPICAL As Global.System.Data.DataColumn
        
        Private columnAN_SUBCONJUNCTIVAL As Global.System.Data.DataColumn
        
        Private columnFULL_PRE_OP As Global.System.Data.DataColumn
        
        Private columnPATIENT_FULL As Global.System.Data.DataColumn
        
        Private columnINTRA_TRIAMCINOLONE As Global.System.Data.DataColumn
        
        Private columnINTRA_TRIAM_DOSE As Global.System.Data.DataColumn
        
        Private columnINTRA_AVASTIN As Global.System.Data.DataColumn
        
        Private columnINTRA_AVASTIN_DOSE As Global.System.Data.DataColumn
        
        Private columnINTRA_LUCENTIS As Global.System.Data.DataColumn
        
        Private columnINTRA_LUCENTIS_DOSE As Global.System.Data.DataColumn
        
        Private columnALPHAGAM As Global.System.Data.DataColumn
        
        Private columnNEO_SYNEPHRINE As Global.System.Data.DataColumn
        
        Private columnPOLY_OPH_TROPICAL As Global.System.Data.DataColumn
        
        Private columnVIGAMOX_TROPICAL As Global.System.Data.DataColumn
        
        Private columnVIGAMO_TROPICAL_NOTE As Global.System.Data.DataColumn
        
        Private columnMAXITROL_EYE_OITMENT As Global.System.Data.DataColumn
        
        Private columnPATH As Global.System.Data.DataColumn
        
        Private columnNO_COMPLICATION As Global.System.Data.DataColumn
        
        Private columnNOTE As Global.System.Data.DataColumn
        
        Private columnSURGEON_SIGNATURE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_OPER_INJECTION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INJECTION_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINJECTION_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OPERA_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERA_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTART_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCRUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIRCULATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCULATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANESTHESIONLOGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANESTHESIONLOGIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AVASTINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAVASTIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LUCENTISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLUCENTIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AN_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAN_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AN_SUBCONJUNCTIVALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAN_SUBCONJUNCTIVAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FULL_PRE_OPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFULL_PRE_OP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_FULLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_FULL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INTRA_TRIAMCINOLONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTRA_TRIAMCINOLONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INTRA_TRIAM_DOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTRA_TRIAM_DOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INTRA_AVASTINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTRA_AVASTIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INTRA_AVASTIN_DOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTRA_AVASTIN_DOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INTRA_LUCENTISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTRA_LUCENTIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INTRA_LUCENTIS_DOSEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTRA_LUCENTIS_DOSE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALPHAGAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnALPHAGAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NEO_SYNEPHRINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNEO_SYNEPHRINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POLY_OPH_TROPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOLY_OPH_TROPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIGAMOX_TROPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIGAMOX_TROPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIGAMO_TROPICAL_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIGAMO_TROPICAL_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MAXITROL_EYE_OITMENTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMAXITROL_EYE_OITMENT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NO_COMPLICATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNO_COMPLICATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEON_SIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON_SIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_OPER_INJECTIONRow
            Get
                Return CType(Me.Rows(index),S_OPER_INJECTIONRow)
            End Get
        End Property
        
        Public Event S_OPER_INJECTIONRowChanging As S_OPER_INJECTIONRowChangeEventHandler
        
        Public Event S_OPER_INJECTIONRowChanged As S_OPER_INJECTIONRowChangeEventHandler
        
        Public Event S_OPER_INJECTIONRowDeleting As S_OPER_INJECTIONRowChangeEventHandler
        
        Public Event S_OPER_INJECTIONRowDeleted As S_OPER_INJECTIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_OPER_INJECTIONRow(ByVal row As S_OPER_INJECTIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_OPER_INJECTIONRow( _
                    ByVal CREATE_DATE As Date,  _
                    ByVal parentView_OTRegistrationRowByOperInjection As View_OTRegistrationRow,  _
                    ByVal PATIENT_NO As Decimal,  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal IVTA As Boolean,  _
                    ByVal AVASTIN As Boolean,  _
                    ByVal LUCENTIS As Boolean,  _
                    ByVal AN_TOPICAL As Boolean,  _
                    ByVal AN_SUBCONJUNCTIVAL As Boolean,  _
                    ByVal FULL_PRE_OP As Boolean,  _
                    ByVal PATIENT_FULL As Boolean,  _
                    ByVal INTRA_TRIAMCINOLONE As Boolean,  _
                    ByVal INTRA_TRIAM_DOSE As String,  _
                    ByVal INTRA_AVASTIN As Boolean,  _
                    ByVal INTRA_AVASTIN_DOSE As String,  _
                    ByVal INTRA_LUCENTIS As Boolean,  _
                    ByVal INTRA_LUCENTIS_DOSE As String,  _
                    ByVal ALPHAGAM As Boolean,  _
                    ByVal NEO_SYNEPHRINE As Boolean,  _
                    ByVal POLY_OPH_TROPICAL As Boolean,  _
                    ByVal VIGAMOX_TROPICAL As Boolean,  _
                    ByVal VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal MAXITROL_EYE_OITMENT As Boolean,  _
                    ByVal PATH As Boolean,  _
                    ByVal NO_COMPLICATION As Boolean,  _
                    ByVal NOTE As String,  _
                    ByVal SURGEON_SIGNATURE As String) As S_OPER_INJECTIONRow
            Dim rowS_OPER_INJECTIONRow As S_OPER_INJECTIONRow = CType(Me.NewRow,S_OPER_INJECTIONRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CREATE_DATE, Nothing, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, IVTA, AVASTIN, LUCENTIS, AN_TOPICAL, AN_SUBCONJUNCTIVAL, FULL_PRE_OP, PATIENT_FULL, INTRA_TRIAMCINOLONE, INTRA_TRIAM_DOSE, INTRA_AVASTIN, INTRA_AVASTIN_DOSE, INTRA_LUCENTIS, INTRA_LUCENTIS_DOSE, ALPHAGAM, NEO_SYNEPHRINE, POLY_OPH_TROPICAL, VIGAMOX_TROPICAL, VIGAMO_TROPICAL_NOTE, MAXITROL_EYE_OITMENT, PATH, NO_COMPLICATION, NOTE, SURGEON_SIGNATURE}
            If (Not (parentView_OTRegistrationRowByOperInjection) Is Nothing) Then
                columnValuesArray(2) = parentView_OTRegistrationRowByOperInjection(0)
            End If
            rowS_OPER_INJECTIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_OPER_INJECTIONRow)
            Return rowS_OPER_INJECTIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByINJECTION_ID(ByVal INJECTION_ID As Decimal) As S_OPER_INJECTIONRow
            Return CType(Me.Rows.Find(New Object() {INJECTION_ID}),S_OPER_INJECTIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_OPER_INJECTIONDataTable = CType(MyBase.Clone,S_OPER_INJECTIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_OPER_INJECTIONDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnINJECTION_ID = MyBase.Columns("INJECTION_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnOPERA_NO = MyBase.Columns("OPERA_NO")
            Me.columnPATIENT_NO = MyBase.Columns("PATIENT_NO")
            Me.columnPATIENT_NAME = MyBase.Columns("PATIENT_NAME")
            Me.columnPATIENT_SEX = MyBase.Columns("PATIENT_SEX")
            Me.columnPATIENT_AGE = MyBase.Columns("PATIENT_AGE")
            Me.columnSTART_TIME = MyBase.Columns("START_TIME")
            Me.columnSURGEON = MyBase.Columns("SURGEON")
            Me.columnSCRUB = MyBase.Columns("SCRUB")
            Me.columnCIRCULATING = MyBase.Columns("CIRCULATING")
            Me.columnANESTHESIONLOGIST = MyBase.Columns("ANESTHESIONLOGIST")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnIVTA = MyBase.Columns("IVTA")
            Me.columnAVASTIN = MyBase.Columns("AVASTIN")
            Me.columnLUCENTIS = MyBase.Columns("LUCENTIS")
            Me.columnAN_TOPICAL = MyBase.Columns("AN_TOPICAL")
            Me.columnAN_SUBCONJUNCTIVAL = MyBase.Columns("AN_SUBCONJUNCTIVAL")
            Me.columnFULL_PRE_OP = MyBase.Columns("FULL_PRE_OP")
            Me.columnPATIENT_FULL = MyBase.Columns("PATIENT_FULL")
            Me.columnINTRA_TRIAMCINOLONE = MyBase.Columns("INTRA_TRIAMCINOLONE")
            Me.columnINTRA_TRIAM_DOSE = MyBase.Columns("INTRA_TRIAM_DOSE")
            Me.columnINTRA_AVASTIN = MyBase.Columns("INTRA_AVASTIN")
            Me.columnINTRA_AVASTIN_DOSE = MyBase.Columns("INTRA_AVASTIN_DOSE")
            Me.columnINTRA_LUCENTIS = MyBase.Columns("INTRA_LUCENTIS")
            Me.columnINTRA_LUCENTIS_DOSE = MyBase.Columns("INTRA_LUCENTIS_DOSE")
            Me.columnALPHAGAM = MyBase.Columns("ALPHAGAM")
            Me.columnNEO_SYNEPHRINE = MyBase.Columns("NEO_SYNEPHRINE")
            Me.columnPOLY_OPH_TROPICAL = MyBase.Columns("POLY_OPH_TROPICAL")
            Me.columnVIGAMOX_TROPICAL = MyBase.Columns("VIGAMOX_TROPICAL")
            Me.columnVIGAMO_TROPICAL_NOTE = MyBase.Columns("VIGAMO_TROPICAL_NOTE")
            Me.columnMAXITROL_EYE_OITMENT = MyBase.Columns("MAXITROL_EYE_OITMENT")
            Me.columnPATH = MyBase.Columns("PATH")
            Me.columnNO_COMPLICATION = MyBase.Columns("NO_COMPLICATION")
            Me.columnNOTE = MyBase.Columns("NOTE")
            Me.columnSURGEON_SIGNATURE = MyBase.Columns("SURGEON_SIGNATURE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnINJECTION_ID = New Global.System.Data.DataColumn("INJECTION_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINJECTION_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnOPERA_NO = New Global.System.Data.DataColumn("OPERA_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERA_NO)
            Me.columnPATIENT_NO = New Global.System.Data.DataColumn("PATIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NO)
            Me.columnPATIENT_NAME = New Global.System.Data.DataColumn("PATIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NAME)
            Me.columnPATIENT_SEX = New Global.System.Data.DataColumn("PATIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_SEX)
            Me.columnPATIENT_AGE = New Global.System.Data.DataColumn("PATIENT_AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_AGE)
            Me.columnSTART_TIME = New Global.System.Data.DataColumn("START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTART_TIME)
            Me.columnSURGEON = New Global.System.Data.DataColumn("SURGEON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON)
            Me.columnSCRUB = New Global.System.Data.DataColumn("SCRUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRUB)
            Me.columnCIRCULATING = New Global.System.Data.DataColumn("CIRCULATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCULATING)
            Me.columnANESTHESIONLOGIST = New Global.System.Data.DataColumn("ANESTHESIONLOGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANESTHESIONLOGIST)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnIVTA = New Global.System.Data.DataColumn("IVTA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVTA)
            Me.columnAVASTIN = New Global.System.Data.DataColumn("AVASTIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAVASTIN)
            Me.columnLUCENTIS = New Global.System.Data.DataColumn("LUCENTIS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLUCENTIS)
            Me.columnAN_TOPICAL = New Global.System.Data.DataColumn("AN_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAN_TOPICAL)
            Me.columnAN_SUBCONJUNCTIVAL = New Global.System.Data.DataColumn("AN_SUBCONJUNCTIVAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAN_SUBCONJUNCTIVAL)
            Me.columnFULL_PRE_OP = New Global.System.Data.DataColumn("FULL_PRE_OP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFULL_PRE_OP)
            Me.columnPATIENT_FULL = New Global.System.Data.DataColumn("PATIENT_FULL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_FULL)
            Me.columnINTRA_TRIAMCINOLONE = New Global.System.Data.DataColumn("INTRA_TRIAMCINOLONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTRA_TRIAMCINOLONE)
            Me.columnINTRA_TRIAM_DOSE = New Global.System.Data.DataColumn("INTRA_TRIAM_DOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTRA_TRIAM_DOSE)
            Me.columnINTRA_AVASTIN = New Global.System.Data.DataColumn("INTRA_AVASTIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTRA_AVASTIN)
            Me.columnINTRA_AVASTIN_DOSE = New Global.System.Data.DataColumn("INTRA_AVASTIN_DOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTRA_AVASTIN_DOSE)
            Me.columnINTRA_LUCENTIS = New Global.System.Data.DataColumn("INTRA_LUCENTIS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTRA_LUCENTIS)
            Me.columnINTRA_LUCENTIS_DOSE = New Global.System.Data.DataColumn("INTRA_LUCENTIS_DOSE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTRA_LUCENTIS_DOSE)
            Me.columnALPHAGAM = New Global.System.Data.DataColumn("ALPHAGAM", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALPHAGAM)
            Me.columnNEO_SYNEPHRINE = New Global.System.Data.DataColumn("NEO_SYNEPHRINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNEO_SYNEPHRINE)
            Me.columnPOLY_OPH_TROPICAL = New Global.System.Data.DataColumn("POLY_OPH_TROPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOLY_OPH_TROPICAL)
            Me.columnVIGAMOX_TROPICAL = New Global.System.Data.DataColumn("VIGAMOX_TROPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIGAMOX_TROPICAL)
            Me.columnVIGAMO_TROPICAL_NOTE = New Global.System.Data.DataColumn("VIGAMO_TROPICAL_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIGAMO_TROPICAL_NOTE)
            Me.columnMAXITROL_EYE_OITMENT = New Global.System.Data.DataColumn("MAXITROL_EYE_OITMENT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMAXITROL_EYE_OITMENT)
            Me.columnPATH = New Global.System.Data.DataColumn("PATH", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATH)
            Me.columnNO_COMPLICATION = New Global.System.Data.DataColumn("NO_COMPLICATION", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNO_COMPLICATION)
            Me.columnNOTE = New Global.System.Data.DataColumn("NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOTE)
            Me.columnSURGEON_SIGNATURE = New Global.System.Data.DataColumn("SURGEON_SIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON_SIGNATURE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnINJECTION_ID}, true))
            Me.columnINJECTION_ID.AutoIncrement = true
            Me.columnINJECTION_ID.AutoIncrementSeed = -1
            Me.columnINJECTION_ID.AutoIncrementStep = -1
            Me.columnINJECTION_ID.AllowDBNull = false
            Me.columnINJECTION_ID.ReadOnly = true
            Me.columnINJECTION_ID.Unique = true
            Me.columnPATIENT_NAME.MaxLength = 50
            Me.columnPATIENT_SEX.MaxLength = 1
            Me.columnPATIENT_AGE.MaxLength = 50
            Me.columnSTART_TIME.MaxLength = 50
            Me.columnSURGEON.MaxLength = 50
            Me.columnSCRUB.MaxLength = 50
            Me.columnCIRCULATING.MaxLength = 50
            Me.columnANESTHESIONLOGIST.MaxLength = 50
            Me.columnDIAGNOSIS.MaxLength = 50
            Me.columnINTRA_TRIAM_DOSE.MaxLength = 150
            Me.columnINTRA_AVASTIN_DOSE.MaxLength = 150
            Me.columnINTRA_LUCENTIS_DOSE.MaxLength = 150
            Me.columnVIGAMO_TROPICAL_NOTE.MaxLength = 150
            Me.columnNOTE.MaxLength = 250
            Me.columnSURGEON_SIGNATURE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_OPER_INJECTIONRow() As S_OPER_INJECTIONRow
            Return CType(Me.NewRow,S_OPER_INJECTIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_OPER_INJECTIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_OPER_INJECTIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_OPER_INJECTIONRowChangedEvent) Is Nothing) Then
                RaiseEvent S_OPER_INJECTIONRowChanged(Me, New S_OPER_INJECTIONRowChangeEvent(CType(e.Row,S_OPER_INJECTIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_OPER_INJECTIONRowChangingEvent) Is Nothing) Then
                RaiseEvent S_OPER_INJECTIONRowChanging(Me, New S_OPER_INJECTIONRowChangeEvent(CType(e.Row,S_OPER_INJECTIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_OPER_INJECTIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent S_OPER_INJECTIONRowDeleted(Me, New S_OPER_INJECTIONRowChangeEvent(CType(e.Row,S_OPER_INJECTIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_OPER_INJECTIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent S_OPER_INJECTIONRowDeleting(Me, New S_OPER_INJECTIONRowChangeEvent(CType(e.Row,S_OPER_INJECTIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_OPER_INJECTIONRow(ByVal row As S_OPER_INJECTIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_OPER_INJECTIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_OPER_GENERAL_OPERATIVEDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_OPER_GENERAL_OPERATIVERow)
        
        Private columnGENERAL_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnOPERA_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NAME As Global.System.Data.DataColumn
        
        Private columnPATIENT_SEX As Global.System.Data.DataColumn
        
        Private columnPATIENT_AGE As Global.System.Data.DataColumn
        
        Private columnSTART_TIME As Global.System.Data.DataColumn
        
        Private columnSURGEON As Global.System.Data.DataColumn
        
        Private columnSCRUB As Global.System.Data.DataColumn
        
        Private columnCIRCULATING As Global.System.Data.DataColumn
        
        Private columnANESTHESIONLOGIST As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnS_AN_GA As Global.System.Data.DataColumn
        
        Private columnS_AN_NEURO As Global.System.Data.DataColumn
        
        Private columnS_AN_STANDBY As Global.System.Data.DataColumn
        
        Private columnS_AN_RETROBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_PERIBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_TOPICAL As Global.System.Data.DataColumn
        
        Private columnS_AN_SUBCONJUNCTIVAL As Global.System.Data.DataColumn
        
        Private columnOTHER_PROCEDURES As Global.System.Data.DataColumn
        
        Private columnSUB_GENTAL As Global.System.Data.DataColumn
        
        Private columnSUB_CEFAZOLIN As Global.System.Data.DataColumn
        
        Private columnSUB_DEXAMETHASONE As Global.System.Data.DataColumn
        
        Private columnSUB_OTHER As Global.System.Data.DataColumn
        
        Private columnTOPICAL_MAXITRAL As Global.System.Data.DataColumn
        
        Private columnTOPICAL_PILOCARPINE As Global.System.Data.DataColumn
        
        Private columnTOPICAL_ATROPINE As Global.System.Data.DataColumn
        
        Private columnTOPICAL_OTHER As Global.System.Data.DataColumn
        
        Private columnSURGEON_SIGNATURE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_OPER_GENERAL_OPERATIVE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GENERAL_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGENERAL_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OPERA_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERA_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTART_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCRUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIRCULATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCULATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANESTHESIONLOGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANESTHESIONLOGIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_GA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_NEUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_NEURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_STANDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_STANDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_RETROBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_RETROBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_PERIBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_PERIBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_SUBCONJUNCTIVALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_SUBCONJUNCTIVAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTHER_PROCEDURESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_PROCEDURES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_GENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_GENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_CEFAZOLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_CEFAZOLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_DEXAMETHASONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_DEXAMETHASONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_MAXITRALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_MAXITRAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_PILOCARPINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_PILOCARPINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_ATROPINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_ATROPINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEON_SIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON_SIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_OPER_GENERAL_OPERATIVERow
            Get
                Return CType(Me.Rows(index),S_OPER_GENERAL_OPERATIVERow)
            End Get
        End Property
        
        Public Event S_OPER_GENERAL_OPERATIVERowChanging As S_OPER_GENERAL_OPERATIVERowChangeEventHandler
        
        Public Event S_OPER_GENERAL_OPERATIVERowChanged As S_OPER_GENERAL_OPERATIVERowChangeEventHandler
        
        Public Event S_OPER_GENERAL_OPERATIVERowDeleting As S_OPER_GENERAL_OPERATIVERowChangeEventHandler
        
        Public Event S_OPER_GENERAL_OPERATIVERowDeleted As S_OPER_GENERAL_OPERATIVERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_OPER_GENERAL_OPERATIVERow(ByVal row As S_OPER_GENERAL_OPERATIVERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_OPER_GENERAL_OPERATIVERow( _
                    ByVal CREATE_DATE As Date,  _
                    ByVal parentView_OTRegistrationRowByGENERAL_OPERATIVE As View_OTRegistrationRow,  _
                    ByVal PATIENT_NO As Decimal,  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Boolean,  _
                    ByVal S_AN_NEURO As Boolean,  _
                    ByVal S_AN_STANDBY As Boolean,  _
                    ByVal S_AN_RETROBULBAR As Boolean,  _
                    ByVal S_AN_PERIBULBAR As Boolean,  _
                    ByVal S_AN_TOPICAL As Boolean,  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Boolean,  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL As Boolean,  _
                    ByVal SUB_CEFAZOLIN As Boolean,  _
                    ByVal SUB_DEXAMETHASONE As Boolean,  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITRAL As Boolean,  _
                    ByVal TOPICAL_PILOCARPINE As Boolean,  _
                    ByVal TOPICAL_ATROPINE As Boolean,  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String) As S_OPER_GENERAL_OPERATIVERow
            Dim rowS_OPER_GENERAL_OPERATIVERow As S_OPER_GENERAL_OPERATIVERow = CType(Me.NewRow,S_OPER_GENERAL_OPERATIVERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CREATE_DATE, Nothing, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, OTHER_PROCEDURES, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAMETHASONE, SUB_OTHER, TOPICAL_MAXITRAL, TOPICAL_PILOCARPINE, TOPICAL_ATROPINE, TOPICAL_OTHER, SURGEON_SIGNATURE}
            If (Not (parentView_OTRegistrationRowByGENERAL_OPERATIVE) Is Nothing) Then
                columnValuesArray(2) = parentView_OTRegistrationRowByGENERAL_OPERATIVE(0)
            End If
            rowS_OPER_GENERAL_OPERATIVERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_OPER_GENERAL_OPERATIVERow)
            Return rowS_OPER_GENERAL_OPERATIVERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByGENERAL_ID(ByVal GENERAL_ID As Decimal) As S_OPER_GENERAL_OPERATIVERow
            Return CType(Me.Rows.Find(New Object() {GENERAL_ID}),S_OPER_GENERAL_OPERATIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_OPER_GENERAL_OPERATIVEDataTable = CType(MyBase.Clone,S_OPER_GENERAL_OPERATIVEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_OPER_GENERAL_OPERATIVEDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnGENERAL_ID = MyBase.Columns("GENERAL_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnOPERA_NO = MyBase.Columns("OPERA_NO")
            Me.columnPATIENT_NO = MyBase.Columns("PATIENT_NO")
            Me.columnPATIENT_NAME = MyBase.Columns("PATIENT_NAME")
            Me.columnPATIENT_SEX = MyBase.Columns("PATIENT_SEX")
            Me.columnPATIENT_AGE = MyBase.Columns("PATIENT_AGE")
            Me.columnSTART_TIME = MyBase.Columns("START_TIME")
            Me.columnSURGEON = MyBase.Columns("SURGEON")
            Me.columnSCRUB = MyBase.Columns("SCRUB")
            Me.columnCIRCULATING = MyBase.Columns("CIRCULATING")
            Me.columnANESTHESIONLOGIST = MyBase.Columns("ANESTHESIONLOGIST")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnS_AN_GA = MyBase.Columns("S_AN_GA")
            Me.columnS_AN_NEURO = MyBase.Columns("S_AN_NEURO")
            Me.columnS_AN_STANDBY = MyBase.Columns("S_AN_STANDBY")
            Me.columnS_AN_RETROBULBAR = MyBase.Columns("S_AN_RETROBULBAR")
            Me.columnS_AN_PERIBULBAR = MyBase.Columns("S_AN_PERIBULBAR")
            Me.columnS_AN_TOPICAL = MyBase.Columns("S_AN_TOPICAL")
            Me.columnS_AN_SUBCONJUNCTIVAL = MyBase.Columns("S_AN_SUBCONJUNCTIVAL")
            Me.columnOTHER_PROCEDURES = MyBase.Columns("OTHER_PROCEDURES")
            Me.columnSUB_GENTAL = MyBase.Columns("SUB_GENTAL")
            Me.columnSUB_CEFAZOLIN = MyBase.Columns("SUB_CEFAZOLIN")
            Me.columnSUB_DEXAMETHASONE = MyBase.Columns("SUB_DEXAMETHASONE")
            Me.columnSUB_OTHER = MyBase.Columns("SUB_OTHER")
            Me.columnTOPICAL_MAXITRAL = MyBase.Columns("TOPICAL_MAXITRAL")
            Me.columnTOPICAL_PILOCARPINE = MyBase.Columns("TOPICAL_PILOCARPINE")
            Me.columnTOPICAL_ATROPINE = MyBase.Columns("TOPICAL_ATROPINE")
            Me.columnTOPICAL_OTHER = MyBase.Columns("TOPICAL_OTHER")
            Me.columnSURGEON_SIGNATURE = MyBase.Columns("SURGEON_SIGNATURE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnGENERAL_ID = New Global.System.Data.DataColumn("GENERAL_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGENERAL_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnOPERA_NO = New Global.System.Data.DataColumn("OPERA_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERA_NO)
            Me.columnPATIENT_NO = New Global.System.Data.DataColumn("PATIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NO)
            Me.columnPATIENT_NAME = New Global.System.Data.DataColumn("PATIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NAME)
            Me.columnPATIENT_SEX = New Global.System.Data.DataColumn("PATIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_SEX)
            Me.columnPATIENT_AGE = New Global.System.Data.DataColumn("PATIENT_AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_AGE)
            Me.columnSTART_TIME = New Global.System.Data.DataColumn("START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTART_TIME)
            Me.columnSURGEON = New Global.System.Data.DataColumn("SURGEON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON)
            Me.columnSCRUB = New Global.System.Data.DataColumn("SCRUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRUB)
            Me.columnCIRCULATING = New Global.System.Data.DataColumn("CIRCULATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCULATING)
            Me.columnANESTHESIONLOGIST = New Global.System.Data.DataColumn("ANESTHESIONLOGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANESTHESIONLOGIST)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnS_AN_GA = New Global.System.Data.DataColumn("S_AN_GA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_GA)
            Me.columnS_AN_NEURO = New Global.System.Data.DataColumn("S_AN_NEURO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_NEURO)
            Me.columnS_AN_STANDBY = New Global.System.Data.DataColumn("S_AN_STANDBY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_STANDBY)
            Me.columnS_AN_RETROBULBAR = New Global.System.Data.DataColumn("S_AN_RETROBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_RETROBULBAR)
            Me.columnS_AN_PERIBULBAR = New Global.System.Data.DataColumn("S_AN_PERIBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_PERIBULBAR)
            Me.columnS_AN_TOPICAL = New Global.System.Data.DataColumn("S_AN_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_TOPICAL)
            Me.columnS_AN_SUBCONJUNCTIVAL = New Global.System.Data.DataColumn("S_AN_SUBCONJUNCTIVAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_SUBCONJUNCTIVAL)
            Me.columnOTHER_PROCEDURES = New Global.System.Data.DataColumn("OTHER_PROCEDURES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_PROCEDURES)
            Me.columnSUB_GENTAL = New Global.System.Data.DataColumn("SUB_GENTAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_GENTAL)
            Me.columnSUB_CEFAZOLIN = New Global.System.Data.DataColumn("SUB_CEFAZOLIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_CEFAZOLIN)
            Me.columnSUB_DEXAMETHASONE = New Global.System.Data.DataColumn("SUB_DEXAMETHASONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_DEXAMETHASONE)
            Me.columnSUB_OTHER = New Global.System.Data.DataColumn("SUB_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_OTHER)
            Me.columnTOPICAL_MAXITRAL = New Global.System.Data.DataColumn("TOPICAL_MAXITRAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_MAXITRAL)
            Me.columnTOPICAL_PILOCARPINE = New Global.System.Data.DataColumn("TOPICAL_PILOCARPINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_PILOCARPINE)
            Me.columnTOPICAL_ATROPINE = New Global.System.Data.DataColumn("TOPICAL_ATROPINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_ATROPINE)
            Me.columnTOPICAL_OTHER = New Global.System.Data.DataColumn("TOPICAL_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_OTHER)
            Me.columnSURGEON_SIGNATURE = New Global.System.Data.DataColumn("SURGEON_SIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON_SIGNATURE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnGENERAL_ID}, true))
            Me.columnGENERAL_ID.AutoIncrement = true
            Me.columnGENERAL_ID.AutoIncrementSeed = -1
            Me.columnGENERAL_ID.AutoIncrementStep = -1
            Me.columnGENERAL_ID.AllowDBNull = false
            Me.columnGENERAL_ID.ReadOnly = true
            Me.columnGENERAL_ID.Unique = true
            Me.columnPATIENT_NAME.MaxLength = 50
            Me.columnPATIENT_SEX.MaxLength = 1
            Me.columnPATIENT_AGE.MaxLength = 50
            Me.columnSTART_TIME.MaxLength = 50
            Me.columnSURGEON.MaxLength = 50
            Me.columnSCRUB.MaxLength = 50
            Me.columnCIRCULATING.MaxLength = 50
            Me.columnANESTHESIONLOGIST.MaxLength = 50
            Me.columnDIAGNOSIS.MaxLength = 50
            Me.columnOTHER_PROCEDURES.MaxLength = 250
            Me.columnSUB_OTHER.MaxLength = 250
            Me.columnTOPICAL_OTHER.MaxLength = 250
            Me.columnSURGEON_SIGNATURE.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_OPER_GENERAL_OPERATIVERow() As S_OPER_GENERAL_OPERATIVERow
            Return CType(Me.NewRow,S_OPER_GENERAL_OPERATIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_OPER_GENERAL_OPERATIVERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_OPER_GENERAL_OPERATIVERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_OPER_GENERAL_OPERATIVERowChangedEvent) Is Nothing) Then
                RaiseEvent S_OPER_GENERAL_OPERATIVERowChanged(Me, New S_OPER_GENERAL_OPERATIVERowChangeEvent(CType(e.Row,S_OPER_GENERAL_OPERATIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_OPER_GENERAL_OPERATIVERowChangingEvent) Is Nothing) Then
                RaiseEvent S_OPER_GENERAL_OPERATIVERowChanging(Me, New S_OPER_GENERAL_OPERATIVERowChangeEvent(CType(e.Row,S_OPER_GENERAL_OPERATIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_OPER_GENERAL_OPERATIVERowDeletedEvent) Is Nothing) Then
                RaiseEvent S_OPER_GENERAL_OPERATIVERowDeleted(Me, New S_OPER_GENERAL_OPERATIVERowChangeEvent(CType(e.Row,S_OPER_GENERAL_OPERATIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_OPER_GENERAL_OPERATIVERowDeletingEvent) Is Nothing) Then
                RaiseEvent S_OPER_GENERAL_OPERATIVERowDeleting(Me, New S_OPER_GENERAL_OPERATIVERowChangeEvent(CType(e.Row,S_OPER_GENERAL_OPERATIVERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_OPER_GENERAL_OPERATIVERow(ByVal row As S_OPER_GENERAL_OPERATIVERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_OPER_GENERAL_OPERATIVEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_OPER_PHACOEMULSIFICATIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_OPER_PHACOEMULSIFICATIONRow)
        
        Private columnPHACOEMULSIF_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnOPERA_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NAME As Global.System.Data.DataColumn
        
        Private columnPATIENT_SEX As Global.System.Data.DataColumn
        
        Private columnPATIENT_AGE As Global.System.Data.DataColumn
        
        Private columnSTART_TIME As Global.System.Data.DataColumn
        
        Private columnSURGEON As Global.System.Data.DataColumn
        
        Private columnSCRUB As Global.System.Data.DataColumn
        
        Private columnCIRCULATING As Global.System.Data.DataColumn
        
        Private columnANESTHESIONLOGIST As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnS_AN_GA As Global.System.Data.DataColumn
        
        Private columnS_AN_NEURO As Global.System.Data.DataColumn
        
        Private columnS_AN_STANDBY As Global.System.Data.DataColumn
        
        Private columnS_AN_RETROBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_PERIBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_TOPICAL As Global.System.Data.DataColumn
        
        Private columnVIS_HEALON_GV As Global.System.Data.DataColumn
        
        Private columnVIS_IALF As Global.System.Data.DataColumn
        
        Private columnVIS_VISSOAT As Global.System.Data.DataColumn
        
        Private columnVIS_DUOVISE As Global.System.Data.DataColumn
        
        Private columnVIS_HEALON5 As Global.System.Data.DataColumn
        
        Private columnVIS_OPHTHALINE As Global.System.Data.DataColumn
        
        Private columnVIS_PROVISE As Global.System.Data.DataColumn
        
        Private columnBSS_PLUS As Global.System.Data.DataColumn
        
        Private columnPOWER As Global.System.Data.DataColumn
        
        Private columnFLOW_RATE As Global.System.Data.DataColumn
        
        Private columnVAC As Global.System.Data.DataColumn
        
        Private columnPHACO_TIME As Global.System.Data.DataColumn
        
        Private columnIA_FLOW_RATE As Global.System.Data.DataColumn
        
        Private columnIA_VAC As Global.System.Data.DataColumn
        
        Private columnNOT_DONE As Global.System.Data.DataColumn
        
        Private columnDONE As Global.System.Data.DataColumn
        
        Private columnDONE_NOTE As Global.System.Data.DataColumn
        
        Private columnCORNEAL As Global.System.Data.DataColumn
        
        Private columnSCLERAL As Global.System.Data.DataColumn
        
        Private columnFINAL_SIZE As Global.System.Data.DataColumn
        
        Private columnFINAL_SIZE_NOTE As Global.System.Data.DataColumn
        
        Private columnCAPSULORHEXIS As Global.System.Data.DataColumn
        
        Private columnHEYDRODISSECTION_YES As Global.System.Data.DataColumn
        
        Private columnHEYDRODISSECTION_NO As Global.System.Data.DataColumn
        
        Private columnPHACO_DIVIDE As Global.System.Data.DataColumn
        
        Private columnPHACO_CHOP As Global.System.Data.DataColumn
        
        Private columnPHACO_STOP_CHOP As Global.System.Data.DataColumn
        
        Private columnPHACO_SCULPTING As Global.System.Data.DataColumn
        
        Private columnPHACO_CRACKING As Global.System.Data.DataColumn
        
        Private columnPHACO_OTHERS As Global.System.Data.DataColumn
        
        Private columnIA_TIP As Global.System.Data.DataColumn
        
        Private columnIA_OTHER As Global.System.Data.DataColumn
        
        Private columnCAPSULAR_YES As Global.System.Data.DataColumn
        
        Private columnCAPSULAR_NO As Global.System.Data.DataColumn
        
        Private columnIOL_YES As Global.System.Data.DataColumn
        
        Private columnIOL_NO As Global.System.Data.DataColumn
        
        Private columnIOL_IN_CAPSULAR As Global.System.Data.DataColumn
        
        Private columnIOL_IN_SULCUS As Global.System.Data.DataColumn
        
        Private columnIOL_IN_AC As Global.System.Data.DataColumn
        
        Private columnSUTURE_YES As Global.System.Data.DataColumn
        
        Private columnSUTURE_NO As Global.System.Data.DataColumn
        
        Private columnSUB_GENTAL As Global.System.Data.DataColumn
        
        Private columnSUB_CEFAZOLIN As Global.System.Data.DataColumn
        
        Private columnSUB_DEXAMETHASONE As Global.System.Data.DataColumn
        
        Private columnSUB_OTHERS As Global.System.Data.DataColumn
        
        Private columnTOPICAL_PILOCARPINE As Global.System.Data.DataColumn
        
        Private columnTOPICAL_MAXITROL As Global.System.Data.DataColumn
        
        Private columnTOPICAL_OTHERS As Global.System.Data.DataColumn
        
        Private columnCOMPLICATION_YES As Global.System.Data.DataColumn
        
        Private columnCOMPLICATION_NO As Global.System.Data.DataColumn
        
        Private columnCOMPLICATION_NOTE As Global.System.Data.DataColumn
        
        Private columnOTHER_PRO_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnOTHER_PRO_PI As Global.System.Data.DataColumn
        
        Private columnOTHER_PRO_AT As Global.System.Data.DataColumn
        
        Private columnSURGEON_SIGNATURE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_OPER_PHACOEMULSIFICATION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHACOEMULSIF_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHACOEMULSIF_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OPERA_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERA_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTART_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCRUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIRCULATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCULATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANESTHESIONLOGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANESTHESIONLOGIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_GA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_NEUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_NEURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_STANDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_STANDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_RETROBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_RETROBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_PERIBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_PERIBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_HEALON_GVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_HEALON_GV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_IALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_IALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_VISSOATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_VISSOAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_DUOVISEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_DUOVISE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_HEALON5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_HEALON5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_OPHTHALINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_OPHTHALINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_PROVISEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_PROVISE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BSS_PLUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBSS_PLUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property POWERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPOWER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FLOW_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFLOW_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVAC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHACO_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHACO_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IA_FLOW_RATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIA_FLOW_RATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IA_VACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIA_VAC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NOT_DONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOT_DONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DONE_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDONE_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CORNEALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORNEAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FINAL_SIZEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINAL_SIZE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FINAL_SIZE_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFINAL_SIZE_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAPSULORHEXISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPSULORHEXIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HEYDRODISSECTION_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHEYDRODISSECTION_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property HEYDRODISSECTION_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnHEYDRODISSECTION_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHACO_DIVIDEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHACO_DIVIDE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHACO_CHOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHACO_CHOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHACO_STOP_CHOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHACO_STOP_CHOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHACO_SCULPTINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHACO_SCULPTING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHACO_CRACKINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHACO_CRACKING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PHACO_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPHACO_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IA_TIPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIA_TIP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IA_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIA_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAPSULAR_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPSULAR_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAPSULAR_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPSULAR_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_IN_CAPSULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_IN_CAPSULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_IN_SULCUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_IN_SULCUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_IN_ACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_IN_AC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUTURE_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUTURE_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUTURE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUTURE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_GENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_GENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_CEFAZOLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_CEFAZOLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_DEXAMETHASONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_DEXAMETHASONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_PILOCARPINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_PILOCARPINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_MAXITROLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_MAXITROL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPLICATION_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLICATION_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPLICATION_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLICATION_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COMPLICATION_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPLICATION_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTHER_PRO_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_PRO_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTHER_PRO_PIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_PRO_PI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTHER_PRO_ATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_PRO_AT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEON_SIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON_SIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_OPER_PHACOEMULSIFICATIONRow
            Get
                Return CType(Me.Rows(index),S_OPER_PHACOEMULSIFICATIONRow)
            End Get
        End Property
        
        Public Event S_OPER_PHACOEMULSIFICATIONRowChanging As S_OPER_PHACOEMULSIFICATIONRowChangeEventHandler
        
        Public Event S_OPER_PHACOEMULSIFICATIONRowChanged As S_OPER_PHACOEMULSIFICATIONRowChangeEventHandler
        
        Public Event S_OPER_PHACOEMULSIFICATIONRowDeleting As S_OPER_PHACOEMULSIFICATIONRowChangeEventHandler
        
        Public Event S_OPER_PHACOEMULSIFICATIONRowDeleted As S_OPER_PHACOEMULSIFICATIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_OPER_PHACOEMULSIFICATIONRow(ByVal row As S_OPER_PHACOEMULSIFICATIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_OPER_PHACOEMULSIFICATIONRow( _
                    ByVal CREATE_DATE As Date,  _
                    ByVal parentView_OTRegistrationRowByOper_Phacoemul As View_OTRegistrationRow,  _
                    ByVal PATIENT_NO As Decimal,  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Boolean,  _
                    ByVal S_AN_NEURO As Boolean,  _
                    ByVal S_AN_STANDBY As Boolean,  _
                    ByVal S_AN_RETROBULBAR As Boolean,  _
                    ByVal S_AN_PERIBULBAR As Boolean,  _
                    ByVal S_AN_TOPICAL As Boolean,  _
                    ByVal VIS_HEALON_GV As Boolean,  _
                    ByVal VIS_IALF As Boolean,  _
                    ByVal VIS_VISSOAT As Boolean,  _
                    ByVal VIS_DUOVISE As Boolean,  _
                    ByVal VIS_HEALON5 As Boolean,  _
                    ByVal VIS_OPHTHALINE As Boolean,  _
                    ByVal VIS_PROVISE As Boolean,  _
                    ByVal BSS_PLUS As Boolean,  _
                    ByVal POWER As String,  _
                    ByVal FLOW_RATE As String,  _
                    ByVal VAC As String,  _
                    ByVal PHACO_TIME As String,  _
                    ByVal IA_FLOW_RATE As String,  _
                    ByVal IA_VAC As String,  _
                    ByVal NOT_DONE As Boolean,  _
                    ByVal DONE As Boolean,  _
                    ByVal DONE_NOTE As String,  _
                    ByVal CORNEAL As Boolean,  _
                    ByVal SCLERAL As Boolean,  _
                    ByVal FINAL_SIZE As Boolean,  _
                    ByVal FINAL_SIZE_NOTE As String,  _
                    ByVal CAPSULORHEXIS As String,  _
                    ByVal HEYDRODISSECTION_YES As Boolean,  _
                    ByVal HEYDRODISSECTION_NO As Boolean,  _
                    ByVal PHACO_DIVIDE As Boolean,  _
                    ByVal PHACO_CHOP As Boolean,  _
                    ByVal PHACO_STOP_CHOP As Boolean,  _
                    ByVal PHACO_SCULPTING As Boolean,  _
                    ByVal PHACO_CRACKING As Boolean,  _
                    ByVal PHACO_OTHERS As String,  _
                    ByVal IA_TIP As Boolean,  _
                    ByVal IA_OTHER As String,  _
                    ByVal CAPSULAR_YES As Boolean,  _
                    ByVal CAPSULAR_NO As Boolean,  _
                    ByVal IOL_YES As Boolean,  _
                    ByVal IOL_NO As Boolean,  _
                    ByVal IOL_IN_CAPSULAR As Boolean,  _
                    ByVal IOL_IN_SULCUS As Boolean,  _
                    ByVal IOL_IN_AC As Boolean,  _
                    ByVal SUTURE_YES As Boolean,  _
                    ByVal SUTURE_NO As Boolean,  _
                    ByVal SUB_GENTAL As Boolean,  _
                    ByVal SUB_CEFAZOLIN As Boolean,  _
                    ByVal SUB_DEXAMETHASONE As Boolean,  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Boolean,  _
                    ByVal TOPICAL_MAXITROL As Boolean,  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal COMPLICATION_YES As Boolean,  _
                    ByVal COMPLICATION_NO As Boolean,  _
                    ByVal COMPLICATION_NOTE As String,  _
                    ByVal OTHER_PRO_ANTERIOR As Boolean,  _
                    ByVal OTHER_PRO_PI As Boolean,  _
                    ByVal OTHER_PRO_AT As String,  _
                    ByVal SURGEON_SIGNATURE As String) As S_OPER_PHACOEMULSIFICATIONRow
            Dim rowS_OPER_PHACOEMULSIFICATIONRow As S_OPER_PHACOEMULSIFICATIONRow = CType(Me.NewRow,S_OPER_PHACOEMULSIFICATIONRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CREATE_DATE, Nothing, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS_OPHTHALINE, VIS_PROVISE, BSS_PLUS, POWER, FLOW_RATE, VAC, PHACO_TIME, IA_FLOW_RATE, IA_VAC, NOT_DONE, DONE, DONE_NOTE, CORNEAL, SCLERAL, FINAL_SIZE, FINAL_SIZE_NOTE, CAPSULORHEXIS, HEYDRODISSECTION_YES, HEYDRODISSECTION_NO, PHACO_DIVIDE, PHACO_CHOP, PHACO_STOP_CHOP, PHACO_SCULPTING, PHACO_CRACKING, PHACO_OTHERS, IA_TIP, IA_OTHER, CAPSULAR_YES, CAPSULAR_NO, IOL_YES, IOL_NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTURE_YES, SUTURE_NO, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAMETHASONE, SUB_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, COMPLICATION_YES, COMPLICATION_NO, COMPLICATION_NOTE, OTHER_PRO_ANTERIOR, OTHER_PRO_PI, OTHER_PRO_AT, SURGEON_SIGNATURE}
            If (Not (parentView_OTRegistrationRowByOper_Phacoemul) Is Nothing) Then
                columnValuesArray(2) = parentView_OTRegistrationRowByOper_Phacoemul(0)
            End If
            rowS_OPER_PHACOEMULSIFICATIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_OPER_PHACOEMULSIFICATIONRow)
            Return rowS_OPER_PHACOEMULSIFICATIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByPHACOEMULSIF_ID(ByVal PHACOEMULSIF_ID As Decimal) As S_OPER_PHACOEMULSIFICATIONRow
            Return CType(Me.Rows.Find(New Object() {PHACOEMULSIF_ID}),S_OPER_PHACOEMULSIFICATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_OPER_PHACOEMULSIFICATIONDataTable = CType(MyBase.Clone,S_OPER_PHACOEMULSIFICATIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_OPER_PHACOEMULSIFICATIONDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPHACOEMULSIF_ID = MyBase.Columns("PHACOEMULSIF_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnOPERA_NO = MyBase.Columns("OPERA_NO")
            Me.columnPATIENT_NO = MyBase.Columns("PATIENT_NO")
            Me.columnPATIENT_NAME = MyBase.Columns("PATIENT_NAME")
            Me.columnPATIENT_SEX = MyBase.Columns("PATIENT_SEX")
            Me.columnPATIENT_AGE = MyBase.Columns("PATIENT_AGE")
            Me.columnSTART_TIME = MyBase.Columns("START_TIME")
            Me.columnSURGEON = MyBase.Columns("SURGEON")
            Me.columnSCRUB = MyBase.Columns("SCRUB")
            Me.columnCIRCULATING = MyBase.Columns("CIRCULATING")
            Me.columnANESTHESIONLOGIST = MyBase.Columns("ANESTHESIONLOGIST")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnS_AN_GA = MyBase.Columns("S_AN_GA")
            Me.columnS_AN_NEURO = MyBase.Columns("S_AN_NEURO")
            Me.columnS_AN_STANDBY = MyBase.Columns("S_AN_STANDBY")
            Me.columnS_AN_RETROBULBAR = MyBase.Columns("S_AN_RETROBULBAR")
            Me.columnS_AN_PERIBULBAR = MyBase.Columns("S_AN_PERIBULBAR")
            Me.columnS_AN_TOPICAL = MyBase.Columns("S_AN_TOPICAL")
            Me.columnVIS_HEALON_GV = MyBase.Columns("VIS_HEALON_GV")
            Me.columnVIS_IALF = MyBase.Columns("VIS_IALF")
            Me.columnVIS_VISSOAT = MyBase.Columns("VIS_VISSOAT")
            Me.columnVIS_DUOVISE = MyBase.Columns("VIS_DUOVISE")
            Me.columnVIS_HEALON5 = MyBase.Columns("VIS_HEALON5")
            Me.columnVIS_OPHTHALINE = MyBase.Columns("VIS_OPHTHALINE")
            Me.columnVIS_PROVISE = MyBase.Columns("VIS_PROVISE")
            Me.columnBSS_PLUS = MyBase.Columns("BSS_PLUS")
            Me.columnPOWER = MyBase.Columns("POWER")
            Me.columnFLOW_RATE = MyBase.Columns("FLOW_RATE")
            Me.columnVAC = MyBase.Columns("VAC")
            Me.columnPHACO_TIME = MyBase.Columns("PHACO_TIME")
            Me.columnIA_FLOW_RATE = MyBase.Columns("IA_FLOW_RATE")
            Me.columnIA_VAC = MyBase.Columns("IA_VAC")
            Me.columnNOT_DONE = MyBase.Columns("NOT_DONE")
            Me.columnDONE = MyBase.Columns("DONE")
            Me.columnDONE_NOTE = MyBase.Columns("DONE_NOTE")
            Me.columnCORNEAL = MyBase.Columns("CORNEAL")
            Me.columnSCLERAL = MyBase.Columns("SCLERAL")
            Me.columnFINAL_SIZE = MyBase.Columns("FINAL_SIZE")
            Me.columnFINAL_SIZE_NOTE = MyBase.Columns("FINAL_SIZE_NOTE")
            Me.columnCAPSULORHEXIS = MyBase.Columns("CAPSULORHEXIS")
            Me.columnHEYDRODISSECTION_YES = MyBase.Columns("HEYDRODISSECTION_YES")
            Me.columnHEYDRODISSECTION_NO = MyBase.Columns("HEYDRODISSECTION_NO")
            Me.columnPHACO_DIVIDE = MyBase.Columns("PHACO_DIVIDE")
            Me.columnPHACO_CHOP = MyBase.Columns("PHACO_CHOP")
            Me.columnPHACO_STOP_CHOP = MyBase.Columns("PHACO_STOP_CHOP")
            Me.columnPHACO_SCULPTING = MyBase.Columns("PHACO_SCULPTING")
            Me.columnPHACO_CRACKING = MyBase.Columns("PHACO_CRACKING")
            Me.columnPHACO_OTHERS = MyBase.Columns("PHACO_OTHERS")
            Me.columnIA_TIP = MyBase.Columns("IA_TIP")
            Me.columnIA_OTHER = MyBase.Columns("IA_OTHER")
            Me.columnCAPSULAR_YES = MyBase.Columns("CAPSULAR_YES")
            Me.columnCAPSULAR_NO = MyBase.Columns("CAPSULAR_NO")
            Me.columnIOL_YES = MyBase.Columns("IOL_YES")
            Me.columnIOL_NO = MyBase.Columns("IOL_NO")
            Me.columnIOL_IN_CAPSULAR = MyBase.Columns("IOL_IN_CAPSULAR")
            Me.columnIOL_IN_SULCUS = MyBase.Columns("IOL_IN_SULCUS")
            Me.columnIOL_IN_AC = MyBase.Columns("IOL_IN_AC")
            Me.columnSUTURE_YES = MyBase.Columns("SUTURE_YES")
            Me.columnSUTURE_NO = MyBase.Columns("SUTURE_NO")
            Me.columnSUB_GENTAL = MyBase.Columns("SUB_GENTAL")
            Me.columnSUB_CEFAZOLIN = MyBase.Columns("SUB_CEFAZOLIN")
            Me.columnSUB_DEXAMETHASONE = MyBase.Columns("SUB_DEXAMETHASONE")
            Me.columnSUB_OTHERS = MyBase.Columns("SUB_OTHERS")
            Me.columnTOPICAL_PILOCARPINE = MyBase.Columns("TOPICAL_PILOCARPINE")
            Me.columnTOPICAL_MAXITROL = MyBase.Columns("TOPICAL_MAXITROL")
            Me.columnTOPICAL_OTHERS = MyBase.Columns("TOPICAL_OTHERS")
            Me.columnCOMPLICATION_YES = MyBase.Columns("COMPLICATION_YES")
            Me.columnCOMPLICATION_NO = MyBase.Columns("COMPLICATION_NO")
            Me.columnCOMPLICATION_NOTE = MyBase.Columns("COMPLICATION_NOTE")
            Me.columnOTHER_PRO_ANTERIOR = MyBase.Columns("OTHER_PRO_ANTERIOR")
            Me.columnOTHER_PRO_PI = MyBase.Columns("OTHER_PRO_PI")
            Me.columnOTHER_PRO_AT = MyBase.Columns("OTHER_PRO_AT")
            Me.columnSURGEON_SIGNATURE = MyBase.Columns("SURGEON_SIGNATURE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPHACOEMULSIF_ID = New Global.System.Data.DataColumn("PHACOEMULSIF_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHACOEMULSIF_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnOPERA_NO = New Global.System.Data.DataColumn("OPERA_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERA_NO)
            Me.columnPATIENT_NO = New Global.System.Data.DataColumn("PATIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NO)
            Me.columnPATIENT_NAME = New Global.System.Data.DataColumn("PATIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NAME)
            Me.columnPATIENT_SEX = New Global.System.Data.DataColumn("PATIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_SEX)
            Me.columnPATIENT_AGE = New Global.System.Data.DataColumn("PATIENT_AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_AGE)
            Me.columnSTART_TIME = New Global.System.Data.DataColumn("START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTART_TIME)
            Me.columnSURGEON = New Global.System.Data.DataColumn("SURGEON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON)
            Me.columnSCRUB = New Global.System.Data.DataColumn("SCRUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRUB)
            Me.columnCIRCULATING = New Global.System.Data.DataColumn("CIRCULATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCULATING)
            Me.columnANESTHESIONLOGIST = New Global.System.Data.DataColumn("ANESTHESIONLOGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANESTHESIONLOGIST)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnS_AN_GA = New Global.System.Data.DataColumn("S_AN_GA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_GA)
            Me.columnS_AN_NEURO = New Global.System.Data.DataColumn("S_AN_NEURO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_NEURO)
            Me.columnS_AN_STANDBY = New Global.System.Data.DataColumn("S_AN_STANDBY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_STANDBY)
            Me.columnS_AN_RETROBULBAR = New Global.System.Data.DataColumn("S_AN_RETROBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_RETROBULBAR)
            Me.columnS_AN_PERIBULBAR = New Global.System.Data.DataColumn("S_AN_PERIBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_PERIBULBAR)
            Me.columnS_AN_TOPICAL = New Global.System.Data.DataColumn("S_AN_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_TOPICAL)
            Me.columnVIS_HEALON_GV = New Global.System.Data.DataColumn("VIS_HEALON_GV", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_HEALON_GV)
            Me.columnVIS_IALF = New Global.System.Data.DataColumn("VIS_IALF", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_IALF)
            Me.columnVIS_VISSOAT = New Global.System.Data.DataColumn("VIS_VISSOAT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_VISSOAT)
            Me.columnVIS_DUOVISE = New Global.System.Data.DataColumn("VIS_DUOVISE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_DUOVISE)
            Me.columnVIS_HEALON5 = New Global.System.Data.DataColumn("VIS_HEALON5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_HEALON5)
            Me.columnVIS_OPHTHALINE = New Global.System.Data.DataColumn("VIS_OPHTHALINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_OPHTHALINE)
            Me.columnVIS_PROVISE = New Global.System.Data.DataColumn("VIS_PROVISE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_PROVISE)
            Me.columnBSS_PLUS = New Global.System.Data.DataColumn("BSS_PLUS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBSS_PLUS)
            Me.columnPOWER = New Global.System.Data.DataColumn("POWER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPOWER)
            Me.columnFLOW_RATE = New Global.System.Data.DataColumn("FLOW_RATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFLOW_RATE)
            Me.columnVAC = New Global.System.Data.DataColumn("VAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVAC)
            Me.columnPHACO_TIME = New Global.System.Data.DataColumn("PHACO_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHACO_TIME)
            Me.columnIA_FLOW_RATE = New Global.System.Data.DataColumn("IA_FLOW_RATE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIA_FLOW_RATE)
            Me.columnIA_VAC = New Global.System.Data.DataColumn("IA_VAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIA_VAC)
            Me.columnNOT_DONE = New Global.System.Data.DataColumn("NOT_DONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOT_DONE)
            Me.columnDONE = New Global.System.Data.DataColumn("DONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDONE)
            Me.columnDONE_NOTE = New Global.System.Data.DataColumn("DONE_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDONE_NOTE)
            Me.columnCORNEAL = New Global.System.Data.DataColumn("CORNEAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORNEAL)
            Me.columnSCLERAL = New Global.System.Data.DataColumn("SCLERAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLERAL)
            Me.columnFINAL_SIZE = New Global.System.Data.DataColumn("FINAL_SIZE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINAL_SIZE)
            Me.columnFINAL_SIZE_NOTE = New Global.System.Data.DataColumn("FINAL_SIZE_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFINAL_SIZE_NOTE)
            Me.columnCAPSULORHEXIS = New Global.System.Data.DataColumn("CAPSULORHEXIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPSULORHEXIS)
            Me.columnHEYDRODISSECTION_YES = New Global.System.Data.DataColumn("HEYDRODISSECTION_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHEYDRODISSECTION_YES)
            Me.columnHEYDRODISSECTION_NO = New Global.System.Data.DataColumn("HEYDRODISSECTION_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnHEYDRODISSECTION_NO)
            Me.columnPHACO_DIVIDE = New Global.System.Data.DataColumn("PHACO_DIVIDE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHACO_DIVIDE)
            Me.columnPHACO_CHOP = New Global.System.Data.DataColumn("PHACO_CHOP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHACO_CHOP)
            Me.columnPHACO_STOP_CHOP = New Global.System.Data.DataColumn("PHACO_STOP_CHOP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHACO_STOP_CHOP)
            Me.columnPHACO_SCULPTING = New Global.System.Data.DataColumn("PHACO_SCULPTING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHACO_SCULPTING)
            Me.columnPHACO_CRACKING = New Global.System.Data.DataColumn("PHACO_CRACKING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHACO_CRACKING)
            Me.columnPHACO_OTHERS = New Global.System.Data.DataColumn("PHACO_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPHACO_OTHERS)
            Me.columnIA_TIP = New Global.System.Data.DataColumn("IA_TIP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIA_TIP)
            Me.columnIA_OTHER = New Global.System.Data.DataColumn("IA_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIA_OTHER)
            Me.columnCAPSULAR_YES = New Global.System.Data.DataColumn("CAPSULAR_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPSULAR_YES)
            Me.columnCAPSULAR_NO = New Global.System.Data.DataColumn("CAPSULAR_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPSULAR_NO)
            Me.columnIOL_YES = New Global.System.Data.DataColumn("IOL_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_YES)
            Me.columnIOL_NO = New Global.System.Data.DataColumn("IOL_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_NO)
            Me.columnIOL_IN_CAPSULAR = New Global.System.Data.DataColumn("IOL_IN_CAPSULAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_IN_CAPSULAR)
            Me.columnIOL_IN_SULCUS = New Global.System.Data.DataColumn("IOL_IN_SULCUS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_IN_SULCUS)
            Me.columnIOL_IN_AC = New Global.System.Data.DataColumn("IOL_IN_AC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_IN_AC)
            Me.columnSUTURE_YES = New Global.System.Data.DataColumn("SUTURE_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUTURE_YES)
            Me.columnSUTURE_NO = New Global.System.Data.DataColumn("SUTURE_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUTURE_NO)
            Me.columnSUB_GENTAL = New Global.System.Data.DataColumn("SUB_GENTAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_GENTAL)
            Me.columnSUB_CEFAZOLIN = New Global.System.Data.DataColumn("SUB_CEFAZOLIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_CEFAZOLIN)
            Me.columnSUB_DEXAMETHASONE = New Global.System.Data.DataColumn("SUB_DEXAMETHASONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_DEXAMETHASONE)
            Me.columnSUB_OTHERS = New Global.System.Data.DataColumn("SUB_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_OTHERS)
            Me.columnTOPICAL_PILOCARPINE = New Global.System.Data.DataColumn("TOPICAL_PILOCARPINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_PILOCARPINE)
            Me.columnTOPICAL_MAXITROL = New Global.System.Data.DataColumn("TOPICAL_MAXITROL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_MAXITROL)
            Me.columnTOPICAL_OTHERS = New Global.System.Data.DataColumn("TOPICAL_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_OTHERS)
            Me.columnCOMPLICATION_YES = New Global.System.Data.DataColumn("COMPLICATION_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLICATION_YES)
            Me.columnCOMPLICATION_NO = New Global.System.Data.DataColumn("COMPLICATION_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLICATION_NO)
            Me.columnCOMPLICATION_NOTE = New Global.System.Data.DataColumn("COMPLICATION_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPLICATION_NOTE)
            Me.columnOTHER_PRO_ANTERIOR = New Global.System.Data.DataColumn("OTHER_PRO_ANTERIOR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_PRO_ANTERIOR)
            Me.columnOTHER_PRO_PI = New Global.System.Data.DataColumn("OTHER_PRO_PI", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_PRO_PI)
            Me.columnOTHER_PRO_AT = New Global.System.Data.DataColumn("OTHER_PRO_AT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_PRO_AT)
            Me.columnSURGEON_SIGNATURE = New Global.System.Data.DataColumn("SURGEON_SIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON_SIGNATURE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPHACOEMULSIF_ID}, true))
            Me.columnPHACOEMULSIF_ID.AutoIncrement = true
            Me.columnPHACOEMULSIF_ID.AutoIncrementSeed = -1
            Me.columnPHACOEMULSIF_ID.AutoIncrementStep = -1
            Me.columnPHACOEMULSIF_ID.AllowDBNull = false
            Me.columnPHACOEMULSIF_ID.ReadOnly = true
            Me.columnPHACOEMULSIF_ID.Unique = true
            Me.columnPATIENT_NAME.MaxLength = 50
            Me.columnPATIENT_SEX.MaxLength = 1
            Me.columnPATIENT_AGE.MaxLength = 50
            Me.columnSTART_TIME.MaxLength = 50
            Me.columnSURGEON.MaxLength = 50
            Me.columnSCRUB.MaxLength = 50
            Me.columnCIRCULATING.MaxLength = 50
            Me.columnANESTHESIONLOGIST.MaxLength = 50
            Me.columnDIAGNOSIS.MaxLength = 50
            Me.columnPOWER.MaxLength = 50
            Me.columnFLOW_RATE.MaxLength = 50
            Me.columnVAC.MaxLength = 50
            Me.columnPHACO_TIME.MaxLength = 50
            Me.columnIA_FLOW_RATE.MaxLength = 50
            Me.columnIA_VAC.MaxLength = 50
            Me.columnDONE_NOTE.MaxLength = 50
            Me.columnFINAL_SIZE_NOTE.MaxLength = 50
            Me.columnCAPSULORHEXIS.MaxLength = 50
            Me.columnPHACO_OTHERS.MaxLength = 250
            Me.columnIA_OTHER.MaxLength = 250
            Me.columnSUB_OTHERS.MaxLength = 250
            Me.columnTOPICAL_OTHERS.MaxLength = 250
            Me.columnCOMPLICATION_NOTE.MaxLength = 250
            Me.columnOTHER_PRO_AT.MaxLength = 50
            Me.columnSURGEON_SIGNATURE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_OPER_PHACOEMULSIFICATIONRow() As S_OPER_PHACOEMULSIFICATIONRow
            Return CType(Me.NewRow,S_OPER_PHACOEMULSIFICATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_OPER_PHACOEMULSIFICATIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_OPER_PHACOEMULSIFICATIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_OPER_PHACOEMULSIFICATIONRowChangedEvent) Is Nothing) Then
                RaiseEvent S_OPER_PHACOEMULSIFICATIONRowChanged(Me, New S_OPER_PHACOEMULSIFICATIONRowChangeEvent(CType(e.Row,S_OPER_PHACOEMULSIFICATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_OPER_PHACOEMULSIFICATIONRowChangingEvent) Is Nothing) Then
                RaiseEvent S_OPER_PHACOEMULSIFICATIONRowChanging(Me, New S_OPER_PHACOEMULSIFICATIONRowChangeEvent(CType(e.Row,S_OPER_PHACOEMULSIFICATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_OPER_PHACOEMULSIFICATIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent S_OPER_PHACOEMULSIFICATIONRowDeleted(Me, New S_OPER_PHACOEMULSIFICATIONRowChangeEvent(CType(e.Row,S_OPER_PHACOEMULSIFICATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_OPER_PHACOEMULSIFICATIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent S_OPER_PHACOEMULSIFICATIONRowDeleting(Me, New S_OPER_PHACOEMULSIFICATIONRowChangeEvent(CType(e.Row,S_OPER_PHACOEMULSIFICATIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_OPER_PHACOEMULSIFICATIONRow(ByVal row As S_OPER_PHACOEMULSIFICATIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_OPER_PHACOEMULSIFICATIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_OPERA_ECCEDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_OPERA_ECCERow)
        
        Private columnECCE_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnOPERA_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NAME As Global.System.Data.DataColumn
        
        Private columnPATIENT_SEX As Global.System.Data.DataColumn
        
        Private columnPATIENT_AGE As Global.System.Data.DataColumn
        
        Private columnSTART_TIME As Global.System.Data.DataColumn
        
        Private columnLEFT_EYE As Global.System.Data.DataColumn
        
        Private columnRIGHT_EYE As Global.System.Data.DataColumn
        
        Private columnSURGEON As Global.System.Data.DataColumn
        
        Private columnSCRUB As Global.System.Data.DataColumn
        
        Private columnCIRCULATING As Global.System.Data.DataColumn
        
        Private columnANESTHESIONLOGIST As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnS_AN_GA As Global.System.Data.DataColumn
        
        Private columnS_AN_NEURO As Global.System.Data.DataColumn
        
        Private columnS_AN_STANDBY As Global.System.Data.DataColumn
        
        Private columnS_AN_RETROBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_PERIBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_TOPICAL As Global.System.Data.DataColumn
        
        Private columnVIS_HEALON_GV As Global.System.Data.DataColumn
        
        Private columnVIS_IALF As Global.System.Data.DataColumn
        
        Private columnVIS_VISSOAT As Global.System.Data.DataColumn
        
        Private columnVIS_DUOVISE As Global.System.Data.DataColumn
        
        Private columnVIS_HEALON5 As Global.System.Data.DataColumn
        
        Private columnVIS_OPHTHALINE As Global.System.Data.DataColumn
        
        Private columnVIS_PROVISE As Global.System.Data.DataColumn
        
        Private columnBSS_PLUS As Global.System.Data.DataColumn
        
        Private columnBSS As Global.System.Data.DataColumn
        
        Private columnPERITO_YES As Global.System.Data.DataColumn
        
        Private columnPERITO_NO As Global.System.Data.DataColumn
        
        Private columnCARTERY_MILD As Global.System.Data.DataColumn
        
        Private columnCARTERY_MODERATE As Global.System.Data.DataColumn
        
        Private columnCAUTERY_EXTENSIVE As Global.System.Data.DataColumn
        
        Private columnINCISION_SITE_CORNEOSCLERAL As Global.System.Data.DataColumn
        
        Private columnINCISION_SITE_SCLERAL As Global.System.Data.DataColumn
        
        Private columnINCISION_SIZE_SUPERRIOR As Global.System.Data.DataColumn
        
        Private columnINCISION_SIZE_SUPERRIOR_NOTE As Global.System.Data.DataColumn
        
        Private columnINCISION_SIZE_SUPERRIOR_OTHER As Global.System.Data.DataColumn
        
        Private columnCAPSULOTOMY_CYSTOTOMY As Global.System.Data.DataColumn
        
        Private columnCAPSULOTOMY_OTHERS As Global.System.Data.DataColumn
        
        Private columnNUCLEUS_EXPRESSION As Global.System.Data.DataColumn
        
        Private columnNUCLEUS_LENSLOOP As Global.System.Data.DataColumn
        
        Private columnNUCLEUS_VISCO As Global.System.Data.DataColumn
        
        Private columnCORTEX_SIMCO_IA As Global.System.Data.DataColumn
        
        Private columnCAPSULE_YES As Global.System.Data.DataColumn
        
        Private columnCAPSULE_NO As Global.System.Data.DataColumn
        
        Private columnIOL_IN_CAPSULAR As Global.System.Data.DataColumn
        
        Private columnIOL_IN_SULCUS As Global.System.Data.DataColumn
        
        Private columnIOL_IN_AC As Global.System.Data.DataColumn
        
        Private columnSUTURE_NYLON As Global.System.Data.DataColumn
        
        Private columnSUTURE_NYLON_NOTE As Global.System.Data.DataColumn
        
        Private columnSUTURE_OTHERS As Global.System.Data.DataColumn
        
        Private columnSUBCONJUN_GENTAL As Global.System.Data.DataColumn
        
        Private columnSUBCONJUN_CEFAZOLIN As Global.System.Data.DataColumn
        
        Private columnSUBCONJUN_DEXAMETHASONE As Global.System.Data.DataColumn
        
        Private columnSUBCONJUN_OTHERS As Global.System.Data.DataColumn
        
        Private columnTOPICAL_PILOCARPINE As Global.System.Data.DataColumn
        
        Private columnTOPICAL_MAXITROL As Global.System.Data.DataColumn
        
        Private columnTOPICAL_OTHERS As Global.System.Data.DataColumn
        
        Private columnEXTRA_IRRIDECTOMY As Global.System.Data.DataColumn
        
        Private columnEXTRA_LOCATION As Global.System.Data.DataColumn
        
        Private columnEXTRA_CAPSULAR As Global.System.Data.DataColumn
        
        Private columnEXTRA_VITREOS As Global.System.Data.DataColumn
        
        Private columnEXTRA_ANTERIOR As Global.System.Data.DataColumn
        
        Private columnEXTRA_AC_HEMORRHAGE As Global.System.Data.DataColumn
        
        Private columnEXTRA_OTHER As Global.System.Data.DataColumn
        
        Private columnSURGEON_SIGNATURE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_OPERA_ECCE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ECCE_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnECCE_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OPERA_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERA_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTART_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LEFT_EYEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEFT_EYE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RIGHT_EYEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIGHT_EYE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCRUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIRCULATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCULATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANESTHESIONLOGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANESTHESIONLOGIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_GA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_NEUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_NEURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_STANDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_STANDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_RETROBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_RETROBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_PERIBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_PERIBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_HEALON_GVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_HEALON_GV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_IALFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_IALF
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_VISSOATColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_VISSOAT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_DUOVISEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_DUOVISE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_HEALON5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_HEALON5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_OPHTHALINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_OPHTHALINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VIS_PROVISEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIS_PROVISE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BSS_PLUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBSS_PLUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BSSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBSS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERITO_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERITO_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERITO_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERITO_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CARTERY_MILDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARTERY_MILD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CARTERY_MODERATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCARTERY_MODERATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAUTERY_EXTENSIVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAUTERY_EXTENSIVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INCISION_SITE_CORNEOSCLERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINCISION_SITE_CORNEOSCLERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INCISION_SITE_SCLERALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINCISION_SITE_SCLERAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INCISION_SIZE_SUPERRIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINCISION_SIZE_SUPERRIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INCISION_SIZE_SUPERRIOR_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINCISION_SIZE_SUPERRIOR_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INCISION_SIZE_SUPERRIOR_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINCISION_SIZE_SUPERRIOR_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAPSULOTOMY_CYSTOTOMYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPSULOTOMY_CYSTOTOMY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAPSULOTOMY_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPSULOTOMY_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUCLEUS_EXPRESSIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUCLEUS_EXPRESSION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUCLEUS_LENSLOOPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUCLEUS_LENSLOOP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NUCLEUS_VISCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUCLEUS_VISCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CORTEX_SIMCO_IAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORTEX_SIMCO_IA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAPSULE_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPSULE_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAPSULE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAPSULE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_IN_CAPSULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_IN_CAPSULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_IN_SULCUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_IN_SULCUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IOL_IN_ACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIOL_IN_AC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUTURE_NYLONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUTURE_NYLON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUTURE_NYLON_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUTURE_NYLON_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUTURE_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUTURE_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUN_GENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUN_GENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUN_CEFAZOLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUN_CEFAZOLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUN_DEXAMETHASONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUN_DEXAMETHASONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUN_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUN_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_PILOCARPINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_PILOCARPINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_MAXITROLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_MAXITROL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXTRA_IRRIDECTOMYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRA_IRRIDECTOMY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXTRA_LOCATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRA_LOCATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXTRA_CAPSULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRA_CAPSULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXTRA_VITREOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRA_VITREOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXTRA_ANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRA_ANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXTRA_AC_HEMORRHAGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRA_AC_HEMORRHAGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXTRA_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRA_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEON_SIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON_SIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_OPERA_ECCERow
            Get
                Return CType(Me.Rows(index),S_OPERA_ECCERow)
            End Get
        End Property
        
        Public Event S_OPERA_ECCERowChanging As S_OPERA_ECCERowChangeEventHandler
        
        Public Event S_OPERA_ECCERowChanged As S_OPERA_ECCERowChangeEventHandler
        
        Public Event S_OPERA_ECCERowDeleting As S_OPERA_ECCERowChangeEventHandler
        
        Public Event S_OPERA_ECCERowDeleted As S_OPERA_ECCERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_OPERA_ECCERow(ByVal row As S_OPERA_ECCERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_OPERA_ECCERow( _
                    ByVal CREATE_DATE As Date,  _
                    ByVal parentView_OTRegistrationRowByOper_ECCE As View_OTRegistrationRow,  _
                    ByVal PATIENT_NO As Decimal,  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal LEFT_EYE As Boolean,  _
                    ByVal RIGHT_EYE As Boolean,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Boolean,  _
                    ByVal S_AN_NEURO As Boolean,  _
                    ByVal S_AN_STANDBY As Boolean,  _
                    ByVal S_AN_RETROBULBAR As Boolean,  _
                    ByVal S_AN_PERIBULBAR As Boolean,  _
                    ByVal S_AN_TOPICAL As Boolean,  _
                    ByVal VIS_HEALON_GV As Boolean,  _
                    ByVal VIS_IALF As Boolean,  _
                    ByVal VIS_VISSOAT As Boolean,  _
                    ByVal VIS_DUOVISE As Boolean,  _
                    ByVal VIS_HEALON5 As Boolean,  _
                    ByVal VIS_OPHTHALINE As Boolean,  _
                    ByVal VIS_PROVISE As Boolean,  _
                    ByVal BSS_PLUS As Boolean,  _
                    ByVal BSS As Boolean,  _
                    ByVal PERITO_YES As Boolean,  _
                    ByVal PERITO_NO As Boolean,  _
                    ByVal CARTERY_MILD As Boolean,  _
                    ByVal CARTERY_MODERATE As Boolean,  _
                    ByVal CAUTERY_EXTENSIVE As Boolean,  _
                    ByVal INCISION_SITE_CORNEOSCLERAL As Boolean,  _
                    ByVal INCISION_SITE_SCLERAL As Boolean,  _
                    ByVal INCISION_SIZE_SUPERRIOR As Boolean,  _
                    ByVal INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal CAPSULOTOMY_CYSTOTOMY As Boolean,  _
                    ByVal CAPSULOTOMY_OTHERS As String,  _
                    ByVal NUCLEUS_EXPRESSION As Boolean,  _
                    ByVal NUCLEUS_LENSLOOP As Boolean,  _
                    ByVal NUCLEUS_VISCO As Boolean,  _
                    ByVal CORTEX_SIMCO_IA As Boolean,  _
                    ByVal CAPSULE_YES As Boolean,  _
                    ByVal CAPSULE_NO As Boolean,  _
                    ByVal IOL_IN_CAPSULAR As Boolean,  _
                    ByVal IOL_IN_SULCUS As Boolean,  _
                    ByVal IOL_IN_AC As Boolean,  _
                    ByVal SUTURE_NYLON As Boolean,  _
                    ByVal SUTURE_NYLON_NOTE As String,  _
                    ByVal SUTURE_OTHERS As String,  _
                    ByVal SUBCONJUN_GENTAL As Boolean,  _
                    ByVal SUBCONJUN_CEFAZOLIN As Boolean,  _
                    ByVal SUBCONJUN_DEXAMETHASONE As Boolean,  _
                    ByVal SUBCONJUN_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Boolean,  _
                    ByVal TOPICAL_MAXITROL As Boolean,  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal EXTRA_IRRIDECTOMY As Boolean,  _
                    ByVal EXTRA_LOCATION As String,  _
                    ByVal EXTRA_CAPSULAR As Boolean,  _
                    ByVal EXTRA_VITREOS As Boolean,  _
                    ByVal EXTRA_ANTERIOR As Boolean,  _
                    ByVal EXTRA_AC_HEMORRHAGE As Boolean,  _
                    ByVal EXTRA_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String) As S_OPERA_ECCERow
            Dim rowS_OPERA_ECCERow As S_OPERA_ECCERow = CType(Me.NewRow,S_OPERA_ECCERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CREATE_DATE, Nothing, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, LEFT_EYE, RIGHT_EYE, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS_OPHTHALINE, VIS_PROVISE, BSS_PLUS, BSS, PERITO_YES, PERITO_NO, CARTERY_MILD, CARTERY_MODERATE, CAUTERY_EXTENSIVE, INCISION_SITE_CORNEOSCLERAL, INCISION_SITE_SCLERAL, INCISION_SIZE_SUPERRIOR, INCISION_SIZE_SUPERRIOR_NOTE, INCISION_SIZE_SUPERRIOR_OTHER, CAPSULOTOMY_CYSTOTOMY, CAPSULOTOMY_OTHERS, NUCLEUS_EXPRESSION, NUCLEUS_LENSLOOP, NUCLEUS_VISCO, CORTEX_SIMCO_IA, CAPSULE_YES, CAPSULE_NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTURE_NYLON, SUTURE_NYLON_NOTE, SUTURE_OTHERS, SUBCONJUN_GENTAL, SUBCONJUN_CEFAZOLIN, SUBCONJUN_DEXAMETHASONE, SUBCONJUN_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, EXTRA_IRRIDECTOMY, EXTRA_LOCATION, EXTRA_CAPSULAR, EXTRA_VITREOS, EXTRA_ANTERIOR, EXTRA_AC_HEMORRHAGE, EXTRA_OTHER, SURGEON_SIGNATURE}
            If (Not (parentView_OTRegistrationRowByOper_ECCE) Is Nothing) Then
                columnValuesArray(2) = parentView_OTRegistrationRowByOper_ECCE(0)
            End If
            rowS_OPERA_ECCERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_OPERA_ECCERow)
            Return rowS_OPERA_ECCERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByECCE_ID(ByVal ECCE_ID As Decimal) As S_OPERA_ECCERow
            Return CType(Me.Rows.Find(New Object() {ECCE_ID}),S_OPERA_ECCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_OPERA_ECCEDataTable = CType(MyBase.Clone,S_OPERA_ECCEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_OPERA_ECCEDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnECCE_ID = MyBase.Columns("ECCE_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnOPERA_NO = MyBase.Columns("OPERA_NO")
            Me.columnPATIENT_NO = MyBase.Columns("PATIENT_NO")
            Me.columnPATIENT_NAME = MyBase.Columns("PATIENT_NAME")
            Me.columnPATIENT_SEX = MyBase.Columns("PATIENT_SEX")
            Me.columnPATIENT_AGE = MyBase.Columns("PATIENT_AGE")
            Me.columnSTART_TIME = MyBase.Columns("START_TIME")
            Me.columnLEFT_EYE = MyBase.Columns("LEFT_EYE")
            Me.columnRIGHT_EYE = MyBase.Columns("RIGHT_EYE")
            Me.columnSURGEON = MyBase.Columns("SURGEON")
            Me.columnSCRUB = MyBase.Columns("SCRUB")
            Me.columnCIRCULATING = MyBase.Columns("CIRCULATING")
            Me.columnANESTHESIONLOGIST = MyBase.Columns("ANESTHESIONLOGIST")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnS_AN_GA = MyBase.Columns("S_AN_GA")
            Me.columnS_AN_NEURO = MyBase.Columns("S_AN_NEURO")
            Me.columnS_AN_STANDBY = MyBase.Columns("S_AN_STANDBY")
            Me.columnS_AN_RETROBULBAR = MyBase.Columns("S_AN_RETROBULBAR")
            Me.columnS_AN_PERIBULBAR = MyBase.Columns("S_AN_PERIBULBAR")
            Me.columnS_AN_TOPICAL = MyBase.Columns("S_AN_TOPICAL")
            Me.columnVIS_HEALON_GV = MyBase.Columns("VIS_HEALON_GV")
            Me.columnVIS_IALF = MyBase.Columns("VIS_IALF")
            Me.columnVIS_VISSOAT = MyBase.Columns("VIS_VISSOAT")
            Me.columnVIS_DUOVISE = MyBase.Columns("VIS_DUOVISE")
            Me.columnVIS_HEALON5 = MyBase.Columns("VIS_HEALON5")
            Me.columnVIS_OPHTHALINE = MyBase.Columns("VIS_OPHTHALINE")
            Me.columnVIS_PROVISE = MyBase.Columns("VIS_PROVISE")
            Me.columnBSS_PLUS = MyBase.Columns("BSS_PLUS")
            Me.columnBSS = MyBase.Columns("BSS")
            Me.columnPERITO_YES = MyBase.Columns("PERITO_YES")
            Me.columnPERITO_NO = MyBase.Columns("PERITO_NO")
            Me.columnCARTERY_MILD = MyBase.Columns("CARTERY_MILD")
            Me.columnCARTERY_MODERATE = MyBase.Columns("CARTERY_MODERATE")
            Me.columnCAUTERY_EXTENSIVE = MyBase.Columns("CAUTERY_EXTENSIVE")
            Me.columnINCISION_SITE_CORNEOSCLERAL = MyBase.Columns("INCISION_SITE_CORNEOSCLERAL")
            Me.columnINCISION_SITE_SCLERAL = MyBase.Columns("INCISION_SITE_SCLERAL")
            Me.columnINCISION_SIZE_SUPERRIOR = MyBase.Columns("INCISION_SIZE_SUPERRIOR")
            Me.columnINCISION_SIZE_SUPERRIOR_NOTE = MyBase.Columns("INCISION_SIZE_SUPERRIOR_NOTE")
            Me.columnINCISION_SIZE_SUPERRIOR_OTHER = MyBase.Columns("INCISION_SIZE_SUPERRIOR_OTHER")
            Me.columnCAPSULOTOMY_CYSTOTOMY = MyBase.Columns("CAPSULOTOMY_CYSTOTOMY")
            Me.columnCAPSULOTOMY_OTHERS = MyBase.Columns("CAPSULOTOMY_OTHERS")
            Me.columnNUCLEUS_EXPRESSION = MyBase.Columns("NUCLEUS_EXPRESSION")
            Me.columnNUCLEUS_LENSLOOP = MyBase.Columns("NUCLEUS_LENSLOOP")
            Me.columnNUCLEUS_VISCO = MyBase.Columns("NUCLEUS_VISCO")
            Me.columnCORTEX_SIMCO_IA = MyBase.Columns("CORTEX_SIMCO_IA")
            Me.columnCAPSULE_YES = MyBase.Columns("CAPSULE_YES")
            Me.columnCAPSULE_NO = MyBase.Columns("CAPSULE_NO")
            Me.columnIOL_IN_CAPSULAR = MyBase.Columns("IOL_IN_CAPSULAR")
            Me.columnIOL_IN_SULCUS = MyBase.Columns("IOL_IN_SULCUS")
            Me.columnIOL_IN_AC = MyBase.Columns("IOL_IN_AC")
            Me.columnSUTURE_NYLON = MyBase.Columns("SUTURE_NYLON")
            Me.columnSUTURE_NYLON_NOTE = MyBase.Columns("SUTURE_NYLON_NOTE")
            Me.columnSUTURE_OTHERS = MyBase.Columns("SUTURE_OTHERS")
            Me.columnSUBCONJUN_GENTAL = MyBase.Columns("SUBCONJUN_GENTAL")
            Me.columnSUBCONJUN_CEFAZOLIN = MyBase.Columns("SUBCONJUN_CEFAZOLIN")
            Me.columnSUBCONJUN_DEXAMETHASONE = MyBase.Columns("SUBCONJUN_DEXAMETHASONE")
            Me.columnSUBCONJUN_OTHERS = MyBase.Columns("SUBCONJUN_OTHERS")
            Me.columnTOPICAL_PILOCARPINE = MyBase.Columns("TOPICAL_PILOCARPINE")
            Me.columnTOPICAL_MAXITROL = MyBase.Columns("TOPICAL_MAXITROL")
            Me.columnTOPICAL_OTHERS = MyBase.Columns("TOPICAL_OTHERS")
            Me.columnEXTRA_IRRIDECTOMY = MyBase.Columns("EXTRA_IRRIDECTOMY")
            Me.columnEXTRA_LOCATION = MyBase.Columns("EXTRA_LOCATION")
            Me.columnEXTRA_CAPSULAR = MyBase.Columns("EXTRA_CAPSULAR")
            Me.columnEXTRA_VITREOS = MyBase.Columns("EXTRA_VITREOS")
            Me.columnEXTRA_ANTERIOR = MyBase.Columns("EXTRA_ANTERIOR")
            Me.columnEXTRA_AC_HEMORRHAGE = MyBase.Columns("EXTRA_AC_HEMORRHAGE")
            Me.columnEXTRA_OTHER = MyBase.Columns("EXTRA_OTHER")
            Me.columnSURGEON_SIGNATURE = MyBase.Columns("SURGEON_SIGNATURE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnECCE_ID = New Global.System.Data.DataColumn("ECCE_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnECCE_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnOPERA_NO = New Global.System.Data.DataColumn("OPERA_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERA_NO)
            Me.columnPATIENT_NO = New Global.System.Data.DataColumn("PATIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NO)
            Me.columnPATIENT_NAME = New Global.System.Data.DataColumn("PATIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NAME)
            Me.columnPATIENT_SEX = New Global.System.Data.DataColumn("PATIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_SEX)
            Me.columnPATIENT_AGE = New Global.System.Data.DataColumn("PATIENT_AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_AGE)
            Me.columnSTART_TIME = New Global.System.Data.DataColumn("START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTART_TIME)
            Me.columnLEFT_EYE = New Global.System.Data.DataColumn("LEFT_EYE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEFT_EYE)
            Me.columnRIGHT_EYE = New Global.System.Data.DataColumn("RIGHT_EYE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIGHT_EYE)
            Me.columnSURGEON = New Global.System.Data.DataColumn("SURGEON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON)
            Me.columnSCRUB = New Global.System.Data.DataColumn("SCRUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRUB)
            Me.columnCIRCULATING = New Global.System.Data.DataColumn("CIRCULATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCULATING)
            Me.columnANESTHESIONLOGIST = New Global.System.Data.DataColumn("ANESTHESIONLOGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANESTHESIONLOGIST)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnS_AN_GA = New Global.System.Data.DataColumn("S_AN_GA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_GA)
            Me.columnS_AN_NEURO = New Global.System.Data.DataColumn("S_AN_NEURO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_NEURO)
            Me.columnS_AN_STANDBY = New Global.System.Data.DataColumn("S_AN_STANDBY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_STANDBY)
            Me.columnS_AN_RETROBULBAR = New Global.System.Data.DataColumn("S_AN_RETROBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_RETROBULBAR)
            Me.columnS_AN_PERIBULBAR = New Global.System.Data.DataColumn("S_AN_PERIBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_PERIBULBAR)
            Me.columnS_AN_TOPICAL = New Global.System.Data.DataColumn("S_AN_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_TOPICAL)
            Me.columnVIS_HEALON_GV = New Global.System.Data.DataColumn("VIS_HEALON_GV", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_HEALON_GV)
            Me.columnVIS_IALF = New Global.System.Data.DataColumn("VIS_IALF", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_IALF)
            Me.columnVIS_VISSOAT = New Global.System.Data.DataColumn("VIS_VISSOAT", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_VISSOAT)
            Me.columnVIS_DUOVISE = New Global.System.Data.DataColumn("VIS_DUOVISE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_DUOVISE)
            Me.columnVIS_HEALON5 = New Global.System.Data.DataColumn("VIS_HEALON5", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_HEALON5)
            Me.columnVIS_OPHTHALINE = New Global.System.Data.DataColumn("VIS_OPHTHALINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_OPHTHALINE)
            Me.columnVIS_PROVISE = New Global.System.Data.DataColumn("VIS_PROVISE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIS_PROVISE)
            Me.columnBSS_PLUS = New Global.System.Data.DataColumn("BSS_PLUS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBSS_PLUS)
            Me.columnBSS = New Global.System.Data.DataColumn("BSS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBSS)
            Me.columnPERITO_YES = New Global.System.Data.DataColumn("PERITO_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERITO_YES)
            Me.columnPERITO_NO = New Global.System.Data.DataColumn("PERITO_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERITO_NO)
            Me.columnCARTERY_MILD = New Global.System.Data.DataColumn("CARTERY_MILD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARTERY_MILD)
            Me.columnCARTERY_MODERATE = New Global.System.Data.DataColumn("CARTERY_MODERATE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCARTERY_MODERATE)
            Me.columnCAUTERY_EXTENSIVE = New Global.System.Data.DataColumn("CAUTERY_EXTENSIVE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAUTERY_EXTENSIVE)
            Me.columnINCISION_SITE_CORNEOSCLERAL = New Global.System.Data.DataColumn("INCISION_SITE_CORNEOSCLERAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINCISION_SITE_CORNEOSCLERAL)
            Me.columnINCISION_SITE_SCLERAL = New Global.System.Data.DataColumn("INCISION_SITE_SCLERAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINCISION_SITE_SCLERAL)
            Me.columnINCISION_SIZE_SUPERRIOR = New Global.System.Data.DataColumn("INCISION_SIZE_SUPERRIOR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINCISION_SIZE_SUPERRIOR)
            Me.columnINCISION_SIZE_SUPERRIOR_NOTE = New Global.System.Data.DataColumn("INCISION_SIZE_SUPERRIOR_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINCISION_SIZE_SUPERRIOR_NOTE)
            Me.columnINCISION_SIZE_SUPERRIOR_OTHER = New Global.System.Data.DataColumn("INCISION_SIZE_SUPERRIOR_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINCISION_SIZE_SUPERRIOR_OTHER)
            Me.columnCAPSULOTOMY_CYSTOTOMY = New Global.System.Data.DataColumn("CAPSULOTOMY_CYSTOTOMY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPSULOTOMY_CYSTOTOMY)
            Me.columnCAPSULOTOMY_OTHERS = New Global.System.Data.DataColumn("CAPSULOTOMY_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPSULOTOMY_OTHERS)
            Me.columnNUCLEUS_EXPRESSION = New Global.System.Data.DataColumn("NUCLEUS_EXPRESSION", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUCLEUS_EXPRESSION)
            Me.columnNUCLEUS_LENSLOOP = New Global.System.Data.DataColumn("NUCLEUS_LENSLOOP", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUCLEUS_LENSLOOP)
            Me.columnNUCLEUS_VISCO = New Global.System.Data.DataColumn("NUCLEUS_VISCO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUCLEUS_VISCO)
            Me.columnCORTEX_SIMCO_IA = New Global.System.Data.DataColumn("CORTEX_SIMCO_IA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORTEX_SIMCO_IA)
            Me.columnCAPSULE_YES = New Global.System.Data.DataColumn("CAPSULE_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPSULE_YES)
            Me.columnCAPSULE_NO = New Global.System.Data.DataColumn("CAPSULE_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAPSULE_NO)
            Me.columnIOL_IN_CAPSULAR = New Global.System.Data.DataColumn("IOL_IN_CAPSULAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_IN_CAPSULAR)
            Me.columnIOL_IN_SULCUS = New Global.System.Data.DataColumn("IOL_IN_SULCUS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_IN_SULCUS)
            Me.columnIOL_IN_AC = New Global.System.Data.DataColumn("IOL_IN_AC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIOL_IN_AC)
            Me.columnSUTURE_NYLON = New Global.System.Data.DataColumn("SUTURE_NYLON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUTURE_NYLON)
            Me.columnSUTURE_NYLON_NOTE = New Global.System.Data.DataColumn("SUTURE_NYLON_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUTURE_NYLON_NOTE)
            Me.columnSUTURE_OTHERS = New Global.System.Data.DataColumn("SUTURE_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUTURE_OTHERS)
            Me.columnSUBCONJUN_GENTAL = New Global.System.Data.DataColumn("SUBCONJUN_GENTAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUN_GENTAL)
            Me.columnSUBCONJUN_CEFAZOLIN = New Global.System.Data.DataColumn("SUBCONJUN_CEFAZOLIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUN_CEFAZOLIN)
            Me.columnSUBCONJUN_DEXAMETHASONE = New Global.System.Data.DataColumn("SUBCONJUN_DEXAMETHASONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUN_DEXAMETHASONE)
            Me.columnSUBCONJUN_OTHERS = New Global.System.Data.DataColumn("SUBCONJUN_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUN_OTHERS)
            Me.columnTOPICAL_PILOCARPINE = New Global.System.Data.DataColumn("TOPICAL_PILOCARPINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_PILOCARPINE)
            Me.columnTOPICAL_MAXITROL = New Global.System.Data.DataColumn("TOPICAL_MAXITROL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_MAXITROL)
            Me.columnTOPICAL_OTHERS = New Global.System.Data.DataColumn("TOPICAL_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_OTHERS)
            Me.columnEXTRA_IRRIDECTOMY = New Global.System.Data.DataColumn("EXTRA_IRRIDECTOMY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRA_IRRIDECTOMY)
            Me.columnEXTRA_LOCATION = New Global.System.Data.DataColumn("EXTRA_LOCATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRA_LOCATION)
            Me.columnEXTRA_CAPSULAR = New Global.System.Data.DataColumn("EXTRA_CAPSULAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRA_CAPSULAR)
            Me.columnEXTRA_VITREOS = New Global.System.Data.DataColumn("EXTRA_VITREOS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRA_VITREOS)
            Me.columnEXTRA_ANTERIOR = New Global.System.Data.DataColumn("EXTRA_ANTERIOR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRA_ANTERIOR)
            Me.columnEXTRA_AC_HEMORRHAGE = New Global.System.Data.DataColumn("EXTRA_AC_HEMORRHAGE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRA_AC_HEMORRHAGE)
            Me.columnEXTRA_OTHER = New Global.System.Data.DataColumn("EXTRA_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRA_OTHER)
            Me.columnSURGEON_SIGNATURE = New Global.System.Data.DataColumn("SURGEON_SIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON_SIGNATURE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnECCE_ID}, true))
            Me.columnECCE_ID.AutoIncrement = true
            Me.columnECCE_ID.AutoIncrementSeed = -1
            Me.columnECCE_ID.AutoIncrementStep = -1
            Me.columnECCE_ID.AllowDBNull = false
            Me.columnECCE_ID.ReadOnly = true
            Me.columnECCE_ID.Unique = true
            Me.columnPATIENT_NAME.MaxLength = 50
            Me.columnPATIENT_SEX.MaxLength = 1
            Me.columnPATIENT_AGE.MaxLength = 50
            Me.columnSTART_TIME.MaxLength = 50
            Me.columnSURGEON.MaxLength = 50
            Me.columnSCRUB.MaxLength = 50
            Me.columnCIRCULATING.MaxLength = 50
            Me.columnANESTHESIONLOGIST.MaxLength = 50
            Me.columnDIAGNOSIS.MaxLength = 50
            Me.columnINCISION_SIZE_SUPERRIOR_NOTE.MaxLength = 150
            Me.columnINCISION_SIZE_SUPERRIOR_OTHER.MaxLength = 150
            Me.columnCAPSULOTOMY_OTHERS.MaxLength = 150
            Me.columnSUTURE_NYLON_NOTE.MaxLength = 50
            Me.columnSUTURE_OTHERS.MaxLength = 150
            Me.columnSUBCONJUN_OTHERS.MaxLength = 150
            Me.columnTOPICAL_OTHERS.MaxLength = 150
            Me.columnEXTRA_LOCATION.MaxLength = 50
            Me.columnEXTRA_OTHER.MaxLength = 250
            Me.columnSURGEON_SIGNATURE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_OPERA_ECCERow() As S_OPERA_ECCERow
            Return CType(Me.NewRow,S_OPERA_ECCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_OPERA_ECCERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_OPERA_ECCERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_OPERA_ECCERowChangedEvent) Is Nothing) Then
                RaiseEvent S_OPERA_ECCERowChanged(Me, New S_OPERA_ECCERowChangeEvent(CType(e.Row,S_OPERA_ECCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_OPERA_ECCERowChangingEvent) Is Nothing) Then
                RaiseEvent S_OPERA_ECCERowChanging(Me, New S_OPERA_ECCERowChangeEvent(CType(e.Row,S_OPERA_ECCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_OPERA_ECCERowDeletedEvent) Is Nothing) Then
                RaiseEvent S_OPERA_ECCERowDeleted(Me, New S_OPERA_ECCERowChangeEvent(CType(e.Row,S_OPERA_ECCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_OPERA_ECCERowDeletingEvent) Is Nothing) Then
                RaiseEvent S_OPERA_ECCERowDeleting(Me, New S_OPERA_ECCERowChangeEvent(CType(e.Row,S_OPERA_ECCERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_OPERA_ECCERow(ByVal row As S_OPERA_ECCERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_OPERA_ECCEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_OPER_PAR_PLANA_VITRECTOMYDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_OPER_PAR_PLANA_VITRECTOMYRow)
        
        Private columnPA_PLANA_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnOPERA_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NAME As Global.System.Data.DataColumn
        
        Private columnPATIENT_SEX As Global.System.Data.DataColumn
        
        Private columnPATIENT_AGE As Global.System.Data.DataColumn
        
        Private columnSTART_TIME As Global.System.Data.DataColumn
        
        Private columnSCRUB As Global.System.Data.DataColumn
        
        Private columnCIRCULATING As Global.System.Data.DataColumn
        
        Private columnANESTHESIONLOGIST As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnS_AN_GA As Global.System.Data.DataColumn
        
        Private columnS_AN_NEURO As Global.System.Data.DataColumn
        
        Private columnS_AN_STANDBY As Global.System.Data.DataColumn
        
        Private columnS_AN_RETROBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_PERIBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_TOPICAL As Global.System.Data.DataColumn
        
        Private columnPERITOMY As Global.System.Data.DataColumn
        
        Private columnSCLEROTOMISE As Global.System.Data.DataColumn
        
        Private columnSCLEROTOMISE_NOTE As Global.System.Data.DataColumn
        
        Private columnINFUSION_SIZE As Global.System.Data.DataColumn
        
        Private columnINFUSION_SIZE_NOTE As Global.System.Data.DataColumn
        
        Private columnCORE_VITRECTOMY As Global.System.Data.DataColumn
        
        Private columnCORE_VITRECTOMY_NOTE1 As Global.System.Data.DataColumn
        
        Private columnCORE_VITRECTOMY_NOTE2 As Global.System.Data.DataColumn
        
        Private columnPERIPHERAL_VITRECTORMY As Global.System.Data.DataColumn
        
        Private columnMEMBRANCE_PEELING As Global.System.Data.DataColumn
        
        Private columnPERFLUOCARBON As Global.System.Data.DataColumn
        
        Private columnENDO As Global.System.Data.DataColumn
        
        Private columnENDO_LASER As Global.System.Data.DataColumn
        
        Private columnENDO_MW As Global.System.Data.DataColumn
        
        Private columnENDO_SHOTS As Global.System.Data.DataColumn
        
        Private columnRETINOCRYOPEXY As Global.System.Data.DataColumn
        
        Private columnAIR_FLUID_EXCHANGE As Global.System.Data.DataColumn
        
        Private columnGAS_EXCHANGE As Global.System.Data.DataColumn
        
        Private columnSF6 As Global.System.Data.DataColumn
        
        Private columnC6F8 As Global.System.Data.DataColumn
        
        Private columnC6F8_NOTE As Global.System.Data.DataColumn
        
        Private columnSCLERAL_BUCHING As Global.System.Data.DataColumn
        
        Private columnSILICONE_OIL As Global.System.Data.DataColumn
        
        Private columnPAR_NOTE As Global.System.Data.DataColumn
        
        Private columnSCLEROTOMY_VICRYL As Global.System.Data.DataColumn
        
        Private columnSCLEROLOMY_NYLON As Global.System.Data.DataColumn
        
        Private columnSCLEROLOMY_DEXON As Global.System.Data.DataColumn
        
        Private columnCONJUNTIVAL_NYLON As Global.System.Data.DataColumn
        
        Private columnCONJUNTIVAL_VICRYL As Global.System.Data.DataColumn
        
        Private columnSUB_GENTAL2MG As Global.System.Data.DataColumn
        
        Private columnSUB_CEFAZOLIN50MG As Global.System.Data.DataColumn
        
        Private columnSUB_DEXAMETHASONE As Global.System.Data.DataColumn
        
        Private columnSUB_OTHERS As Global.System.Data.DataColumn
        
        Private columnTOPICAL_MAXITROL As Global.System.Data.DataColumn
        
        Private columnTOPICAL_PILOCARPINE As Global.System.Data.DataColumn
        
        Private columnTOPICAL_ATROPINE As Global.System.Data.DataColumn
        
        Private columnTOPICAL_ALPHAGAN As Global.System.Data.DataColumn
        
        Private columnTOPICAL_VIGAMOX As Global.System.Data.DataColumn
        
        Private columnTOPICAL_OTHERS As Global.System.Data.DataColumn
        
        Private columnSURGEON_SIGNATURE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_OPER_PAR_PLANA_VITRECTOMY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PA_PLANA_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPA_PLANA_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OPERA_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERA_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTART_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCRUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIRCULATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCULATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANESTHESIONLOGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANESTHESIONLOGIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_GA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_NEUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_NEURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_STANDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_STANDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_RETROBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_RETROBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_PERIBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_PERIBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERITOMYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERITOMY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLEROTOMISEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLEROTOMISE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLEROTOMISE_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLEROTOMISE_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INFUSION_SIZEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFUSION_SIZE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INFUSION_SIZE_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINFUSION_SIZE_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CORE_VITRECTOMYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORE_VITRECTOMY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CORE_VITRECTOMY_NOTE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORE_VITRECTOMY_NOTE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CORE_VITRECTOMY_NOTE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCORE_VITRECTOMY_NOTE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERIPHERAL_VITRECTORMYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERIPHERAL_VITRECTORMY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MEMBRANCE_PEELINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEMBRANCE_PEELING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PERFLUOCARBONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPERFLUOCARBON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ENDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ENDO_LASERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDO_LASER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ENDO_MWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDO_MW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ENDO_SHOTSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENDO_SHOTS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RETINOCRYOPEXYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRETINOCRYOPEXY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property AIR_FLUID_EXCHANGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAIR_FLUID_EXCHANGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GAS_EXCHANGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGAS_EXCHANGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SF6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSF6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C6F8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnC6F8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property C6F8_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnC6F8_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLERAL_BUCHINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLERAL_BUCHING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SILICONE_OILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSILICONE_OIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PAR_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLEROTOMY_VICRYLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLEROTOMY_VICRYL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLEROLOMY_NYLONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLEROLOMY_NYLON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLEROLOMY_DEXONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLEROLOMY_DEXON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNTIVAL_NYLONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNTIVAL_NYLON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNTIVAL_VICRYLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNTIVAL_VICRYL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_GENTAL2MGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_GENTAL2MG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_CEFAZOLIN50MGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_CEFAZOLIN50MG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_DEXAMETHASONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_DEXAMETHASONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_MAXITROLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_MAXITROL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_PILOCARPINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_PILOCARPINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_ATROPINEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_ATROPINE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_ALPHAGANColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_ALPHAGAN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_VIGAMOXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_VIGAMOX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEON_SIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON_SIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_OPER_PAR_PLANA_VITRECTOMYRow
            Get
                Return CType(Me.Rows(index),S_OPER_PAR_PLANA_VITRECTOMYRow)
            End Get
        End Property
        
        Public Event S_OPER_PAR_PLANA_VITRECTOMYRowChanging As S_OPER_PAR_PLANA_VITRECTOMYRowChangeEventHandler
        
        Public Event S_OPER_PAR_PLANA_VITRECTOMYRowChanged As S_OPER_PAR_PLANA_VITRECTOMYRowChangeEventHandler
        
        Public Event S_OPER_PAR_PLANA_VITRECTOMYRowDeleting As S_OPER_PAR_PLANA_VITRECTOMYRowChangeEventHandler
        
        Public Event S_OPER_PAR_PLANA_VITRECTOMYRowDeleted As S_OPER_PAR_PLANA_VITRECTOMYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_OPER_PAR_PLANA_VITRECTOMYRow(ByVal row As S_OPER_PAR_PLANA_VITRECTOMYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_OPER_PAR_PLANA_VITRECTOMYRow( _
                    ByVal CREATE_DATE As Date,  _
                    ByVal parentView_OTRegistrationRowByOperParPlana As View_OTRegistrationRow,  _
                    ByVal PATIENT_NO As Decimal,  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Boolean,  _
                    ByVal S_AN_NEURO As Boolean,  _
                    ByVal S_AN_STANDBY As Boolean,  _
                    ByVal S_AN_RETROBULBAR As Boolean,  _
                    ByVal S_AN_PERIBULBAR As Boolean,  _
                    ByVal S_AN_TOPICAL As Boolean,  _
                    ByVal PERITOMY As Boolean,  _
                    ByVal SCLEROTOMISE As Boolean,  _
                    ByVal SCLEROTOMISE_NOTE As String,  _
                    ByVal INFUSION_SIZE As Boolean,  _
                    ByVal INFUSION_SIZE_NOTE As String,  _
                    ByVal CORE_VITRECTOMY As Boolean,  _
                    ByVal CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal PERIPHERAL_VITRECTORMY As Boolean,  _
                    ByVal MEMBRANCE_PEELING As Boolean,  _
                    ByVal PERFLUOCARBON As Boolean,  _
                    ByVal ENDO As Boolean,  _
                    ByVal ENDO_LASER As String,  _
                    ByVal ENDO_MW As String,  _
                    ByVal ENDO_SHOTS As String,  _
                    ByVal RETINOCRYOPEXY As Boolean,  _
                    ByVal AIR_FLUID_EXCHANGE As Boolean,  _
                    ByVal GAS_EXCHANGE As Boolean,  _
                    ByVal SF6 As Boolean,  _
                    ByVal C6F8 As Boolean,  _
                    ByVal C6F8_NOTE As String,  _
                    ByVal SCLERAL_BUCHING As Boolean,  _
                    ByVal SILICONE_OIL As Boolean,  _
                    ByVal PAR_NOTE As String,  _
                    ByVal SCLEROTOMY_VICRYL As Boolean,  _
                    ByVal SCLEROLOMY_NYLON As Boolean,  _
                    ByVal SCLEROLOMY_DEXON As Boolean,  _
                    ByVal CONJUNTIVAL_NYLON As Boolean,  _
                    ByVal CONJUNTIVAL_VICRYL As Boolean,  _
                    ByVal SUB_GENTAL2MG As Boolean,  _
                    ByVal SUB_CEFAZOLIN50MG As Boolean,  _
                    ByVal SUB_DEXAMETHASONE As Boolean,  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Boolean,  _
                    ByVal TOPICAL_PILOCARPINE As Boolean,  _
                    ByVal TOPICAL_ATROPINE As Boolean,  _
                    ByVal TOPICAL_ALPHAGAN As Boolean,  _
                    ByVal TOPICAL_VIGAMOX As Boolean,  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String) As S_OPER_PAR_PLANA_VITRECTOMYRow
            Dim rowS_OPER_PAR_PLANA_VITRECTOMYRow As S_OPER_PAR_PLANA_VITRECTOMYRow = CType(Me.NewRow,S_OPER_PAR_PLANA_VITRECTOMYRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CREATE_DATE, Nothing, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, PERITOMY, SCLEROTOMISE, SCLEROTOMISE_NOTE, INFUSION_SIZE, INFUSION_SIZE_NOTE, CORE_VITRECTOMY, CORE_VITRECTOMY_NOTE1, CORE_VITRECTOMY_NOTE2, PERIPHERAL_VITRECTORMY, MEMBRANCE_PEELING, PERFLUOCARBON, ENDO, ENDO_LASER, ENDO_MW, ENDO_SHOTS, RETINOCRYOPEXY, AIR_FLUID_EXCHANGE, GAS_EXCHANGE, SF6, C6F8, C6F8_NOTE, SCLERAL_BUCHING, SILICONE_OIL, PAR_NOTE, SCLEROTOMY_VICRYL, SCLEROLOMY_NYLON, SCLEROLOMY_DEXON, CONJUNTIVAL_NYLON, CONJUNTIVAL_VICRYL, SUB_GENTAL2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE, SUB_OTHERS, TOPICAL_MAXITROL, TOPICAL_PILOCARPINE, TOPICAL_ATROPINE, TOPICAL_ALPHAGAN, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE}
            If (Not (parentView_OTRegistrationRowByOperParPlana) Is Nothing) Then
                columnValuesArray(2) = parentView_OTRegistrationRowByOperParPlana(0)
            End If
            rowS_OPER_PAR_PLANA_VITRECTOMYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_OPER_PAR_PLANA_VITRECTOMYRow)
            Return rowS_OPER_PAR_PLANA_VITRECTOMYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByPA_PLANA_ID(ByVal PA_PLANA_ID As Decimal) As S_OPER_PAR_PLANA_VITRECTOMYRow
            Return CType(Me.Rows.Find(New Object() {PA_PLANA_ID}),S_OPER_PAR_PLANA_VITRECTOMYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_OPER_PAR_PLANA_VITRECTOMYDataTable = CType(MyBase.Clone,S_OPER_PAR_PLANA_VITRECTOMYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_OPER_PAR_PLANA_VITRECTOMYDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPA_PLANA_ID = MyBase.Columns("PA_PLANA_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnOPERA_NO = MyBase.Columns("OPERA_NO")
            Me.columnPATIENT_NO = MyBase.Columns("PATIENT_NO")
            Me.columnPATIENT_NAME = MyBase.Columns("PATIENT_NAME")
            Me.columnPATIENT_SEX = MyBase.Columns("PATIENT_SEX")
            Me.columnPATIENT_AGE = MyBase.Columns("PATIENT_AGE")
            Me.columnSTART_TIME = MyBase.Columns("START_TIME")
            Me.columnSCRUB = MyBase.Columns("SCRUB")
            Me.columnCIRCULATING = MyBase.Columns("CIRCULATING")
            Me.columnANESTHESIONLOGIST = MyBase.Columns("ANESTHESIONLOGIST")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnS_AN_GA = MyBase.Columns("S_AN_GA")
            Me.columnS_AN_NEURO = MyBase.Columns("S_AN_NEURO")
            Me.columnS_AN_STANDBY = MyBase.Columns("S_AN_STANDBY")
            Me.columnS_AN_RETROBULBAR = MyBase.Columns("S_AN_RETROBULBAR")
            Me.columnS_AN_PERIBULBAR = MyBase.Columns("S_AN_PERIBULBAR")
            Me.columnS_AN_TOPICAL = MyBase.Columns("S_AN_TOPICAL")
            Me.columnPERITOMY = MyBase.Columns("PERITOMY")
            Me.columnSCLEROTOMISE = MyBase.Columns("SCLEROTOMISE")
            Me.columnSCLEROTOMISE_NOTE = MyBase.Columns("SCLEROTOMISE_NOTE")
            Me.columnINFUSION_SIZE = MyBase.Columns("INFUSION_SIZE")
            Me.columnINFUSION_SIZE_NOTE = MyBase.Columns("INFUSION_SIZE_NOTE")
            Me.columnCORE_VITRECTOMY = MyBase.Columns("CORE_VITRECTOMY")
            Me.columnCORE_VITRECTOMY_NOTE1 = MyBase.Columns("CORE_VITRECTOMY_NOTE1")
            Me.columnCORE_VITRECTOMY_NOTE2 = MyBase.Columns("CORE_VITRECTOMY_NOTE2")
            Me.columnPERIPHERAL_VITRECTORMY = MyBase.Columns("PERIPHERAL_VITRECTORMY")
            Me.columnMEMBRANCE_PEELING = MyBase.Columns("MEMBRANCE_PEELING")
            Me.columnPERFLUOCARBON = MyBase.Columns("PERFLUOCARBON")
            Me.columnENDO = MyBase.Columns("ENDO")
            Me.columnENDO_LASER = MyBase.Columns("ENDO_LASER")
            Me.columnENDO_MW = MyBase.Columns("ENDO_MW")
            Me.columnENDO_SHOTS = MyBase.Columns("ENDO_SHOTS")
            Me.columnRETINOCRYOPEXY = MyBase.Columns("RETINOCRYOPEXY")
            Me.columnAIR_FLUID_EXCHANGE = MyBase.Columns("AIR_FLUID_EXCHANGE")
            Me.columnGAS_EXCHANGE = MyBase.Columns("GAS_EXCHANGE")
            Me.columnSF6 = MyBase.Columns("SF6")
            Me.columnC6F8 = MyBase.Columns("C6F8")
            Me.columnC6F8_NOTE = MyBase.Columns("C6F8_NOTE")
            Me.columnSCLERAL_BUCHING = MyBase.Columns("SCLERAL_BUCHING")
            Me.columnSILICONE_OIL = MyBase.Columns("SILICONE_OIL")
            Me.columnPAR_NOTE = MyBase.Columns("PAR_NOTE")
            Me.columnSCLEROTOMY_VICRYL = MyBase.Columns("SCLEROTOMY_VICRYL")
            Me.columnSCLEROLOMY_NYLON = MyBase.Columns("SCLEROLOMY_NYLON")
            Me.columnSCLEROLOMY_DEXON = MyBase.Columns("SCLEROLOMY_DEXON")
            Me.columnCONJUNTIVAL_NYLON = MyBase.Columns("CONJUNTIVAL_NYLON")
            Me.columnCONJUNTIVAL_VICRYL = MyBase.Columns("CONJUNTIVAL_VICRYL")
            Me.columnSUB_GENTAL2MG = MyBase.Columns("SUB_GENTAL2MG")
            Me.columnSUB_CEFAZOLIN50MG = MyBase.Columns("SUB_CEFAZOLIN50MG")
            Me.columnSUB_DEXAMETHASONE = MyBase.Columns("SUB_DEXAMETHASONE")
            Me.columnSUB_OTHERS = MyBase.Columns("SUB_OTHERS")
            Me.columnTOPICAL_MAXITROL = MyBase.Columns("TOPICAL_MAXITROL")
            Me.columnTOPICAL_PILOCARPINE = MyBase.Columns("TOPICAL_PILOCARPINE")
            Me.columnTOPICAL_ATROPINE = MyBase.Columns("TOPICAL_ATROPINE")
            Me.columnTOPICAL_ALPHAGAN = MyBase.Columns("TOPICAL_ALPHAGAN")
            Me.columnTOPICAL_VIGAMOX = MyBase.Columns("TOPICAL_VIGAMOX")
            Me.columnTOPICAL_OTHERS = MyBase.Columns("TOPICAL_OTHERS")
            Me.columnSURGEON_SIGNATURE = MyBase.Columns("SURGEON_SIGNATURE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPA_PLANA_ID = New Global.System.Data.DataColumn("PA_PLANA_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPA_PLANA_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnOPERA_NO = New Global.System.Data.DataColumn("OPERA_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERA_NO)
            Me.columnPATIENT_NO = New Global.System.Data.DataColumn("PATIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NO)
            Me.columnPATIENT_NAME = New Global.System.Data.DataColumn("PATIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NAME)
            Me.columnPATIENT_SEX = New Global.System.Data.DataColumn("PATIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_SEX)
            Me.columnPATIENT_AGE = New Global.System.Data.DataColumn("PATIENT_AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_AGE)
            Me.columnSTART_TIME = New Global.System.Data.DataColumn("START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTART_TIME)
            Me.columnSCRUB = New Global.System.Data.DataColumn("SCRUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRUB)
            Me.columnCIRCULATING = New Global.System.Data.DataColumn("CIRCULATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCULATING)
            Me.columnANESTHESIONLOGIST = New Global.System.Data.DataColumn("ANESTHESIONLOGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANESTHESIONLOGIST)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnS_AN_GA = New Global.System.Data.DataColumn("S_AN_GA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_GA)
            Me.columnS_AN_NEURO = New Global.System.Data.DataColumn("S_AN_NEURO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_NEURO)
            Me.columnS_AN_STANDBY = New Global.System.Data.DataColumn("S_AN_STANDBY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_STANDBY)
            Me.columnS_AN_RETROBULBAR = New Global.System.Data.DataColumn("S_AN_RETROBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_RETROBULBAR)
            Me.columnS_AN_PERIBULBAR = New Global.System.Data.DataColumn("S_AN_PERIBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_PERIBULBAR)
            Me.columnS_AN_TOPICAL = New Global.System.Data.DataColumn("S_AN_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_TOPICAL)
            Me.columnPERITOMY = New Global.System.Data.DataColumn("PERITOMY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERITOMY)
            Me.columnSCLEROTOMISE = New Global.System.Data.DataColumn("SCLEROTOMISE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLEROTOMISE)
            Me.columnSCLEROTOMISE_NOTE = New Global.System.Data.DataColumn("SCLEROTOMISE_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLEROTOMISE_NOTE)
            Me.columnINFUSION_SIZE = New Global.System.Data.DataColumn("INFUSION_SIZE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFUSION_SIZE)
            Me.columnINFUSION_SIZE_NOTE = New Global.System.Data.DataColumn("INFUSION_SIZE_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINFUSION_SIZE_NOTE)
            Me.columnCORE_VITRECTOMY = New Global.System.Data.DataColumn("CORE_VITRECTOMY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORE_VITRECTOMY)
            Me.columnCORE_VITRECTOMY_NOTE1 = New Global.System.Data.DataColumn("CORE_VITRECTOMY_NOTE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORE_VITRECTOMY_NOTE1)
            Me.columnCORE_VITRECTOMY_NOTE2 = New Global.System.Data.DataColumn("CORE_VITRECTOMY_NOTE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCORE_VITRECTOMY_NOTE2)
            Me.columnPERIPHERAL_VITRECTORMY = New Global.System.Data.DataColumn("PERIPHERAL_VITRECTORMY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERIPHERAL_VITRECTORMY)
            Me.columnMEMBRANCE_PEELING = New Global.System.Data.DataColumn("MEMBRANCE_PEELING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEMBRANCE_PEELING)
            Me.columnPERFLUOCARBON = New Global.System.Data.DataColumn("PERFLUOCARBON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPERFLUOCARBON)
            Me.columnENDO = New Global.System.Data.DataColumn("ENDO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDO)
            Me.columnENDO_LASER = New Global.System.Data.DataColumn("ENDO_LASER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDO_LASER)
            Me.columnENDO_MW = New Global.System.Data.DataColumn("ENDO_MW", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDO_MW)
            Me.columnENDO_SHOTS = New Global.System.Data.DataColumn("ENDO_SHOTS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENDO_SHOTS)
            Me.columnRETINOCRYOPEXY = New Global.System.Data.DataColumn("RETINOCRYOPEXY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRETINOCRYOPEXY)
            Me.columnAIR_FLUID_EXCHANGE = New Global.System.Data.DataColumn("AIR_FLUID_EXCHANGE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAIR_FLUID_EXCHANGE)
            Me.columnGAS_EXCHANGE = New Global.System.Data.DataColumn("GAS_EXCHANGE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGAS_EXCHANGE)
            Me.columnSF6 = New Global.System.Data.DataColumn("SF6", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSF6)
            Me.columnC6F8 = New Global.System.Data.DataColumn("C6F8", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC6F8)
            Me.columnC6F8_NOTE = New Global.System.Data.DataColumn("C6F8_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnC6F8_NOTE)
            Me.columnSCLERAL_BUCHING = New Global.System.Data.DataColumn("SCLERAL_BUCHING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLERAL_BUCHING)
            Me.columnSILICONE_OIL = New Global.System.Data.DataColumn("SILICONE_OIL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSILICONE_OIL)
            Me.columnPAR_NOTE = New Global.System.Data.DataColumn("PAR_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_NOTE)
            Me.columnSCLEROTOMY_VICRYL = New Global.System.Data.DataColumn("SCLEROTOMY_VICRYL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLEROTOMY_VICRYL)
            Me.columnSCLEROLOMY_NYLON = New Global.System.Data.DataColumn("SCLEROLOMY_NYLON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLEROLOMY_NYLON)
            Me.columnSCLEROLOMY_DEXON = New Global.System.Data.DataColumn("SCLEROLOMY_DEXON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLEROLOMY_DEXON)
            Me.columnCONJUNTIVAL_NYLON = New Global.System.Data.DataColumn("CONJUNTIVAL_NYLON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNTIVAL_NYLON)
            Me.columnCONJUNTIVAL_VICRYL = New Global.System.Data.DataColumn("CONJUNTIVAL_VICRYL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNTIVAL_VICRYL)
            Me.columnSUB_GENTAL2MG = New Global.System.Data.DataColumn("SUB_GENTAL2MG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_GENTAL2MG)
            Me.columnSUB_CEFAZOLIN50MG = New Global.System.Data.DataColumn("SUB_CEFAZOLIN50MG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_CEFAZOLIN50MG)
            Me.columnSUB_DEXAMETHASONE = New Global.System.Data.DataColumn("SUB_DEXAMETHASONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_DEXAMETHASONE)
            Me.columnSUB_OTHERS = New Global.System.Data.DataColumn("SUB_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_OTHERS)
            Me.columnTOPICAL_MAXITROL = New Global.System.Data.DataColumn("TOPICAL_MAXITROL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_MAXITROL)
            Me.columnTOPICAL_PILOCARPINE = New Global.System.Data.DataColumn("TOPICAL_PILOCARPINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_PILOCARPINE)
            Me.columnTOPICAL_ATROPINE = New Global.System.Data.DataColumn("TOPICAL_ATROPINE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_ATROPINE)
            Me.columnTOPICAL_ALPHAGAN = New Global.System.Data.DataColumn("TOPICAL_ALPHAGAN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_ALPHAGAN)
            Me.columnTOPICAL_VIGAMOX = New Global.System.Data.DataColumn("TOPICAL_VIGAMOX", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_VIGAMOX)
            Me.columnTOPICAL_OTHERS = New Global.System.Data.DataColumn("TOPICAL_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_OTHERS)
            Me.columnSURGEON_SIGNATURE = New Global.System.Data.DataColumn("SURGEON_SIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON_SIGNATURE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPA_PLANA_ID}, true))
            Me.columnPA_PLANA_ID.AutoIncrement = true
            Me.columnPA_PLANA_ID.AutoIncrementSeed = -1
            Me.columnPA_PLANA_ID.AutoIncrementStep = -1
            Me.columnPA_PLANA_ID.AllowDBNull = false
            Me.columnPA_PLANA_ID.ReadOnly = true
            Me.columnPA_PLANA_ID.Unique = true
            Me.columnPATIENT_NAME.MaxLength = 50
            Me.columnPATIENT_SEX.MaxLength = 1
            Me.columnPATIENT_AGE.MaxLength = 50
            Me.columnSTART_TIME.MaxLength = 50
            Me.columnSCRUB.MaxLength = 50
            Me.columnCIRCULATING.MaxLength = 50
            Me.columnANESTHESIONLOGIST.MaxLength = 50
            Me.columnDIAGNOSIS.MaxLength = 50
            Me.columnSCLEROTOMISE_NOTE.MaxLength = 50
            Me.columnINFUSION_SIZE_NOTE.MaxLength = 50
            Me.columnCORE_VITRECTOMY_NOTE1.MaxLength = 50
            Me.columnCORE_VITRECTOMY_NOTE2.MaxLength = 50
            Me.columnENDO_LASER.MaxLength = 50
            Me.columnENDO_MW.MaxLength = 50
            Me.columnENDO_SHOTS.MaxLength = 50
            Me.columnC6F8_NOTE.MaxLength = 50
            Me.columnPAR_NOTE.MaxLength = 250
            Me.columnSUB_OTHERS.MaxLength = 50
            Me.columnTOPICAL_OTHERS.MaxLength = 50
            Me.columnSURGEON_SIGNATURE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_OPER_PAR_PLANA_VITRECTOMYRow() As S_OPER_PAR_PLANA_VITRECTOMYRow
            Return CType(Me.NewRow,S_OPER_PAR_PLANA_VITRECTOMYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_OPER_PAR_PLANA_VITRECTOMYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_OPER_PAR_PLANA_VITRECTOMYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_OPER_PAR_PLANA_VITRECTOMYRowChangedEvent) Is Nothing) Then
                RaiseEvent S_OPER_PAR_PLANA_VITRECTOMYRowChanged(Me, New S_OPER_PAR_PLANA_VITRECTOMYRowChangeEvent(CType(e.Row,S_OPER_PAR_PLANA_VITRECTOMYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_OPER_PAR_PLANA_VITRECTOMYRowChangingEvent) Is Nothing) Then
                RaiseEvent S_OPER_PAR_PLANA_VITRECTOMYRowChanging(Me, New S_OPER_PAR_PLANA_VITRECTOMYRowChangeEvent(CType(e.Row,S_OPER_PAR_PLANA_VITRECTOMYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_OPER_PAR_PLANA_VITRECTOMYRowDeletedEvent) Is Nothing) Then
                RaiseEvent S_OPER_PAR_PLANA_VITRECTOMYRowDeleted(Me, New S_OPER_PAR_PLANA_VITRECTOMYRowChangeEvent(CType(e.Row,S_OPER_PAR_PLANA_VITRECTOMYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_OPER_PAR_PLANA_VITRECTOMYRowDeletingEvent) Is Nothing) Then
                RaiseEvent S_OPER_PAR_PLANA_VITRECTOMYRowDeleting(Me, New S_OPER_PAR_PLANA_VITRECTOMYRowChangeEvent(CType(e.Row,S_OPER_PAR_PLANA_VITRECTOMYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_OPER_PAR_PLANA_VITRECTOMYRow(ByVal row As S_OPER_PAR_PLANA_VITRECTOMYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_OPER_PAR_PLANA_VITRECTOMYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_OPER_TRABECULECTOMYDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_OPER_TRABECULECTOMYRow)
        
        Private columnTRABECULECTIOMY_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnOPERA_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NAME As Global.System.Data.DataColumn
        
        Private columnPATIENT_SEX As Global.System.Data.DataColumn
        
        Private columnPATIENT_AGE As Global.System.Data.DataColumn
        
        Private columnSTART_TIME As Global.System.Data.DataColumn
        
        Private columnSURGEON As Global.System.Data.DataColumn
        
        Private columnSCRUB As Global.System.Data.DataColumn
        
        Private columnCIRCULATING As Global.System.Data.DataColumn
        
        Private columnANESTHESIONLOGIST As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnRIGHT_EYE As Global.System.Data.DataColumn
        
        Private columnLEFT_EYE As Global.System.Data.DataColumn
        
        Private columnS_AN_GA As Global.System.Data.DataColumn
        
        Private columnS_AN_NEURO As Global.System.Data.DataColumn
        
        Private columnS_AN_STANDBY As Global.System.Data.DataColumn
        
        Private columnS_AN_RETROBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_PERIBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_TOPICAL As Global.System.Data.DataColumn
        
        Private columnS_AN_SUBCONJUNCTIVAL As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVA_LIMBAL_BASE As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_FORNIX_BASE As Global.System.Data.DataColumn
        
        Private columnCONJUNC_NOTE_FROM As Global.System.Data.DataColumn
        
        Private columnCONJUNC_NOTE_TO As Global.System.Data.DataColumn
        
        Private columnSHAPE1 As Global.System.Data.DataColumn
        
        Private columnSHAPE2 As Global.System.Data.DataColumn
        
        Private columnSHAPE_OTHER As Global.System.Data.DataColumn
        
        Private columnSIZE1 As Global.System.Data.DataColumn
        
        Private columnSIZE2 As Global.System.Data.DataColumn
        
        Private columnTHICKNESS13 As Global.System.Data.DataColumn
        
        Private columnTHICKNESS12 As Global.System.Data.DataColumn
        
        Private columnTHICKNESS23 As Global.System.Data.DataColumn
        
        Private columnTHICKNESS_OTHER As Global.System.Data.DataColumn
        
        Private columnLOCATION As Global.System.Data.DataColumn
        
        Private columnADJUNCTIVE_NO As Global.System.Data.DataColumn
        
        Private columnADJUNCTIVE_YES As Global.System.Data.DataColumn
        
        Private columnADJUNCTIVE_MMC As Global.System.Data.DataColumn
        
        Private columnADJUNCTIVE_MMC_NOTE As Global.System.Data.DataColumn
        
        Private columnADJUNCTIVE_5FU As Global.System.Data.DataColumn
        
        Private columnADJUNCTIVE_5FU_NOTE As Global.System.Data.DataColumn
        
        Private columnINTRABLE As Global.System.Data.DataColumn
        
        Private columnSOAKED As Global.System.Data.DataColumn
        
        Private columnSOAKED_NOTE As Global.System.Data.DataColumn
        
        Private columnIRRIGATION_NO As Global.System.Data.DataColumn
        
        Private columnIRRIGATION_YES As Global.System.Data.DataColumn
        
        Private columnIRRIGATION_WITH As Global.System.Data.DataColumn
        
        Private columnIRRIGATION_NOT_DONE As Global.System.Data.DataColumn
        
        Private columnIRRIGATION_DONE As Global.System.Data.DataColumn
        
        Private columnIRRIGATION_DONE_NOTE As Global.System.Data.DataColumn
        
        Private columnPARACENTESIS_NOTE_DONE As Global.System.Data.DataColumn
        
        Private columnPARACENTESIS_DONE As Global.System.Data.DataColumn
        
        Private columnPARACENTESIS_DONE_NOTE As Global.System.Data.DataColumn
        
        Private columnTRABECULECTOMY1 As Global.System.Data.DataColumn
        
        Private columnTRABECULECTOMY2 As Global.System.Data.DataColumn
        
        Private columnIRIDECTOMY_NOT_DONE As Global.System.Data.DataColumn
        
        Private columnIRIDECTOMY_DONE As Global.System.Data.DataColumn
        
        Private columnIRIDECTOMY_DONE_NOTE As Global.System.Data.DataColumn
        
        Private columnSCLERAL_NOTE_NO As Global.System.Data.DataColumn
        
        Private columnSCLERAL_100NYLON As Global.System.Data.DataColumn
        
        Private columnSCLERAL_100PROLENE As Global.System.Data.DataColumn
        
        Private columnSCLERAL_RELEASABLE As Global.System.Data.DataColumn
        
        Private columnSCLERAL_NOTE As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_CONTINUOS As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_INTERRUPTED As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_INTERRUPTED_NOTE As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_100NYLON As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_100PROLENE As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_OTHERS As Global.System.Data.DataColumn
        
        Private columnCOPLICATION_NONE As Global.System.Data.DataColumn
        
        Private columnCOPLICATION_YES As Global.System.Data.DataColumn
        
        Private columnOTHER_PROCEDURES As Global.System.Data.DataColumn
        
        Private columnSUB_GENTAL2MG As Global.System.Data.DataColumn
        
        Private columnSUB_CEFAZOLIN50MG As Global.System.Data.DataColumn
        
        Private columnSUB_DEXAMETHASONE_25MG As Global.System.Data.DataColumn
        
        Private columnSUB_OTHER As Global.System.Data.DataColumn
        
        Private columnTOPICAL_MAXITROL As Global.System.Data.DataColumn
        
        Private columnTOPICAL_PILOCARPINE2 As Global.System.Data.DataColumn
        
        Private columnTOPICAL_VIGAMOX As Global.System.Data.DataColumn
        
        Private columnTOPICAL_OTHERS As Global.System.Data.DataColumn
        
        Private columnSURGEON_SIGNATURE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_OPER_TRABECULECTOMY"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRABECULECTIOMY_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRABECULECTIOMY_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OPERA_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERA_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTART_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCRUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIRCULATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCULATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANESTHESIONLOGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANESTHESIONLOGIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RIGHT_EYEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIGHT_EYE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LEFT_EYEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEFT_EYE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_GA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_NEUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_NEURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_STANDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_STANDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_RETROBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_RETROBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_PERIBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_PERIBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_SUBCONJUNCTIVALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_SUBCONJUNCTIVAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVA_LIMBAL_BASEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVA_LIMBAL_BASE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_FORNIX_BASEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_FORNIX_BASE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNC_NOTE_FROMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNC_NOTE_FROM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNC_NOTE_TOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNC_NOTE_TO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAPE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAPE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAPE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAPE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SHAPE_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSHAPE_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIZE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIZE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property THICKNESS13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHICKNESS13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property THICKNESS12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHICKNESS12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property THICKNESS23Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHICKNESS23
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property THICKNESS_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTHICKNESS_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LOCATIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLOCATION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADJUNCTIVE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUNCTIVE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADJUNCTIVE_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUNCTIVE_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADJUNCTIVE_MMCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUNCTIVE_MMC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADJUNCTIVE_MMC_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUNCTIVE_MMC_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADJUNCTIVE_5FUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUNCTIVE_5FU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ADJUNCTIVE_5FU_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnADJUNCTIVE_5FU_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property INTRABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTRABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SOAKEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOAKED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SOAKED_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSOAKED_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRRIGATION_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRRIGATION_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRRIGATION_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRRIGATION_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRRIGATION_WITHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRRIGATION_WITH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRRIGATION_NOT_DONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRRIGATION_NOT_DONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRRIGATION_DONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRRIGATION_DONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRRIGATION_DONE_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRRIGATION_DONE_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PARACENTESIS_NOTE_DONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARACENTESIS_NOTE_DONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PARACENTESIS_DONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARACENTESIS_DONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PARACENTESIS_DONE_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPARACENTESIS_DONE_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRABECULECTOMY1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRABECULECTOMY1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TRABECULECTOMY2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRABECULECTOMY2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRIDECTOMY_NOT_DONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRIDECTOMY_NOT_DONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRIDECTOMY_DONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRIDECTOMY_DONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IRIDECTOMY_DONE_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIRIDECTOMY_DONE_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLERAL_NOTE_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLERAL_NOTE_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLERAL_100NYLONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLERAL_100NYLON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLERAL_100PROLENEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLERAL_100PROLENE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLERAL_RELEASABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLERAL_RELEASABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCLERAL_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCLERAL_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_CONTINUOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_CONTINUOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_INTERRUPTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_INTERRUPTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_INTERRUPTED_NOTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_INTERRUPTED_NOTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_100NYLONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_100NYLON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_100PROLENEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_100PROLENE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COPLICATION_NONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOPLICATION_NONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property COPLICATION_YESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOPLICATION_YES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OTHER_PROCEDURESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTHER_PROCEDURES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_GENTAL2MGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_GENTAL2MG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_CEFAZOLIN50MGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_CEFAZOLIN50MG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_DEXAMETHASONE_25MGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_DEXAMETHASONE_25MG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUB_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUB_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_MAXITROLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_MAXITROL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_PILOCARPINE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_PILOCARPINE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_VIGAMOXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_VIGAMOX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEON_SIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON_SIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_OPER_TRABECULECTOMYRow
            Get
                Return CType(Me.Rows(index),S_OPER_TRABECULECTOMYRow)
            End Get
        End Property
        
        Public Event S_OPER_TRABECULECTOMYRowChanging As S_OPER_TRABECULECTOMYRowChangeEventHandler
        
        Public Event S_OPER_TRABECULECTOMYRowChanged As S_OPER_TRABECULECTOMYRowChangeEventHandler
        
        Public Event S_OPER_TRABECULECTOMYRowDeleting As S_OPER_TRABECULECTOMYRowChangeEventHandler
        
        Public Event S_OPER_TRABECULECTOMYRowDeleted As S_OPER_TRABECULECTOMYRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_OPER_TRABECULECTOMYRow(ByVal row As S_OPER_TRABECULECTOMYRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_OPER_TRABECULECTOMYRow( _
                    ByVal CREATE_DATE As Date,  _
                    ByVal parentView_OTRegistrationRowByS_OPER_TRABECULECTOMY As View_OTRegistrationRow,  _
                    ByVal PATIENT_NO As Decimal,  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Boolean,  _
                    ByVal LEFT_EYE As Boolean,  _
                    ByVal S_AN_GA As Boolean,  _
                    ByVal S_AN_NEURO As Boolean,  _
                    ByVal S_AN_STANDBY As Boolean,  _
                    ByVal S_AN_RETROBULBAR As Boolean,  _
                    ByVal S_AN_PERIBULBAR As Boolean,  _
                    ByVal S_AN_TOPICAL As Boolean,  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Boolean,  _
                    ByVal CONJUNCTIVA_LIMBAL_BASE As Boolean,  _
                    ByVal CONJUNCTIVAL_FORNIX_BASE As Boolean,  _
                    ByVal CONJUNC_NOTE_FROM As String,  _
                    ByVal CONJUNC_NOTE_TO As String,  _
                    ByVal SHAPE1 As Boolean,  _
                    ByVal SHAPE2 As Boolean,  _
                    ByVal SHAPE_OTHER As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal THICKNESS13 As Boolean,  _
                    ByVal THICKNESS12 As Boolean,  _
                    ByVal THICKNESS23 As Boolean,  _
                    ByVal THICKNESS_OTHER As String,  _
                    ByVal LOCATION As String,  _
                    ByVal ADJUNCTIVE_NO As Boolean,  _
                    ByVal ADJUNCTIVE_YES As Boolean,  _
                    ByVal ADJUNCTIVE_MMC As Boolean,  _
                    ByVal ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal ADJUNCTIVE_5FU As Boolean,  _
                    ByVal ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal INTRABLE As Boolean,  _
                    ByVal SOAKED As Boolean,  _
                    ByVal SOAKED_NOTE As String,  _
                    ByVal IRRIGATION_NO As Boolean,  _
                    ByVal IRRIGATION_YES As Boolean,  _
                    ByVal IRRIGATION_WITH As String,  _
                    ByVal IRRIGATION_NOT_DONE As Boolean,  _
                    ByVal IRRIGATION_DONE As Boolean,  _
                    ByVal IRRIGATION_DONE_NOTE As String,  _
                    ByVal PARACENTESIS_NOTE_DONE As Boolean,  _
                    ByVal PARACENTESIS_DONE As Boolean,  _
                    ByVal PARACENTESIS_DONE_NOTE As String,  _
                    ByVal TRABECULECTOMY1 As String,  _
                    ByVal TRABECULECTOMY2 As String,  _
                    ByVal IRIDECTOMY_NOT_DONE As Boolean,  _
                    ByVal IRIDECTOMY_DONE As Boolean,  _
                    ByVal IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal SCLERAL_NOTE_NO As String,  _
                    ByVal SCLERAL_100NYLON As Boolean,  _
                    ByVal SCLERAL_100PROLENE As Boolean,  _
                    ByVal SCLERAL_RELEASABLE As Boolean,  _
                    ByVal SCLERAL_NOTE As String,  _
                    ByVal CONJUNCTIVAL_CONTINUOS As Boolean,  _
                    ByVal CONJUNCTIVAL_INTERRUPTED As Boolean,  _
                    ByVal CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal CONJUNCTIVAL_100NYLON As Boolean,  _
                    ByVal CONJUNCTIVAL_100PROLENE As Boolean,  _
                    ByVal CONJUNCTIVAL_OTHERS As String,  _
                    ByVal COPLICATION_NONE As Boolean,  _
                    ByVal COPLICATION_YES As Boolean,  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL2MG As Boolean,  _
                    ByVal SUB_CEFAZOLIN50MG As Boolean,  _
                    ByVal SUB_DEXAMETHASONE_25MG As Boolean,  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITROL As Boolean,  _
                    ByVal TOPICAL_PILOCARPINE2 As Boolean,  _
                    ByVal TOPICAL_VIGAMOX As Boolean,  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String) As S_OPER_TRABECULECTOMYRow
            Dim rowS_OPER_TRABECULECTOMYRow As S_OPER_TRABECULECTOMYRow = CType(Me.NewRow,S_OPER_TRABECULECTOMYRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CREATE_DATE, Nothing, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, CONJUNCTIVA_LIMBAL_BASE, CONJUNCTIVAL_FORNIX_BASE, CONJUNC_NOTE_FROM, CONJUNC_NOTE_TO, SHAPE1, SHAPE2, SHAPE_OTHER, SIZE1, SIZE2, THICKNESS13, THICKNESS12, THICKNESS23, THICKNESS_OTHER, LOCATION, ADJUNCTIVE_NO, ADJUNCTIVE_YES, ADJUNCTIVE_MMC, ADJUNCTIVE_MMC_NOTE, ADJUNCTIVE_5FU, ADJUNCTIVE_5FU_NOTE, INTRABLE, SOAKED, SOAKED_NOTE, IRRIGATION_NO, IRRIGATION_YES, IRRIGATION_WITH, IRRIGATION_NOT_DONE, IRRIGATION_DONE, IRRIGATION_DONE_NOTE, PARACENTESIS_NOTE_DONE, PARACENTESIS_DONE, PARACENTESIS_DONE_NOTE, TRABECULECTOMY1, TRABECULECTOMY2, IRIDECTOMY_NOT_DONE, IRIDECTOMY_DONE, IRIDECTOMY_DONE_NOTE, SCLERAL_NOTE_NO, SCLERAL_100NYLON, SCLERAL_100PROLENE, SCLERAL_RELEASABLE, SCLERAL_NOTE, CONJUNCTIVAL_CONTINUOS, CONJUNCTIVAL_INTERRUPTED, CONJUNCTIVAL_INTERRUPTED_NOTE, CONJUNCTIVAL_100NYLON, CONJUNCTIVAL_100PROLENE, CONJUNCTIVAL_OTHERS, COPLICATION_NONE, COPLICATION_YES, OTHER_PROCEDURES, SUB_GENTAL2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE_25MG, SUB_OTHER, TOPICAL_MAXITROL, TOPICAL_PILOCARPINE2, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE}
            If (Not (parentView_OTRegistrationRowByS_OPER_TRABECULECTOMY) Is Nothing) Then
                columnValuesArray(2) = parentView_OTRegistrationRowByS_OPER_TRABECULECTOMY(0)
            End If
            rowS_OPER_TRABECULECTOMYRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_OPER_TRABECULECTOMYRow)
            Return rowS_OPER_TRABECULECTOMYRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByTRABECULECTIOMY_ID(ByVal TRABECULECTIOMY_ID As Decimal) As S_OPER_TRABECULECTOMYRow
            Return CType(Me.Rows.Find(New Object() {TRABECULECTIOMY_ID}),S_OPER_TRABECULECTOMYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_OPER_TRABECULECTOMYDataTable = CType(MyBase.Clone,S_OPER_TRABECULECTOMYDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_OPER_TRABECULECTOMYDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnTRABECULECTIOMY_ID = MyBase.Columns("TRABECULECTIOMY_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnOPERA_NO = MyBase.Columns("OPERA_NO")
            Me.columnPATIENT_NO = MyBase.Columns("PATIENT_NO")
            Me.columnPATIENT_NAME = MyBase.Columns("PATIENT_NAME")
            Me.columnPATIENT_SEX = MyBase.Columns("PATIENT_SEX")
            Me.columnPATIENT_AGE = MyBase.Columns("PATIENT_AGE")
            Me.columnSTART_TIME = MyBase.Columns("START_TIME")
            Me.columnSURGEON = MyBase.Columns("SURGEON")
            Me.columnSCRUB = MyBase.Columns("SCRUB")
            Me.columnCIRCULATING = MyBase.Columns("CIRCULATING")
            Me.columnANESTHESIONLOGIST = MyBase.Columns("ANESTHESIONLOGIST")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnRIGHT_EYE = MyBase.Columns("RIGHT_EYE")
            Me.columnLEFT_EYE = MyBase.Columns("LEFT_EYE")
            Me.columnS_AN_GA = MyBase.Columns("S_AN_GA")
            Me.columnS_AN_NEURO = MyBase.Columns("S_AN_NEURO")
            Me.columnS_AN_STANDBY = MyBase.Columns("S_AN_STANDBY")
            Me.columnS_AN_RETROBULBAR = MyBase.Columns("S_AN_RETROBULBAR")
            Me.columnS_AN_PERIBULBAR = MyBase.Columns("S_AN_PERIBULBAR")
            Me.columnS_AN_TOPICAL = MyBase.Columns("S_AN_TOPICAL")
            Me.columnS_AN_SUBCONJUNCTIVAL = MyBase.Columns("S_AN_SUBCONJUNCTIVAL")
            Me.columnCONJUNCTIVA_LIMBAL_BASE = MyBase.Columns("CONJUNCTIVA_LIMBAL_BASE")
            Me.columnCONJUNCTIVAL_FORNIX_BASE = MyBase.Columns("CONJUNCTIVAL_FORNIX_BASE")
            Me.columnCONJUNC_NOTE_FROM = MyBase.Columns("CONJUNC_NOTE_FROM")
            Me.columnCONJUNC_NOTE_TO = MyBase.Columns("CONJUNC_NOTE_TO")
            Me.columnSHAPE1 = MyBase.Columns("SHAPE1")
            Me.columnSHAPE2 = MyBase.Columns("SHAPE2")
            Me.columnSHAPE_OTHER = MyBase.Columns("SHAPE_OTHER")
            Me.columnSIZE1 = MyBase.Columns("SIZE1")
            Me.columnSIZE2 = MyBase.Columns("SIZE2")
            Me.columnTHICKNESS13 = MyBase.Columns("THICKNESS13")
            Me.columnTHICKNESS12 = MyBase.Columns("THICKNESS12")
            Me.columnTHICKNESS23 = MyBase.Columns("THICKNESS23")
            Me.columnTHICKNESS_OTHER = MyBase.Columns("THICKNESS_OTHER")
            Me.columnLOCATION = MyBase.Columns("LOCATION")
            Me.columnADJUNCTIVE_NO = MyBase.Columns("ADJUNCTIVE_NO")
            Me.columnADJUNCTIVE_YES = MyBase.Columns("ADJUNCTIVE_YES")
            Me.columnADJUNCTIVE_MMC = MyBase.Columns("ADJUNCTIVE_MMC")
            Me.columnADJUNCTIVE_MMC_NOTE = MyBase.Columns("ADJUNCTIVE_MMC_NOTE")
            Me.columnADJUNCTIVE_5FU = MyBase.Columns("ADJUNCTIVE_5FU")
            Me.columnADJUNCTIVE_5FU_NOTE = MyBase.Columns("ADJUNCTIVE_5FU_NOTE")
            Me.columnINTRABLE = MyBase.Columns("INTRABLE")
            Me.columnSOAKED = MyBase.Columns("SOAKED")
            Me.columnSOAKED_NOTE = MyBase.Columns("SOAKED_NOTE")
            Me.columnIRRIGATION_NO = MyBase.Columns("IRRIGATION_NO")
            Me.columnIRRIGATION_YES = MyBase.Columns("IRRIGATION_YES")
            Me.columnIRRIGATION_WITH = MyBase.Columns("IRRIGATION_WITH")
            Me.columnIRRIGATION_NOT_DONE = MyBase.Columns("IRRIGATION_NOT_DONE")
            Me.columnIRRIGATION_DONE = MyBase.Columns("IRRIGATION_DONE")
            Me.columnIRRIGATION_DONE_NOTE = MyBase.Columns("IRRIGATION_DONE_NOTE")
            Me.columnPARACENTESIS_NOTE_DONE = MyBase.Columns("PARACENTESIS_NOTE_DONE")
            Me.columnPARACENTESIS_DONE = MyBase.Columns("PARACENTESIS_DONE")
            Me.columnPARACENTESIS_DONE_NOTE = MyBase.Columns("PARACENTESIS_DONE_NOTE")
            Me.columnTRABECULECTOMY1 = MyBase.Columns("TRABECULECTOMY1")
            Me.columnTRABECULECTOMY2 = MyBase.Columns("TRABECULECTOMY2")
            Me.columnIRIDECTOMY_NOT_DONE = MyBase.Columns("IRIDECTOMY_NOT_DONE")
            Me.columnIRIDECTOMY_DONE = MyBase.Columns("IRIDECTOMY_DONE")
            Me.columnIRIDECTOMY_DONE_NOTE = MyBase.Columns("IRIDECTOMY_DONE_NOTE")
            Me.columnSCLERAL_NOTE_NO = MyBase.Columns("SCLERAL_NOTE_NO")
            Me.columnSCLERAL_100NYLON = MyBase.Columns("SCLERAL_100NYLON")
            Me.columnSCLERAL_100PROLENE = MyBase.Columns("SCLERAL_100PROLENE")
            Me.columnSCLERAL_RELEASABLE = MyBase.Columns("SCLERAL_RELEASABLE")
            Me.columnSCLERAL_NOTE = MyBase.Columns("SCLERAL_NOTE")
            Me.columnCONJUNCTIVAL_CONTINUOS = MyBase.Columns("CONJUNCTIVAL_CONTINUOS")
            Me.columnCONJUNCTIVAL_INTERRUPTED = MyBase.Columns("CONJUNCTIVAL_INTERRUPTED")
            Me.columnCONJUNCTIVAL_INTERRUPTED_NOTE = MyBase.Columns("CONJUNCTIVAL_INTERRUPTED_NOTE")
            Me.columnCONJUNCTIVAL_100NYLON = MyBase.Columns("CONJUNCTIVAL_100NYLON")
            Me.columnCONJUNCTIVAL_100PROLENE = MyBase.Columns("CONJUNCTIVAL_100PROLENE")
            Me.columnCONJUNCTIVAL_OTHERS = MyBase.Columns("CONJUNCTIVAL_OTHERS")
            Me.columnCOPLICATION_NONE = MyBase.Columns("COPLICATION_NONE")
            Me.columnCOPLICATION_YES = MyBase.Columns("COPLICATION_YES")
            Me.columnOTHER_PROCEDURES = MyBase.Columns("OTHER_PROCEDURES")
            Me.columnSUB_GENTAL2MG = MyBase.Columns("SUB_GENTAL2MG")
            Me.columnSUB_CEFAZOLIN50MG = MyBase.Columns("SUB_CEFAZOLIN50MG")
            Me.columnSUB_DEXAMETHASONE_25MG = MyBase.Columns("SUB_DEXAMETHASONE_25MG")
            Me.columnSUB_OTHER = MyBase.Columns("SUB_OTHER")
            Me.columnTOPICAL_MAXITROL = MyBase.Columns("TOPICAL_MAXITROL")
            Me.columnTOPICAL_PILOCARPINE2 = MyBase.Columns("TOPICAL_PILOCARPINE2")
            Me.columnTOPICAL_VIGAMOX = MyBase.Columns("TOPICAL_VIGAMOX")
            Me.columnTOPICAL_OTHERS = MyBase.Columns("TOPICAL_OTHERS")
            Me.columnSURGEON_SIGNATURE = MyBase.Columns("SURGEON_SIGNATURE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnTRABECULECTIOMY_ID = New Global.System.Data.DataColumn("TRABECULECTIOMY_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRABECULECTIOMY_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnOPERA_NO = New Global.System.Data.DataColumn("OPERA_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERA_NO)
            Me.columnPATIENT_NO = New Global.System.Data.DataColumn("PATIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NO)
            Me.columnPATIENT_NAME = New Global.System.Data.DataColumn("PATIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NAME)
            Me.columnPATIENT_SEX = New Global.System.Data.DataColumn("PATIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_SEX)
            Me.columnPATIENT_AGE = New Global.System.Data.DataColumn("PATIENT_AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_AGE)
            Me.columnSTART_TIME = New Global.System.Data.DataColumn("START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTART_TIME)
            Me.columnSURGEON = New Global.System.Data.DataColumn("SURGEON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON)
            Me.columnSCRUB = New Global.System.Data.DataColumn("SCRUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRUB)
            Me.columnCIRCULATING = New Global.System.Data.DataColumn("CIRCULATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCULATING)
            Me.columnANESTHESIONLOGIST = New Global.System.Data.DataColumn("ANESTHESIONLOGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANESTHESIONLOGIST)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnRIGHT_EYE = New Global.System.Data.DataColumn("RIGHT_EYE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIGHT_EYE)
            Me.columnLEFT_EYE = New Global.System.Data.DataColumn("LEFT_EYE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEFT_EYE)
            Me.columnS_AN_GA = New Global.System.Data.DataColumn("S_AN_GA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_GA)
            Me.columnS_AN_NEURO = New Global.System.Data.DataColumn("S_AN_NEURO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_NEURO)
            Me.columnS_AN_STANDBY = New Global.System.Data.DataColumn("S_AN_STANDBY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_STANDBY)
            Me.columnS_AN_RETROBULBAR = New Global.System.Data.DataColumn("S_AN_RETROBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_RETROBULBAR)
            Me.columnS_AN_PERIBULBAR = New Global.System.Data.DataColumn("S_AN_PERIBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_PERIBULBAR)
            Me.columnS_AN_TOPICAL = New Global.System.Data.DataColumn("S_AN_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_TOPICAL)
            Me.columnS_AN_SUBCONJUNCTIVAL = New Global.System.Data.DataColumn("S_AN_SUBCONJUNCTIVAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_SUBCONJUNCTIVAL)
            Me.columnCONJUNCTIVA_LIMBAL_BASE = New Global.System.Data.DataColumn("CONJUNCTIVA_LIMBAL_BASE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVA_LIMBAL_BASE)
            Me.columnCONJUNCTIVAL_FORNIX_BASE = New Global.System.Data.DataColumn("CONJUNCTIVAL_FORNIX_BASE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_FORNIX_BASE)
            Me.columnCONJUNC_NOTE_FROM = New Global.System.Data.DataColumn("CONJUNC_NOTE_FROM", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNC_NOTE_FROM)
            Me.columnCONJUNC_NOTE_TO = New Global.System.Data.DataColumn("CONJUNC_NOTE_TO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNC_NOTE_TO)
            Me.columnSHAPE1 = New Global.System.Data.DataColumn("SHAPE1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAPE1)
            Me.columnSHAPE2 = New Global.System.Data.DataColumn("SHAPE2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAPE2)
            Me.columnSHAPE_OTHER = New Global.System.Data.DataColumn("SHAPE_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSHAPE_OTHER)
            Me.columnSIZE1 = New Global.System.Data.DataColumn("SIZE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZE1)
            Me.columnSIZE2 = New Global.System.Data.DataColumn("SIZE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZE2)
            Me.columnTHICKNESS13 = New Global.System.Data.DataColumn("THICKNESS13", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHICKNESS13)
            Me.columnTHICKNESS12 = New Global.System.Data.DataColumn("THICKNESS12", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHICKNESS12)
            Me.columnTHICKNESS23 = New Global.System.Data.DataColumn("THICKNESS23", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHICKNESS23)
            Me.columnTHICKNESS_OTHER = New Global.System.Data.DataColumn("THICKNESS_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTHICKNESS_OTHER)
            Me.columnLOCATION = New Global.System.Data.DataColumn("LOCATION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLOCATION)
            Me.columnADJUNCTIVE_NO = New Global.System.Data.DataColumn("ADJUNCTIVE_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUNCTIVE_NO)
            Me.columnADJUNCTIVE_YES = New Global.System.Data.DataColumn("ADJUNCTIVE_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUNCTIVE_YES)
            Me.columnADJUNCTIVE_MMC = New Global.System.Data.DataColumn("ADJUNCTIVE_MMC", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUNCTIVE_MMC)
            Me.columnADJUNCTIVE_MMC_NOTE = New Global.System.Data.DataColumn("ADJUNCTIVE_MMC_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUNCTIVE_MMC_NOTE)
            Me.columnADJUNCTIVE_5FU = New Global.System.Data.DataColumn("ADJUNCTIVE_5FU", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUNCTIVE_5FU)
            Me.columnADJUNCTIVE_5FU_NOTE = New Global.System.Data.DataColumn("ADJUNCTIVE_5FU_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnADJUNCTIVE_5FU_NOTE)
            Me.columnINTRABLE = New Global.System.Data.DataColumn("INTRABLE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTRABLE)
            Me.columnSOAKED = New Global.System.Data.DataColumn("SOAKED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOAKED)
            Me.columnSOAKED_NOTE = New Global.System.Data.DataColumn("SOAKED_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSOAKED_NOTE)
            Me.columnIRRIGATION_NO = New Global.System.Data.DataColumn("IRRIGATION_NO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRRIGATION_NO)
            Me.columnIRRIGATION_YES = New Global.System.Data.DataColumn("IRRIGATION_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRRIGATION_YES)
            Me.columnIRRIGATION_WITH = New Global.System.Data.DataColumn("IRRIGATION_WITH", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRRIGATION_WITH)
            Me.columnIRRIGATION_NOT_DONE = New Global.System.Data.DataColumn("IRRIGATION_NOT_DONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRRIGATION_NOT_DONE)
            Me.columnIRRIGATION_DONE = New Global.System.Data.DataColumn("IRRIGATION_DONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRRIGATION_DONE)
            Me.columnIRRIGATION_DONE_NOTE = New Global.System.Data.DataColumn("IRRIGATION_DONE_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRRIGATION_DONE_NOTE)
            Me.columnPARACENTESIS_NOTE_DONE = New Global.System.Data.DataColumn("PARACENTESIS_NOTE_DONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARACENTESIS_NOTE_DONE)
            Me.columnPARACENTESIS_DONE = New Global.System.Data.DataColumn("PARACENTESIS_DONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARACENTESIS_DONE)
            Me.columnPARACENTESIS_DONE_NOTE = New Global.System.Data.DataColumn("PARACENTESIS_DONE_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPARACENTESIS_DONE_NOTE)
            Me.columnTRABECULECTOMY1 = New Global.System.Data.DataColumn("TRABECULECTOMY1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRABECULECTOMY1)
            Me.columnTRABECULECTOMY2 = New Global.System.Data.DataColumn("TRABECULECTOMY2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRABECULECTOMY2)
            Me.columnIRIDECTOMY_NOT_DONE = New Global.System.Data.DataColumn("IRIDECTOMY_NOT_DONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRIDECTOMY_NOT_DONE)
            Me.columnIRIDECTOMY_DONE = New Global.System.Data.DataColumn("IRIDECTOMY_DONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRIDECTOMY_DONE)
            Me.columnIRIDECTOMY_DONE_NOTE = New Global.System.Data.DataColumn("IRIDECTOMY_DONE_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIRIDECTOMY_DONE_NOTE)
            Me.columnSCLERAL_NOTE_NO = New Global.System.Data.DataColumn("SCLERAL_NOTE_NO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLERAL_NOTE_NO)
            Me.columnSCLERAL_100NYLON = New Global.System.Data.DataColumn("SCLERAL_100NYLON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLERAL_100NYLON)
            Me.columnSCLERAL_100PROLENE = New Global.System.Data.DataColumn("SCLERAL_100PROLENE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLERAL_100PROLENE)
            Me.columnSCLERAL_RELEASABLE = New Global.System.Data.DataColumn("SCLERAL_RELEASABLE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLERAL_RELEASABLE)
            Me.columnSCLERAL_NOTE = New Global.System.Data.DataColumn("SCLERAL_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCLERAL_NOTE)
            Me.columnCONJUNCTIVAL_CONTINUOS = New Global.System.Data.DataColumn("CONJUNCTIVAL_CONTINUOS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_CONTINUOS)
            Me.columnCONJUNCTIVAL_INTERRUPTED = New Global.System.Data.DataColumn("CONJUNCTIVAL_INTERRUPTED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_INTERRUPTED)
            Me.columnCONJUNCTIVAL_INTERRUPTED_NOTE = New Global.System.Data.DataColumn("CONJUNCTIVAL_INTERRUPTED_NOTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_INTERRUPTED_NOTE)
            Me.columnCONJUNCTIVAL_100NYLON = New Global.System.Data.DataColumn("CONJUNCTIVAL_100NYLON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_100NYLON)
            Me.columnCONJUNCTIVAL_100PROLENE = New Global.System.Data.DataColumn("CONJUNCTIVAL_100PROLENE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_100PROLENE)
            Me.columnCONJUNCTIVAL_OTHERS = New Global.System.Data.DataColumn("CONJUNCTIVAL_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_OTHERS)
            Me.columnCOPLICATION_NONE = New Global.System.Data.DataColumn("COPLICATION_NONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOPLICATION_NONE)
            Me.columnCOPLICATION_YES = New Global.System.Data.DataColumn("COPLICATION_YES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOPLICATION_YES)
            Me.columnOTHER_PROCEDURES = New Global.System.Data.DataColumn("OTHER_PROCEDURES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTHER_PROCEDURES)
            Me.columnSUB_GENTAL2MG = New Global.System.Data.DataColumn("SUB_GENTAL2MG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_GENTAL2MG)
            Me.columnSUB_CEFAZOLIN50MG = New Global.System.Data.DataColumn("SUB_CEFAZOLIN50MG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_CEFAZOLIN50MG)
            Me.columnSUB_DEXAMETHASONE_25MG = New Global.System.Data.DataColumn("SUB_DEXAMETHASONE_25MG", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_DEXAMETHASONE_25MG)
            Me.columnSUB_OTHER = New Global.System.Data.DataColumn("SUB_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUB_OTHER)
            Me.columnTOPICAL_MAXITROL = New Global.System.Data.DataColumn("TOPICAL_MAXITROL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_MAXITROL)
            Me.columnTOPICAL_PILOCARPINE2 = New Global.System.Data.DataColumn("TOPICAL_PILOCARPINE2", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_PILOCARPINE2)
            Me.columnTOPICAL_VIGAMOX = New Global.System.Data.DataColumn("TOPICAL_VIGAMOX", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_VIGAMOX)
            Me.columnTOPICAL_OTHERS = New Global.System.Data.DataColumn("TOPICAL_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_OTHERS)
            Me.columnSURGEON_SIGNATURE = New Global.System.Data.DataColumn("SURGEON_SIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON_SIGNATURE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnTRABECULECTIOMY_ID}, true))
            Me.columnTRABECULECTIOMY_ID.AutoIncrement = true
            Me.columnTRABECULECTIOMY_ID.AutoIncrementSeed = -1
            Me.columnTRABECULECTIOMY_ID.AutoIncrementStep = -1
            Me.columnTRABECULECTIOMY_ID.AllowDBNull = false
            Me.columnTRABECULECTIOMY_ID.ReadOnly = true
            Me.columnTRABECULECTIOMY_ID.Unique = true
            Me.columnPATIENT_NAME.MaxLength = 50
            Me.columnPATIENT_SEX.MaxLength = 1
            Me.columnPATIENT_AGE.MaxLength = 50
            Me.columnSTART_TIME.MaxLength = 50
            Me.columnSURGEON.MaxLength = 50
            Me.columnSCRUB.MaxLength = 50
            Me.columnCIRCULATING.MaxLength = 50
            Me.columnANESTHESIONLOGIST.MaxLength = 50
            Me.columnDIAGNOSIS.MaxLength = 50
            Me.columnCONJUNC_NOTE_FROM.MaxLength = 50
            Me.columnCONJUNC_NOTE_TO.MaxLength = 50
            Me.columnSHAPE_OTHER.MaxLength = 50
            Me.columnSIZE1.MaxLength = 50
            Me.columnSIZE2.MaxLength = 50
            Me.columnTHICKNESS_OTHER.MaxLength = 50
            Me.columnLOCATION.MaxLength = 50
            Me.columnADJUNCTIVE_MMC_NOTE.MaxLength = 50
            Me.columnADJUNCTIVE_5FU_NOTE.MaxLength = 50
            Me.columnSOAKED_NOTE.MaxLength = 50
            Me.columnIRRIGATION_WITH.MaxLength = 50
            Me.columnIRRIGATION_DONE_NOTE.MaxLength = 50
            Me.columnPARACENTESIS_DONE_NOTE.MaxLength = 50
            Me.columnTRABECULECTOMY1.MaxLength = 50
            Me.columnTRABECULECTOMY2.MaxLength = 50
            Me.columnIRIDECTOMY_DONE_NOTE.MaxLength = 50
            Me.columnSCLERAL_NOTE_NO.MaxLength = 50
            Me.columnSCLERAL_NOTE.MaxLength = 50
            Me.columnCONJUNCTIVAL_INTERRUPTED_NOTE.MaxLength = 50
            Me.columnCONJUNCTIVAL_OTHERS.MaxLength = 50
            Me.columnOTHER_PROCEDURES.MaxLength = 250
            Me.columnSUB_OTHER.MaxLength = 50
            Me.columnTOPICAL_OTHERS.MaxLength = 50
            Me.columnSURGEON_SIGNATURE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_OPER_TRABECULECTOMYRow() As S_OPER_TRABECULECTOMYRow
            Return CType(Me.NewRow,S_OPER_TRABECULECTOMYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_OPER_TRABECULECTOMYRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_OPER_TRABECULECTOMYRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_OPER_TRABECULECTOMYRowChangedEvent) Is Nothing) Then
                RaiseEvent S_OPER_TRABECULECTOMYRowChanged(Me, New S_OPER_TRABECULECTOMYRowChangeEvent(CType(e.Row,S_OPER_TRABECULECTOMYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_OPER_TRABECULECTOMYRowChangingEvent) Is Nothing) Then
                RaiseEvent S_OPER_TRABECULECTOMYRowChanging(Me, New S_OPER_TRABECULECTOMYRowChangeEvent(CType(e.Row,S_OPER_TRABECULECTOMYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_OPER_TRABECULECTOMYRowDeletedEvent) Is Nothing) Then
                RaiseEvent S_OPER_TRABECULECTOMYRowDeleted(Me, New S_OPER_TRABECULECTOMYRowChangeEvent(CType(e.Row,S_OPER_TRABECULECTOMYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_OPER_TRABECULECTOMYRowDeletingEvent) Is Nothing) Then
                RaiseEvent S_OPER_TRABECULECTOMYRowDeleting(Me, New S_OPER_TRABECULECTOMYRowChangeEvent(CType(e.Row,S_OPER_TRABECULECTOMYRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_OPER_TRABECULECTOMYRow(ByVal row As S_OPER_TRABECULECTOMYRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_OPER_TRABECULECTOMYDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class S_OPER_PTERYGIUMDataTable
        Inherits Global.System.Data.TypedTableBase(Of S_OPER_PTERYGIUMRow)
        
        Private columnPTERYGIUM_ID As Global.System.Data.DataColumn
        
        Private columnCREATE_DATE As Global.System.Data.DataColumn
        
        Private columnOPERA_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NO As Global.System.Data.DataColumn
        
        Private columnPATIENT_NAME As Global.System.Data.DataColumn
        
        Private columnPATIENT_SEX As Global.System.Data.DataColumn
        
        Private columnPATIENT_AGE As Global.System.Data.DataColumn
        
        Private columnSTART_TIME As Global.System.Data.DataColumn
        
        Private columnSURGEON As Global.System.Data.DataColumn
        
        Private columnSCRUB As Global.System.Data.DataColumn
        
        Private columnCIRCULATING As Global.System.Data.DataColumn
        
        Private columnANESTHESIONLOGIST As Global.System.Data.DataColumn
        
        Private columnDIAGNOSIS As Global.System.Data.DataColumn
        
        Private columnRIGHT_EYE As Global.System.Data.DataColumn
        
        Private columnLEFT_EYE As Global.System.Data.DataColumn
        
        Private columnS_AN_GA As Global.System.Data.DataColumn
        
        Private columnS_AN_NEURO As Global.System.Data.DataColumn
        
        Private columnS_AN_STANDBY As Global.System.Data.DataColumn
        
        Private columnS_AN_RETROBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_PERIBULBAR As Global.System.Data.DataColumn
        
        Private columnS_AN_TOPICAL As Global.System.Data.DataColumn
        
        Private columnS_AN_SUBCONJUNCTIVAL As Global.System.Data.DataColumn
        
        Private columnPTERYGIUM_NASAL As Global.System.Data.DataColumn
        
        Private columnPTERYGIUM_TEMPORAL As Global.System.Data.DataColumn
        
        Private columnBRIDAL_SUPERIOR As Global.System.Data.DataColumn
        
        Private columnBRIDAL_70VICRYL As Global.System.Data.DataColumn
        
        Private columnBRIDAL_80SILK As Global.System.Data.DataColumn
        
        Private columnBRIDAL_OTHERS As Global.System.Data.DataColumn
        
        Private columnSUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Data.DataColumn
        
        Private columnSUBCONJUNCTIVAL_XYLOCAIN As Global.System.Data.DataColumn
        
        Private columnSUBCONJUNCTIVAL_NONE As Global.System.Data.DataColumn
        
        Private columnPTERYGIUM_SCISSORS As Global.System.Data.DataColumn
        
        Private columnPTERYGIUM_OTHER As Global.System.Data.DataColumn
        
        Private columnCAUTERY_MILD As Global.System.Data.DataColumn
        
        Private columnCAUTERY_69BLADE As Global.System.Data.DataColumn
        
        Private columnCAUTERY_MODRATE As Global.System.Data.DataColumn
        
        Private columnCAUTERY_EXTENSIVE As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_SUPERIOR As Global.System.Data.DataColumn
        
        Private columnCONJUNCTIVAL_OTHER_SITE As Global.System.Data.DataColumn
        
        Private columnSIZE1 As Global.System.Data.DataColumn
        
        Private columnSIZE2 As Global.System.Data.DataColumn
        
        Private columnGRAFT_80VERGIN As Global.System.Data.DataColumn
        
        Private columnGRAFT_100NYLON As Global.System.Data.DataColumn
        
        Private columnGRAFT_OTHER As Global.System.Data.DataColumn
        
        Private columnGRAFT_90NYLON As Global.System.Data.DataColumn
        
        Private columnGRAFT_RUNNING As Global.System.Data.DataColumn
        
        Private columnGRAFT_INTERRUPTED As Global.System.Data.DataColumn
        
        Private columnGRAFT_COMBINED As Global.System.Data.DataColumn
        
        Private columnSUBCONJUNCTIVAL_GENTAL As Global.System.Data.DataColumn
        
        Private columnSUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Data.DataColumn
        
        Private columnSUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Data.DataColumn
        
        Private columnSUBCONJUNCTIVAL_OTHERS As Global.System.Data.DataColumn
        
        Private columnTOPICAL_MAXITROL As Global.System.Data.DataColumn
        
        Private columnTOPICAL_TOBRADEX As Global.System.Data.DataColumn
        
        Private columnTOPICAL_OTHER As Global.System.Data.DataColumn
        
        Private columnEXTRA_NOTES As Global.System.Data.DataColumn
        
        Private columnSURGEON_SIGNATURE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "S_OPER_PTERYGIUM"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTERYGIUM_IDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTERYGIUM_ID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CREATE_DATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCREATE_DATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property OPERA_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOPERA_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_NAMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_NAME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_SEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_SEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PATIENT_AGEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPATIENT_AGE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property START_TIMEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTART_TIME
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SCRUBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSCRUB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CIRCULATINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCIRCULATING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ANESTHESIONLOGISTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANESTHESIONLOGIST
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DIAGNOSISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIAGNOSIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property RIGHT_EYEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRIGHT_EYE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LEFT_EYEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLEFT_EYE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_GAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_GA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_NEUROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_NEURO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_STANDBYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_STANDBY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_RETROBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_RETROBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_PERIBULBARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_PERIBULBAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_TOPICALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_TOPICAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property S_AN_SUBCONJUNCTIVALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnS_AN_SUBCONJUNCTIVAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTERYGIUM_NASALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTERYGIUM_NASAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTERYGIUM_TEMPORALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTERYGIUM_TEMPORAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BRIDAL_SUPERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRIDAL_SUPERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BRIDAL_70VICRYLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRIDAL_70VICRYL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BRIDAL_80SILKColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRIDAL_80SILK
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property BRIDAL_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBRIDAL_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUNCTIVAL_XYLOCAIN_WITHColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUNCTIVAL_XYLOCAIN_WITH
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUNCTIVAL_XYLOCAINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUNCTIVAL_XYLOCAIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUNCTIVAL_NONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUNCTIVAL_NONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTERYGIUM_SCISSORSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTERYGIUM_SCISSORS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PTERYGIUM_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPTERYGIUM_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAUTERY_MILDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAUTERY_MILD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAUTERY_69BLADEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAUTERY_69BLADE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAUTERY_MODRATEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAUTERY_MODRATE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CAUTERY_EXTENSIVEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAUTERY_EXTENSIVE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_SUPERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_SUPERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CONJUNCTIVAL_OTHER_SITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONJUNCTIVAL_OTHER_SITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIZE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SIZE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIZE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GRAFT_80VERGINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRAFT_80VERGIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GRAFT_100NYLONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRAFT_100NYLON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GRAFT_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRAFT_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GRAFT_90NYLONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRAFT_90NYLON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GRAFT_RUNNINGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRAFT_RUNNING
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GRAFT_INTERRUPTEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRAFT_INTERRUPTED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GRAFT_COMBINEDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGRAFT_COMBINED
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUNCTIVAL_GENTALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUNCTIVAL_GENTAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUNCTIVAL_CEFAZOLINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUNCTIVAL_CEFAZOLIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUNCTIVAL_DEXAMETHASONEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUNCTIVAL_DEXAMETHASONE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SUBCONJUNCTIVAL_OTHERSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSUBCONJUNCTIVAL_OTHERS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_MAXITROLColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_MAXITROL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_TOBRADEXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_TOBRADEX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TOPICAL_OTHERColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOPICAL_OTHER
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EXTRA_NOTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEXTRA_NOTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SURGEON_SIGNATUREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSURGEON_SIGNATURE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As S_OPER_PTERYGIUMRow
            Get
                Return CType(Me.Rows(index),S_OPER_PTERYGIUMRow)
            End Get
        End Property
        
        Public Event S_OPER_PTERYGIUMRowChanging As S_OPER_PTERYGIUMRowChangeEventHandler
        
        Public Event S_OPER_PTERYGIUMRowChanged As S_OPER_PTERYGIUMRowChangeEventHandler
        
        Public Event S_OPER_PTERYGIUMRowDeleting As S_OPER_PTERYGIUMRowChangeEventHandler
        
        Public Event S_OPER_PTERYGIUMRowDeleted As S_OPER_PTERYGIUMRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddS_OPER_PTERYGIUMRow(ByVal row As S_OPER_PTERYGIUMRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddS_OPER_PTERYGIUMRow( _
                    ByVal CREATE_DATE As Date,  _
                    ByVal parentView_OTRegistrationRowByS_OPER_PTERYGIUM As View_OTRegistrationRow,  _
                    ByVal PATIENT_NO As Decimal,  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Boolean,  _
                    ByVal LEFT_EYE As Boolean,  _
                    ByVal S_AN_GA As Boolean,  _
                    ByVal S_AN_NEURO As Boolean,  _
                    ByVal S_AN_STANDBY As Boolean,  _
                    ByVal S_AN_RETROBULBAR As Boolean,  _
                    ByVal S_AN_PERIBULBAR As Boolean,  _
                    ByVal S_AN_TOPICAL As Boolean,  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Boolean,  _
                    ByVal PTERYGIUM_NASAL As Boolean,  _
                    ByVal PTERYGIUM_TEMPORAL As Boolean,  _
                    ByVal BRIDAL_SUPERIOR As Boolean,  _
                    ByVal BRIDAL_70VICRYL As Boolean,  _
                    ByVal BRIDAL_80SILK As Boolean,  _
                    ByVal BRIDAL_OTHERS As String,  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN_WITH As Boolean,  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN As Boolean,  _
                    ByVal SUBCONJUNCTIVAL_NONE As Boolean,  _
                    ByVal PTERYGIUM_SCISSORS As Boolean,  _
                    ByVal PTERYGIUM_OTHER As String,  _
                    ByVal CAUTERY_MILD As Boolean,  _
                    ByVal CAUTERY_69BLADE As Boolean,  _
                    ByVal CAUTERY_MODRATE As Boolean,  _
                    ByVal CAUTERY_EXTENSIVE As Boolean,  _
                    ByVal CONJUNCTIVAL_SUPERIOR As Boolean,  _
                    ByVal CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal GRAFT_80VERGIN As Boolean,  _
                    ByVal GRAFT_100NYLON As Boolean,  _
                    ByVal GRAFT_OTHER As String,  _
                    ByVal GRAFT_90NYLON As Boolean,  _
                    ByVal GRAFT_RUNNING As Boolean,  _
                    ByVal GRAFT_INTERRUPTED As Boolean,  _
                    ByVal GRAFT_COMBINED As Boolean,  _
                    ByVal SUBCONJUNCTIVAL_GENTAL As Boolean,  _
                    ByVal SUBCONJUNCTIVAL_CEFAZOLIN As Boolean,  _
                    ByVal SUBCONJUNCTIVAL_DEXAMETHASONE As Boolean,  _
                    ByVal SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Boolean,  _
                    ByVal TOPICAL_TOBRADEX As Boolean,  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal EXTRA_NOTES As String,  _
                    ByVal SURGEON_SIGNATURE As String) As S_OPER_PTERYGIUMRow
            Dim rowS_OPER_PTERYGIUMRow As S_OPER_PTERYGIUMRow = CType(Me.NewRow,S_OPER_PTERYGIUMRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CREATE_DATE, Nothing, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, PTERYGIUM_NASAL, PTERYGIUM_TEMPORAL, BRIDAL_SUPERIOR, BRIDAL_70VICRYL, BRIDAL_80SILK, BRIDAL_OTHERS, SUBCONJUNCTIVAL_XYLOCAIN_WITH, SUBCONJUNCTIVAL_XYLOCAIN, SUBCONJUNCTIVAL_NONE, PTERYGIUM_SCISSORS, PTERYGIUM_OTHER, CAUTERY_MILD, CAUTERY_69BLADE, CAUTERY_MODRATE, CAUTERY_EXTENSIVE, CONJUNCTIVAL_SUPERIOR, CONJUNCTIVAL_OTHER_SITE, SIZE1, SIZE2, GRAFT_80VERGIN, GRAFT_100NYLON, GRAFT_OTHER, GRAFT_90NYLON, GRAFT_RUNNING, GRAFT_INTERRUPTED, GRAFT_COMBINED, SUBCONJUNCTIVAL_GENTAL, SUBCONJUNCTIVAL_CEFAZOLIN, SUBCONJUNCTIVAL_DEXAMETHASONE, SUBCONJUNCTIVAL_OTHERS, TOPICAL_MAXITROL, TOPICAL_TOBRADEX, TOPICAL_OTHER, EXTRA_NOTES, SURGEON_SIGNATURE}
            If (Not (parentView_OTRegistrationRowByS_OPER_PTERYGIUM) Is Nothing) Then
                columnValuesArray(2) = parentView_OTRegistrationRowByS_OPER_PTERYGIUM(0)
            End If
            rowS_OPER_PTERYGIUMRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowS_OPER_PTERYGIUMRow)
            Return rowS_OPER_PTERYGIUMRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindByPTERYGIUM_ID(ByVal PTERYGIUM_ID As Decimal) As S_OPER_PTERYGIUMRow
            Return CType(Me.Rows.Find(New Object() {PTERYGIUM_ID}),S_OPER_PTERYGIUMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As S_OPER_PTERYGIUMDataTable = CType(MyBase.Clone,S_OPER_PTERYGIUMDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New S_OPER_PTERYGIUMDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnPTERYGIUM_ID = MyBase.Columns("PTERYGIUM_ID")
            Me.columnCREATE_DATE = MyBase.Columns("CREATE_DATE")
            Me.columnOPERA_NO = MyBase.Columns("OPERA_NO")
            Me.columnPATIENT_NO = MyBase.Columns("PATIENT_NO")
            Me.columnPATIENT_NAME = MyBase.Columns("PATIENT_NAME")
            Me.columnPATIENT_SEX = MyBase.Columns("PATIENT_SEX")
            Me.columnPATIENT_AGE = MyBase.Columns("PATIENT_AGE")
            Me.columnSTART_TIME = MyBase.Columns("START_TIME")
            Me.columnSURGEON = MyBase.Columns("SURGEON")
            Me.columnSCRUB = MyBase.Columns("SCRUB")
            Me.columnCIRCULATING = MyBase.Columns("CIRCULATING")
            Me.columnANESTHESIONLOGIST = MyBase.Columns("ANESTHESIONLOGIST")
            Me.columnDIAGNOSIS = MyBase.Columns("DIAGNOSIS")
            Me.columnRIGHT_EYE = MyBase.Columns("RIGHT_EYE")
            Me.columnLEFT_EYE = MyBase.Columns("LEFT_EYE")
            Me.columnS_AN_GA = MyBase.Columns("S_AN_GA")
            Me.columnS_AN_NEURO = MyBase.Columns("S_AN_NEURO")
            Me.columnS_AN_STANDBY = MyBase.Columns("S_AN_STANDBY")
            Me.columnS_AN_RETROBULBAR = MyBase.Columns("S_AN_RETROBULBAR")
            Me.columnS_AN_PERIBULBAR = MyBase.Columns("S_AN_PERIBULBAR")
            Me.columnS_AN_TOPICAL = MyBase.Columns("S_AN_TOPICAL")
            Me.columnS_AN_SUBCONJUNCTIVAL = MyBase.Columns("S_AN_SUBCONJUNCTIVAL")
            Me.columnPTERYGIUM_NASAL = MyBase.Columns("PTERYGIUM_NASAL")
            Me.columnPTERYGIUM_TEMPORAL = MyBase.Columns("PTERYGIUM_TEMPORAL")
            Me.columnBRIDAL_SUPERIOR = MyBase.Columns("BRIDAL_SUPERIOR")
            Me.columnBRIDAL_70VICRYL = MyBase.Columns("BRIDAL_70VICRYL")
            Me.columnBRIDAL_80SILK = MyBase.Columns("BRIDAL_80SILK")
            Me.columnBRIDAL_OTHERS = MyBase.Columns("BRIDAL_OTHERS")
            Me.columnSUBCONJUNCTIVAL_XYLOCAIN_WITH = MyBase.Columns("SUBCONJUNCTIVAL_XYLOCAIN_WITH")
            Me.columnSUBCONJUNCTIVAL_XYLOCAIN = MyBase.Columns("SUBCONJUNCTIVAL_XYLOCAIN")
            Me.columnSUBCONJUNCTIVAL_NONE = MyBase.Columns("SUBCONJUNCTIVAL_NONE")
            Me.columnPTERYGIUM_SCISSORS = MyBase.Columns("PTERYGIUM_SCISSORS")
            Me.columnPTERYGIUM_OTHER = MyBase.Columns("PTERYGIUM_OTHER")
            Me.columnCAUTERY_MILD = MyBase.Columns("CAUTERY_MILD")
            Me.columnCAUTERY_69BLADE = MyBase.Columns("CAUTERY_69BLADE")
            Me.columnCAUTERY_MODRATE = MyBase.Columns("CAUTERY_MODRATE")
            Me.columnCAUTERY_EXTENSIVE = MyBase.Columns("CAUTERY_EXTENSIVE")
            Me.columnCONJUNCTIVAL_SUPERIOR = MyBase.Columns("CONJUNCTIVAL_SUPERIOR")
            Me.columnCONJUNCTIVAL_OTHER_SITE = MyBase.Columns("CONJUNCTIVAL_OTHER_SITE")
            Me.columnSIZE1 = MyBase.Columns("SIZE1")
            Me.columnSIZE2 = MyBase.Columns("SIZE2")
            Me.columnGRAFT_80VERGIN = MyBase.Columns("GRAFT_80VERGIN")
            Me.columnGRAFT_100NYLON = MyBase.Columns("GRAFT_100NYLON")
            Me.columnGRAFT_OTHER = MyBase.Columns("GRAFT_OTHER")
            Me.columnGRAFT_90NYLON = MyBase.Columns("GRAFT_90NYLON")
            Me.columnGRAFT_RUNNING = MyBase.Columns("GRAFT_RUNNING")
            Me.columnGRAFT_INTERRUPTED = MyBase.Columns("GRAFT_INTERRUPTED")
            Me.columnGRAFT_COMBINED = MyBase.Columns("GRAFT_COMBINED")
            Me.columnSUBCONJUNCTIVAL_GENTAL = MyBase.Columns("SUBCONJUNCTIVAL_GENTAL")
            Me.columnSUBCONJUNCTIVAL_CEFAZOLIN = MyBase.Columns("SUBCONJUNCTIVAL_CEFAZOLIN")
            Me.columnSUBCONJUNCTIVAL_DEXAMETHASONE = MyBase.Columns("SUBCONJUNCTIVAL_DEXAMETHASONE")
            Me.columnSUBCONJUNCTIVAL_OTHERS = MyBase.Columns("SUBCONJUNCTIVAL_OTHERS")
            Me.columnTOPICAL_MAXITROL = MyBase.Columns("TOPICAL_MAXITROL")
            Me.columnTOPICAL_TOBRADEX = MyBase.Columns("TOPICAL_TOBRADEX")
            Me.columnTOPICAL_OTHER = MyBase.Columns("TOPICAL_OTHER")
            Me.columnEXTRA_NOTES = MyBase.Columns("EXTRA_NOTES")
            Me.columnSURGEON_SIGNATURE = MyBase.Columns("SURGEON_SIGNATURE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnPTERYGIUM_ID = New Global.System.Data.DataColumn("PTERYGIUM_ID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTERYGIUM_ID)
            Me.columnCREATE_DATE = New Global.System.Data.DataColumn("CREATE_DATE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCREATE_DATE)
            Me.columnOPERA_NO = New Global.System.Data.DataColumn("OPERA_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOPERA_NO)
            Me.columnPATIENT_NO = New Global.System.Data.DataColumn("PATIENT_NO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NO)
            Me.columnPATIENT_NAME = New Global.System.Data.DataColumn("PATIENT_NAME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_NAME)
            Me.columnPATIENT_SEX = New Global.System.Data.DataColumn("PATIENT_SEX", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_SEX)
            Me.columnPATIENT_AGE = New Global.System.Data.DataColumn("PATIENT_AGE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPATIENT_AGE)
            Me.columnSTART_TIME = New Global.System.Data.DataColumn("START_TIME", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTART_TIME)
            Me.columnSURGEON = New Global.System.Data.DataColumn("SURGEON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON)
            Me.columnSCRUB = New Global.System.Data.DataColumn("SCRUB", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSCRUB)
            Me.columnCIRCULATING = New Global.System.Data.DataColumn("CIRCULATING", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCIRCULATING)
            Me.columnANESTHESIONLOGIST = New Global.System.Data.DataColumn("ANESTHESIONLOGIST", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANESTHESIONLOGIST)
            Me.columnDIAGNOSIS = New Global.System.Data.DataColumn("DIAGNOSIS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIAGNOSIS)
            Me.columnRIGHT_EYE = New Global.System.Data.DataColumn("RIGHT_EYE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRIGHT_EYE)
            Me.columnLEFT_EYE = New Global.System.Data.DataColumn("LEFT_EYE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLEFT_EYE)
            Me.columnS_AN_GA = New Global.System.Data.DataColumn("S_AN_GA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_GA)
            Me.columnS_AN_NEURO = New Global.System.Data.DataColumn("S_AN_NEURO", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_NEURO)
            Me.columnS_AN_STANDBY = New Global.System.Data.DataColumn("S_AN_STANDBY", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_STANDBY)
            Me.columnS_AN_RETROBULBAR = New Global.System.Data.DataColumn("S_AN_RETROBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_RETROBULBAR)
            Me.columnS_AN_PERIBULBAR = New Global.System.Data.DataColumn("S_AN_PERIBULBAR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_PERIBULBAR)
            Me.columnS_AN_TOPICAL = New Global.System.Data.DataColumn("S_AN_TOPICAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_TOPICAL)
            Me.columnS_AN_SUBCONJUNCTIVAL = New Global.System.Data.DataColumn("S_AN_SUBCONJUNCTIVAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnS_AN_SUBCONJUNCTIVAL)
            Me.columnPTERYGIUM_NASAL = New Global.System.Data.DataColumn("PTERYGIUM_NASAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTERYGIUM_NASAL)
            Me.columnPTERYGIUM_TEMPORAL = New Global.System.Data.DataColumn("PTERYGIUM_TEMPORAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTERYGIUM_TEMPORAL)
            Me.columnBRIDAL_SUPERIOR = New Global.System.Data.DataColumn("BRIDAL_SUPERIOR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRIDAL_SUPERIOR)
            Me.columnBRIDAL_70VICRYL = New Global.System.Data.DataColumn("BRIDAL_70VICRYL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRIDAL_70VICRYL)
            Me.columnBRIDAL_80SILK = New Global.System.Data.DataColumn("BRIDAL_80SILK", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRIDAL_80SILK)
            Me.columnBRIDAL_OTHERS = New Global.System.Data.DataColumn("BRIDAL_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBRIDAL_OTHERS)
            Me.columnSUBCONJUNCTIVAL_XYLOCAIN_WITH = New Global.System.Data.DataColumn("SUBCONJUNCTIVAL_XYLOCAIN_WITH", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUNCTIVAL_XYLOCAIN_WITH)
            Me.columnSUBCONJUNCTIVAL_XYLOCAIN = New Global.System.Data.DataColumn("SUBCONJUNCTIVAL_XYLOCAIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUNCTIVAL_XYLOCAIN)
            Me.columnSUBCONJUNCTIVAL_NONE = New Global.System.Data.DataColumn("SUBCONJUNCTIVAL_NONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUNCTIVAL_NONE)
            Me.columnPTERYGIUM_SCISSORS = New Global.System.Data.DataColumn("PTERYGIUM_SCISSORS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTERYGIUM_SCISSORS)
            Me.columnPTERYGIUM_OTHER = New Global.System.Data.DataColumn("PTERYGIUM_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPTERYGIUM_OTHER)
            Me.columnCAUTERY_MILD = New Global.System.Data.DataColumn("CAUTERY_MILD", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAUTERY_MILD)
            Me.columnCAUTERY_69BLADE = New Global.System.Data.DataColumn("CAUTERY_69BLADE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAUTERY_69BLADE)
            Me.columnCAUTERY_MODRATE = New Global.System.Data.DataColumn("CAUTERY_MODRATE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAUTERY_MODRATE)
            Me.columnCAUTERY_EXTENSIVE = New Global.System.Data.DataColumn("CAUTERY_EXTENSIVE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAUTERY_EXTENSIVE)
            Me.columnCONJUNCTIVAL_SUPERIOR = New Global.System.Data.DataColumn("CONJUNCTIVAL_SUPERIOR", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_SUPERIOR)
            Me.columnCONJUNCTIVAL_OTHER_SITE = New Global.System.Data.DataColumn("CONJUNCTIVAL_OTHER_SITE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONJUNCTIVAL_OTHER_SITE)
            Me.columnSIZE1 = New Global.System.Data.DataColumn("SIZE1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZE1)
            Me.columnSIZE2 = New Global.System.Data.DataColumn("SIZE2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIZE2)
            Me.columnGRAFT_80VERGIN = New Global.System.Data.DataColumn("GRAFT_80VERGIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRAFT_80VERGIN)
            Me.columnGRAFT_100NYLON = New Global.System.Data.DataColumn("GRAFT_100NYLON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRAFT_100NYLON)
            Me.columnGRAFT_OTHER = New Global.System.Data.DataColumn("GRAFT_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRAFT_OTHER)
            Me.columnGRAFT_90NYLON = New Global.System.Data.DataColumn("GRAFT_90NYLON", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRAFT_90NYLON)
            Me.columnGRAFT_RUNNING = New Global.System.Data.DataColumn("GRAFT_RUNNING", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRAFT_RUNNING)
            Me.columnGRAFT_INTERRUPTED = New Global.System.Data.DataColumn("GRAFT_INTERRUPTED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRAFT_INTERRUPTED)
            Me.columnGRAFT_COMBINED = New Global.System.Data.DataColumn("GRAFT_COMBINED", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGRAFT_COMBINED)
            Me.columnSUBCONJUNCTIVAL_GENTAL = New Global.System.Data.DataColumn("SUBCONJUNCTIVAL_GENTAL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUNCTIVAL_GENTAL)
            Me.columnSUBCONJUNCTIVAL_CEFAZOLIN = New Global.System.Data.DataColumn("SUBCONJUNCTIVAL_CEFAZOLIN", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUNCTIVAL_CEFAZOLIN)
            Me.columnSUBCONJUNCTIVAL_DEXAMETHASONE = New Global.System.Data.DataColumn("SUBCONJUNCTIVAL_DEXAMETHASONE", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUNCTIVAL_DEXAMETHASONE)
            Me.columnSUBCONJUNCTIVAL_OTHERS = New Global.System.Data.DataColumn("SUBCONJUNCTIVAL_OTHERS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSUBCONJUNCTIVAL_OTHERS)
            Me.columnTOPICAL_MAXITROL = New Global.System.Data.DataColumn("TOPICAL_MAXITROL", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_MAXITROL)
            Me.columnTOPICAL_TOBRADEX = New Global.System.Data.DataColumn("TOPICAL_TOBRADEX", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_TOBRADEX)
            Me.columnTOPICAL_OTHER = New Global.System.Data.DataColumn("TOPICAL_OTHER", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOPICAL_OTHER)
            Me.columnEXTRA_NOTES = New Global.System.Data.DataColumn("EXTRA_NOTES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEXTRA_NOTES)
            Me.columnSURGEON_SIGNATURE = New Global.System.Data.DataColumn("SURGEON_SIGNATURE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSURGEON_SIGNATURE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPTERYGIUM_ID}, true))
            Me.columnPTERYGIUM_ID.AutoIncrement = true
            Me.columnPTERYGIUM_ID.AutoIncrementSeed = -1
            Me.columnPTERYGIUM_ID.AutoIncrementStep = -1
            Me.columnPTERYGIUM_ID.AllowDBNull = false
            Me.columnPTERYGIUM_ID.ReadOnly = true
            Me.columnPTERYGIUM_ID.Unique = true
            Me.columnPATIENT_NAME.MaxLength = 50
            Me.columnPATIENT_SEX.MaxLength = 1
            Me.columnPATIENT_AGE.MaxLength = 50
            Me.columnSTART_TIME.MaxLength = 50
            Me.columnSURGEON.MaxLength = 50
            Me.columnSCRUB.MaxLength = 50
            Me.columnCIRCULATING.MaxLength = 50
            Me.columnANESTHESIONLOGIST.MaxLength = 50
            Me.columnDIAGNOSIS.MaxLength = 50
            Me.columnBRIDAL_OTHERS.MaxLength = 250
            Me.columnPTERYGIUM_OTHER.MaxLength = 50
            Me.columnCONJUNCTIVAL_OTHER_SITE.MaxLength = 250
            Me.columnSIZE1.MaxLength = 50
            Me.columnSIZE2.MaxLength = 50
            Me.columnGRAFT_OTHER.MaxLength = 250
            Me.columnSUBCONJUNCTIVAL_OTHERS.MaxLength = 250
            Me.columnTOPICAL_OTHER.MaxLength = 250
            Me.columnEXTRA_NOTES.MaxLength = 350
            Me.columnSURGEON_SIGNATURE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewS_OPER_PTERYGIUMRow() As S_OPER_PTERYGIUMRow
            Return CType(Me.NewRow,S_OPER_PTERYGIUMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New S_OPER_PTERYGIUMRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(S_OPER_PTERYGIUMRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.S_OPER_PTERYGIUMRowChangedEvent) Is Nothing) Then
                RaiseEvent S_OPER_PTERYGIUMRowChanged(Me, New S_OPER_PTERYGIUMRowChangeEvent(CType(e.Row,S_OPER_PTERYGIUMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.S_OPER_PTERYGIUMRowChangingEvent) Is Nothing) Then
                RaiseEvent S_OPER_PTERYGIUMRowChanging(Me, New S_OPER_PTERYGIUMRowChangeEvent(CType(e.Row,S_OPER_PTERYGIUMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.S_OPER_PTERYGIUMRowDeletedEvent) Is Nothing) Then
                RaiseEvent S_OPER_PTERYGIUMRowDeleted(Me, New S_OPER_PTERYGIUMRowChangeEvent(CType(e.Row,S_OPER_PTERYGIUMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.S_OPER_PTERYGIUMRowDeletingEvent) Is Nothing) Then
                RaiseEvent S_OPER_PTERYGIUMRowDeleting(Me, New S_OPER_PTERYGIUMRowChangeEvent(CType(e.Row,S_OPER_PTERYGIUMRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveS_OPER_PTERYGIUMRow(ByVal row As S_OPER_PTERYGIUMRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As DSOPERATIONNOTE = New DSOPERATIONNOTE
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "S_OPER_PTERYGIUMDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_OPER_SCLERAL_BUCKLINGRow
        Inherits Global.System.Data.DataRow
        
        Private tableS_OPER_SCLERAL_BUCKLING As S_OPER_SCLERAL_BUCKLINGDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_OPER_SCLERAL_BUCKLING = CType(Me.Table,S_OPER_SCLERAL_BUCKLINGDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLERAL_ID() As Decimal
            Get
                Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.SCLERAL_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.SCLERAL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OPERA_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.OPERA_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERA_NO' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.OPERA_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RIGHT_EYE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.RIGHT_EYEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIGHT_EYE' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.RIGHT_EYEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LEFT_EYE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.LEFT_EYEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEFT_EYE' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.LEFT_EYEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property START_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.START_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'START_TIME' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.START_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCRUB() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.SCRUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRUB' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.SCRUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIRCULATING() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.CIRCULATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCULATING' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.CIRCULATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANESTHESIONLOGIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.ANESTHESIONLOGISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANESTHESIONLOGIST' in table 'S_OPER_SCLERAL_BUCKLING' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.ANESTHESIONLOGISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_PERITOMY360() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_PERITOMY360Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_PERITOMY360' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_PERITOMY360Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_RECTUS_MUSCLES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_RECTUS_MUSCLESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_RECTUS_MUSCLES' in table 'S_OPER_SCLERAL_BUCKLING' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_RECTUS_MUSCLESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_GA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_GAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_GA' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_NEURO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_NEUROColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_NEURO' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_NEUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_STANDBY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_STANDBYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_STANDBY' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_STANDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_RETROBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_RETROBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_RETROBULBAR' in table 'S_OPER_SCLERAL_BUCKLING' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_RETROBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_PERIBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_PERIBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_PERIBULBAR' in table 'S_OPER_SCLERAL_BUCKLING' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_PERIBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_TOPICAL' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_EX_GA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_GAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_EX_GA' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_EX_RETROBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_RETROBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_EX_RETROBULBAR' in table 'S_OPER_SCLERAL_BUCKLING' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_RETROBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_EX_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_EX_TOPICAL' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_NOTE' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_INTRAVITREAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_INTRAVITREALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_INTRAVITREAL' in table 'S_OPER_SCLERAL_BUCKLING' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_INTRAVITREALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_OTHER_PROCEDURES() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_OTHER_PROCEDURESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_OTHER_PROCEDURES' in table 'S_OPER_SCLERAL_BUCKLING' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_OTHER_PROCEDURESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_CON_8VICRYL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_8VICRYLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_CON_8VICRYL' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_8VICRYLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_CON_10NYLON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_10NYLONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_CON_10NYLON' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_10NYLONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_CON_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_CON_OTHERS' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_SUB_GENTAMICIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_GENTAMICINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_SUB_GENTAMICIN' in table 'S_OPER_SCLERAL_BUCKLING' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_GENTAMICINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_SUB_CEFAZOLIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_CEFAZOLINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_SUB_CEFAZOLIN' in table 'S_OPER_SCLERAL_BUCKLING' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_CEFAZOLINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_SUB_DEXAMETHASONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_DEXAMETHASONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_SUB_DEXAMETHASONE' in table 'S_OPER_SCLERAL_BUCKLING' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_DEXAMETHASONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_SUB_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_SUB_OTHERS' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_TOP_MAXITROL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_MAXITROLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_TOP_MAXITROL' in table 'S_OPER_SCLERAL_BUCKLING' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_MAXITROLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_TOP_PILOCARPINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_PILOCARPINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_TOP_PILOCARPINE' in table 'S_OPER_SCLERAL_BUCKLING' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_PILOCARPINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_TOP_ATROPINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_ATROPINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_TOP_ATROPINE' in table 'S_OPER_SCLERAL_BUCKLING' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_ATROPINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_TOP_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_TOP_OTHERS' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_SUGEON_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUGEON_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_SUGEON_NAME' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUGEON_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.SURGEONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.SURGEONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NO' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NAME' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_SEX' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_AGE' in table 'S_OPER_SCLERAL_BUCKLING' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property View_OTRegistrationRow() As View_OTRegistrationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("OperationNotesScleral")),View_OTRegistrationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("OperationNotesScleral"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOPERA_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.OPERA_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOPERA_NONull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.OPERA_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRIGHT_EYENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.RIGHT_EYEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRIGHT_EYENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.RIGHT_EYEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLEFT_EYENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.LEFT_EYEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLEFT_EYENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.LEFT_EYEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTART_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.START_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTART_TIMENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCRUBNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.SCRUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCRUBNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.SCRUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIRCULATINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.CIRCULATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIRCULATINGNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.CIRCULATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANESTHESIONLOGISTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.ANESTHESIONLOGISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANESTHESIONLOGISTNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.ANESTHESIONLOGISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_PERITOMY360Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_PERITOMY360Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_PERITOMY360Null()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_PERITOMY360Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_RECTUS_MUSCLESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_RECTUS_MUSCLESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_RECTUS_MUSCLESNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_RECTUS_MUSCLESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_GANull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_GANull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_NEURONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_NEUROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_NEURONull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_NEUROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_STANDBYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_STANDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_STANDBYNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_STANDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_RETROBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_RETROBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_RETROBULBARNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_RETROBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_PERIBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_PERIBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_PERIBULBARNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_PERIBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_TOPICALNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_AN_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_EX_GANull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_EX_GANull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_EX_RETROBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_RETROBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_EX_RETROBULBARNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_RETROBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_EX_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_EX_TOPICALNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_EX_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_NOTENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_INTRAVITREALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_INTRAVITREALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_INTRAVITREALNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_INTRAVITREALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_OTHER_PROCEDURESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_OTHER_PROCEDURESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_OTHER_PROCEDURESNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_OTHER_PROCEDURESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_CON_8VICRYLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_8VICRYLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_CON_8VICRYLNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_8VICRYLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_CON_10NYLONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_10NYLONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_CON_10NYLONNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_10NYLONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_CON_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_CON_OTHERSNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_CON_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_SUB_GENTAMICINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_GENTAMICINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_SUB_GENTAMICINNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_GENTAMICINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_SUB_CEFAZOLINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_CEFAZOLINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_SUB_CEFAZOLINNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_CEFAZOLINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_SUB_DEXAMETHASONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_DEXAMETHASONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_SUB_DEXAMETHASONENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_DEXAMETHASONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_SUB_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_SUB_OTHERSNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUB_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_TOP_MAXITROLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_MAXITROLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_TOP_MAXITROLNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_MAXITROLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_TOP_PILOCARPINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_PILOCARPINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_TOP_PILOCARPINENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_PILOCARPINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_TOP_ATROPINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_ATROPINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_TOP_ATROPINENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_ATROPINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_TOP_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_TOP_OTHERSNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_TOP_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_SUGEON_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUGEON_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_SUGEON_NAMENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.S_SUGEON_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.SURGEONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEONNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.SURGEONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NONull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NAMENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_SEXNull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_AGENull()
            Me(Me.tableS_OPER_SCLERAL_BUCKLING.PATIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TblDoctorRow
        Inherits Global.System.Data.DataRow
        
        Private tableTblDoctor As TblDoctorDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTblDoctor = CType(Me.Table,TblDoctorDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DoctorNo() As Decimal
            Get
                Return CType(Me(Me.tableTblDoctor.DoctorNoColumn),Decimal)
            End Get
            Set
                Me(Me.tableTblDoctor.DoctorNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DoctorName() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDoctor.DoctorNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DoctorName' in table 'TblDoctor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDoctor.DoctorNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sex() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDoctor.SexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sex' in table 'TblDoctor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDoctor.SexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Age() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTblDoctor.AgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Age' in table 'TblDoctor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDoctor.AgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tel() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDoctor.TelColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Tel' in table 'TblDoctor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDoctor.TelColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Job() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblDoctor.JobColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Job' in table 'TblDoctor' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblDoctor.JobColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDoctorNameNull() As Boolean
            Return Me.IsNull(Me.tableTblDoctor.DoctorNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDoctorNameNull()
            Me(Me.tableTblDoctor.DoctorNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSexNull() As Boolean
            Return Me.IsNull(Me.tableTblDoctor.SexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSexNull()
            Me(Me.tableTblDoctor.SexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAgeNull() As Boolean
            Return Me.IsNull(Me.tableTblDoctor.AgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAgeNull()
            Me(Me.tableTblDoctor.AgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTelNull() As Boolean
            Return Me.IsNull(Me.tableTblDoctor.TelColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTelNull()
            Me(Me.tableTblDoctor.TelColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsJobNull() As Boolean
            Return Me.IsNull(Me.tableTblDoctor.JobColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetJobNull()
            Me(Me.tableTblDoctor.JobColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class TblSurgeryRow
        Inherits Global.System.Data.DataRow
        
        Private tableTblSurgery As TblSurgeryDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTblSurgery = CType(Me.Table,TblSurgeryDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SID() As Decimal
            Get
                Return CType(Me(Me.tableTblSurgery.SIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableTblSurgery.SIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Surgery() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblSurgery.SurgeryColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Surgery' in table 'TblSurgery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblSurgery.SurgeryColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Description() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblSurgery.DescriptionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Description' in table 'TblSurgery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblSurgery.DescriptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Code() As String
            Get
                Try 
                    Return CType(Me(Me.tableTblSurgery.CodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Code' in table 'TblSurgery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblSurgery.CodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Type() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTblSurgery.TypeColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Type' in table 'TblSurgery' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTblSurgery.TypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSurgeryNull() As Boolean
            Return Me.IsNull(Me.tableTblSurgery.SurgeryColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSurgeryNull()
            Me(Me.tableTblSurgery.SurgeryColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescriptionNull() As Boolean
            Return Me.IsNull(Me.tableTblSurgery.DescriptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescriptionNull()
            Me(Me.tableTblSurgery.DescriptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodeNull() As Boolean
            Return Me.IsNull(Me.tableTblSurgery.CodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodeNull()
            Me(Me.tableTblSurgery.CodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTypeNull() As Boolean
            Return Me.IsNull(Me.tableTblSurgery.TypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTypeNull()
            Me(Me.tableTblSurgery.TypeColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class View_OTRegistrationRow
        Inherits Global.System.Data.DataRow
        
        Private tableView_OTRegistration As View_OTRegistrationDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableView_OTRegistration = CType(Me.Table,View_OTRegistrationDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTNo() As Decimal
            Get
                Return CType(Me(Me.tableView_OTRegistration.OTNoColumn),Decimal)
            End Get
            Set
                Me(Me.tableView_OTRegistration.OTNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NewInPatientNo() As Decimal
            Get
                Return CType(Me(Me.tableView_OTRegistration.NewInPatientNoColumn),Decimal)
            End Get
            Set
                Me(Me.tableView_OTRegistration.NewInPatientNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PatientNo() As Decimal
            Get
                Return CType(Me(Me.tableView_OTRegistration.PatientNoColumn),Decimal)
            End Get
            Set
                Me(Me.tableView_OTRegistration.PatientNoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameKhmer() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.NameKhmerColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameKhmer' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.NameKhmerColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Age() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.AgeColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Age' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.AgeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Sex() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.SexColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Sex' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.SexColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Address() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.AddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Address' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.AddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationTime() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.OperationTimeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OperationTime' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.OperationTimeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Anesthesia() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.AnesthesiaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Anesthesia' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.AnesthesiaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Anesthetist() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.AnesthetistColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Anesthetist' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.AnesthetistColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Eye() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.EyeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Eye' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.EyeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OperationType() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.OperationTypeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OperationType' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.OperationTypeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.IOLColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.IOLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Surgeon() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.SurgeonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Surgeon' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.SurgeonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Assistant() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.AssistantColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Assistant' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.AssistantColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Circulation() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.CirculationColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Circulation' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.CirculationColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Compli() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.CompliColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Compli' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.CompliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CreateDate() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.CreateDateColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CreateDate' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.CreateDateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Status() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.StatusColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Status' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.StatusColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DateOperated() As Date
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.DateOperatedColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DateOperated' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.DateOperatedColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Others() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.OthersColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Others' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.OthersColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Waiting() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.WaitingColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Waiting' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.WaitingColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DeleteOption() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.DeleteOptionColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DeleteOption' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.DeleteOptionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_ID() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.IOL_IDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_ID' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.IOL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_ID_OLD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.IOL_ID_OLDColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_ID_OLD' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.IOL_ID_OLDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NameEng() As String
            Get
                Try 
                    Return CType(Me(Me.tableView_OTRegistration.NameEngColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NameEng' in table 'View_OTRegistration' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableView_OTRegistration.NameEngColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNameKhmerNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.NameKhmerColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNameKhmerNull()
            Me(Me.tableView_OTRegistration.NameKhmerColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAgeNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.AgeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAgeNull()
            Me(Me.tableView_OTRegistration.AgeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSexNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.SexColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSexNull()
            Me(Me.tableView_OTRegistration.SexColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAddressNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.AddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAddressNull()
            Me(Me.tableView_OTRegistration.AddressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperationTimeNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.OperationTimeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperationTimeNull()
            Me(Me.tableView_OTRegistration.OperationTimeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAnesthesiaNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.AnesthesiaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAnesthesiaNull()
            Me(Me.tableView_OTRegistration.AnesthesiaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAnesthetistNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.AnesthetistColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAnesthetistNull()
            Me(Me.tableView_OTRegistration.AnesthetistColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEyeNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.EyeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEyeNull()
            Me(Me.tableView_OTRegistration.EyeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOperationTypeNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.OperationTypeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOperationTypeNull()
            Me(Me.tableView_OTRegistration.OperationTypeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOLNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.IOLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOLNull()
            Me(Me.tableView_OTRegistration.IOLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSurgeonNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.SurgeonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSurgeonNull()
            Me(Me.tableView_OTRegistration.SurgeonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAssistantNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.AssistantColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAssistantNull()
            Me(Me.tableView_OTRegistration.AssistantColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCirculationNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.CirculationColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCirculationNull()
            Me(Me.tableView_OTRegistration.CirculationColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCompliNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.CompliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCompliNull()
            Me(Me.tableView_OTRegistration.CompliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCreateDateNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.CreateDateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCreateDateNull()
            Me(Me.tableView_OTRegistration.CreateDateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsStatusNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.StatusColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetStatusNull()
            Me(Me.tableView_OTRegistration.StatusColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDateOperatedNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.DateOperatedColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDateOperatedNull()
            Me(Me.tableView_OTRegistration.DateOperatedColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOthersNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.OthersColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOthersNull()
            Me(Me.tableView_OTRegistration.OthersColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsWaitingNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.WaitingColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetWaitingNull()
            Me(Me.tableView_OTRegistration.WaitingColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDeleteOptionNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.DeleteOptionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDeleteOptionNull()
            Me(Me.tableView_OTRegistration.DeleteOptionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_IDNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.IOL_IDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_IDNull()
            Me(Me.tableView_OTRegistration.IOL_IDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_ID_OLDNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.IOL_ID_OLDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_ID_OLDNull()
            Me(Me.tableView_OTRegistration.IOL_ID_OLDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNameEngNull() As Boolean
            Return Me.IsNull(Me.tableView_OTRegistration.NameEngColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNameEngNull()
            Me(Me.tableView_OTRegistration.NameEngColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetS_OPER_SCLERAL_BUCKLINGRows() As S_OPER_SCLERAL_BUCKLINGRow()
            If (Me.Table.ChildRelations("OperationNotesScleral") Is Nothing) Then
                Return New S_OPER_SCLERAL_BUCKLINGRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("OperationNotesScleral")),S_OPER_SCLERAL_BUCKLINGRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetS_OPER_INJECTIONRows() As S_OPER_INJECTIONRow()
            If (Me.Table.ChildRelations("OperInjection") Is Nothing) Then
                Return New S_OPER_INJECTIONRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("OperInjection")),S_OPER_INJECTIONRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetS_OPER_GENERAL_OPERATIVERows() As S_OPER_GENERAL_OPERATIVERow()
            If (Me.Table.ChildRelations("GENERAL_OPERATIVE") Is Nothing) Then
                Return New S_OPER_GENERAL_OPERATIVERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("GENERAL_OPERATIVE")),S_OPER_GENERAL_OPERATIVERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetS_OPER_PHACOEMULSIFICATIONRows() As S_OPER_PHACOEMULSIFICATIONRow()
            If (Me.Table.ChildRelations("Oper_Phacoemul") Is Nothing) Then
                Return New S_OPER_PHACOEMULSIFICATIONRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Oper_Phacoemul")),S_OPER_PHACOEMULSIFICATIONRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetS_OPERA_ECCERows() As S_OPERA_ECCERow()
            If (Me.Table.ChildRelations("Oper_ECCE") Is Nothing) Then
                Return New S_OPERA_ECCERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("Oper_ECCE")),S_OPERA_ECCERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetS_OPER_PAR_PLANA_VITRECTOMYRows() As S_OPER_PAR_PLANA_VITRECTOMYRow()
            If (Me.Table.ChildRelations("OperParPlana") Is Nothing) Then
                Return New S_OPER_PAR_PLANA_VITRECTOMYRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("OperParPlana")),S_OPER_PAR_PLANA_VITRECTOMYRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetS_OPER_TRABECULECTOMYRows() As S_OPER_TRABECULECTOMYRow()
            If (Me.Table.ChildRelations("S_OPER_TRABECULECTOMY") Is Nothing) Then
                Return New S_OPER_TRABECULECTOMYRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("S_OPER_TRABECULECTOMY")),S_OPER_TRABECULECTOMYRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function GetS_OPER_PTERYGIUMRows() As S_OPER_PTERYGIUMRow()
            If (Me.Table.ChildRelations("S_OPER_PTERYGIUM") Is Nothing) Then
                Return New S_OPER_PTERYGIUMRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("S_OPER_PTERYGIUM")),S_OPER_PTERYGIUMRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_OPER_INJECTIONRow
        Inherits Global.System.Data.DataRow
        
        Private tableS_OPER_INJECTION As S_OPER_INJECTIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_OPER_INJECTION = CType(Me.Table,S_OPER_INJECTIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INJECTION_ID() As Decimal
            Get
                Return CType(Me(Me.tableS_OPER_INJECTION.INJECTION_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.INJECTION_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OPERA_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.OPERA_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERA_NO' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.OPERA_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.PATIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NO' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.PATIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.PATIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NAME' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.PATIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.PATIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_SEX' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.PATIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.PATIENT_AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_AGE' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.PATIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property START_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.START_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'START_TIME' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.START_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.SURGEONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.SURGEONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCRUB() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.SCRUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRUB' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.SCRUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIRCULATING() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.CIRCULATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCULATING' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.CIRCULATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANESTHESIONLOGIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.ANESTHESIONLOGISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANESTHESIONLOGIST' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.ANESTHESIONLOGISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IVTA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.IVTAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVTA' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.IVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AVASTIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.AVASTINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AVASTIN' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.AVASTINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LUCENTIS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.LUCENTISColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LUCENTIS' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.LUCENTISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AN_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.AN_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AN_TOPICAL' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.AN_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AN_SUBCONJUNCTIVAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.AN_SUBCONJUNCTIVALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AN_SUBCONJUNCTIVAL' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.AN_SUBCONJUNCTIVALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FULL_PRE_OP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.FULL_PRE_OPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FULL_PRE_OP' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.FULL_PRE_OPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_FULL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.PATIENT_FULLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_FULL' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.PATIENT_FULLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INTRA_TRIAMCINOLONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.INTRA_TRIAMCINOLONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTRA_TRIAMCINOLONE' in table 'S_OPER_INJECTION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.INTRA_TRIAMCINOLONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INTRA_TRIAM_DOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.INTRA_TRIAM_DOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTRA_TRIAM_DOSE' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.INTRA_TRIAM_DOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INTRA_AVASTIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.INTRA_AVASTINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTRA_AVASTIN' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.INTRA_AVASTINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INTRA_AVASTIN_DOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.INTRA_AVASTIN_DOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTRA_AVASTIN_DOSE' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.INTRA_AVASTIN_DOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INTRA_LUCENTIS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.INTRA_LUCENTISColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTRA_LUCENTIS' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.INTRA_LUCENTISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INTRA_LUCENTIS_DOSE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.INTRA_LUCENTIS_DOSEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTRA_LUCENTIS_DOSE' in table 'S_OPER_INJECTION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.INTRA_LUCENTIS_DOSEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALPHAGAM() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.ALPHAGAMColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ALPHAGAM' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.ALPHAGAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NEO_SYNEPHRINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.NEO_SYNEPHRINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NEO_SYNEPHRINE' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.NEO_SYNEPHRINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POLY_OPH_TROPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.POLY_OPH_TROPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POLY_OPH_TROPICAL' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.POLY_OPH_TROPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIGAMOX_TROPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.VIGAMOX_TROPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIGAMOX_TROPICAL' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.VIGAMOX_TROPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIGAMO_TROPICAL_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.VIGAMO_TROPICAL_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIGAMO_TROPICAL_NOTE' in table 'S_OPER_INJECTION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.VIGAMO_TROPICAL_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MAXITROL_EYE_OITMENT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.MAXITROL_EYE_OITMENTColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MAXITROL_EYE_OITMENT' in table 'S_OPER_INJECTION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.MAXITROL_EYE_OITMENTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATH() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.PATHColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATH' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.PATHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NO_COMPLICATION() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.NO_COMPLICATIONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NO_COMPLICATION' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.NO_COMPLICATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOTE' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON_SIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_INJECTION.SURGEON_SIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON_SIGNATURE' in table 'S_OPER_INJECTION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_INJECTION.SURGEON_SIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property View_OTRegistrationRow() As View_OTRegistrationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("OperInjection")),View_OTRegistrationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("OperInjection"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableS_OPER_INJECTION.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOPERA_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.OPERA_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOPERA_NONull()
            Me(Me.tableS_OPER_INJECTION.OPERA_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.PATIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NONull()
            Me(Me.tableS_OPER_INJECTION.PATIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.PATIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NAMENull()
            Me(Me.tableS_OPER_INJECTION.PATIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.PATIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_SEXNull()
            Me(Me.tableS_OPER_INJECTION.PATIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.PATIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_AGENull()
            Me(Me.tableS_OPER_INJECTION.PATIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTART_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.START_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTART_TIMENull()
            Me(Me.tableS_OPER_INJECTION.START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.SURGEONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEONNull()
            Me(Me.tableS_OPER_INJECTION.SURGEONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCRUBNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.SCRUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCRUBNull()
            Me(Me.tableS_OPER_INJECTION.SCRUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIRCULATINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.CIRCULATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIRCULATINGNull()
            Me(Me.tableS_OPER_INJECTION.CIRCULATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANESTHESIONLOGISTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.ANESTHESIONLOGISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANESTHESIONLOGISTNull()
            Me(Me.tableS_OPER_INJECTION.ANESTHESIONLOGISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableS_OPER_INJECTION.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIVTANull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.IVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIVTANull()
            Me(Me.tableS_OPER_INJECTION.IVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAVASTINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.AVASTINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAVASTINNull()
            Me(Me.tableS_OPER_INJECTION.AVASTINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLUCENTISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.LUCENTISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLUCENTISNull()
            Me(Me.tableS_OPER_INJECTION.LUCENTISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAN_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.AN_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAN_TOPICALNull()
            Me(Me.tableS_OPER_INJECTION.AN_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAN_SUBCONJUNCTIVALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.AN_SUBCONJUNCTIVALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAN_SUBCONJUNCTIVALNull()
            Me(Me.tableS_OPER_INJECTION.AN_SUBCONJUNCTIVALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFULL_PRE_OPNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.FULL_PRE_OPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFULL_PRE_OPNull()
            Me(Me.tableS_OPER_INJECTION.FULL_PRE_OPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_FULLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.PATIENT_FULLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_FULLNull()
            Me(Me.tableS_OPER_INJECTION.PATIENT_FULLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINTRA_TRIAMCINOLONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.INTRA_TRIAMCINOLONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINTRA_TRIAMCINOLONENull()
            Me(Me.tableS_OPER_INJECTION.INTRA_TRIAMCINOLONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINTRA_TRIAM_DOSENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.INTRA_TRIAM_DOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINTRA_TRIAM_DOSENull()
            Me(Me.tableS_OPER_INJECTION.INTRA_TRIAM_DOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINTRA_AVASTINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.INTRA_AVASTINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINTRA_AVASTINNull()
            Me(Me.tableS_OPER_INJECTION.INTRA_AVASTINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINTRA_AVASTIN_DOSENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.INTRA_AVASTIN_DOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINTRA_AVASTIN_DOSENull()
            Me(Me.tableS_OPER_INJECTION.INTRA_AVASTIN_DOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINTRA_LUCENTISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.INTRA_LUCENTISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINTRA_LUCENTISNull()
            Me(Me.tableS_OPER_INJECTION.INTRA_LUCENTISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINTRA_LUCENTIS_DOSENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.INTRA_LUCENTIS_DOSEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINTRA_LUCENTIS_DOSENull()
            Me(Me.tableS_OPER_INJECTION.INTRA_LUCENTIS_DOSEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALPHAGAMNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.ALPHAGAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALPHAGAMNull()
            Me(Me.tableS_OPER_INJECTION.ALPHAGAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNEO_SYNEPHRINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.NEO_SYNEPHRINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNEO_SYNEPHRINENull()
            Me(Me.tableS_OPER_INJECTION.NEO_SYNEPHRINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOLY_OPH_TROPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.POLY_OPH_TROPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOLY_OPH_TROPICALNull()
            Me(Me.tableS_OPER_INJECTION.POLY_OPH_TROPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIGAMOX_TROPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.VIGAMOX_TROPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIGAMOX_TROPICALNull()
            Me(Me.tableS_OPER_INJECTION.VIGAMOX_TROPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIGAMO_TROPICAL_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.VIGAMO_TROPICAL_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIGAMO_TROPICAL_NOTENull()
            Me(Me.tableS_OPER_INJECTION.VIGAMO_TROPICAL_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMAXITROL_EYE_OITMENTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.MAXITROL_EYE_OITMENTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMAXITROL_EYE_OITMENTNull()
            Me(Me.tableS_OPER_INJECTION.MAXITROL_EYE_OITMENTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATHNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.PATHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATHNull()
            Me(Me.tableS_OPER_INJECTION.PATHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNO_COMPLICATIONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.NO_COMPLICATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNO_COMPLICATIONNull()
            Me(Me.tableS_OPER_INJECTION.NO_COMPLICATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOTENull()
            Me(Me.tableS_OPER_INJECTION.NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEON_SIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_INJECTION.SURGEON_SIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEON_SIGNATURENull()
            Me(Me.tableS_OPER_INJECTION.SURGEON_SIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_OPER_GENERAL_OPERATIVERow
        Inherits Global.System.Data.DataRow
        
        Private tableS_OPER_GENERAL_OPERATIVE As S_OPER_GENERAL_OPERATIVEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_OPER_GENERAL_OPERATIVE = CType(Me.Table,S_OPER_GENERAL_OPERATIVEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GENERAL_ID() As Decimal
            Get
                Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.GENERAL_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.GENERAL_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OPERA_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.OPERA_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERA_NO' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.OPERA_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NO' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NAME' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_SEX' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_AGE' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property START_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.START_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'START_TIME' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.START_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.SURGEONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.SURGEONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCRUB() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.SCRUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRUB' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.SCRUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIRCULATING() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.CIRCULATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCULATING' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.CIRCULATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANESTHESIONLOGIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.ANESTHESIONLOGISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANESTHESIONLOGIST' in table 'S_OPER_GENERAL_OPERATIVE' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.ANESTHESIONLOGISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_GA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_GAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_GA' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_NEURO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_NEUROColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_NEURO' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_NEUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_STANDBY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_STANDBYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_STANDBY' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_STANDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_RETROBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_RETROBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_RETROBULBAR' in table 'S_OPER_GENERAL_OPERATIVE' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_RETROBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_PERIBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_PERIBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_PERIBULBAR' in table 'S_OPER_GENERAL_OPERATIVE' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_PERIBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_TOPICAL' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_SUBCONJUNCTIVAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_SUBCONJUNCTIVALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_SUBCONJUNCTIVAL' in table 'S_OPER_GENERAL_OPERATIVE' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_SUBCONJUNCTIVALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTHER_PROCEDURES() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.OTHER_PROCEDURESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_PROCEDURES' in table 'S_OPER_GENERAL_OPERATIVE' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.OTHER_PROCEDURESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_GENTAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_GENTALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_GENTAL' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_GENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_CEFAZOLIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_CEFAZOLINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_CEFAZOLIN' in table 'S_OPER_GENERAL_OPERATIVE' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_CEFAZOLINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_DEXAMETHASONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_DEXAMETHASONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_DEXAMETHASONE' in table 'S_OPER_GENERAL_OPERATIVE' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_DEXAMETHASONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_OTHER' in table 'S_OPER_GENERAL_OPERATIVE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_MAXITRAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_MAXITRALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_MAXITRAL' in table 'S_OPER_GENERAL_OPERATIVE' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_MAXITRALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_PILOCARPINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_PILOCARPINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_PILOCARPINE' in table 'S_OPER_GENERAL_OPERATIVE' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_PILOCARPINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_ATROPINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_ATROPINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_ATROPINE' in table 'S_OPER_GENERAL_OPERATIVE' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_ATROPINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_OTHER' in table 'S_OPER_GENERAL_OPERATIVE' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON_SIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_GENERAL_OPERATIVE.SURGEON_SIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON_SIGNATURE' in table 'S_OPER_GENERAL_OPERATIVE' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_GENERAL_OPERATIVE.SURGEON_SIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property View_OTRegistrationRow() As View_OTRegistrationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("GENERAL_OPERATIVE")),View_OTRegistrationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("GENERAL_OPERATIVE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOPERA_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.OPERA_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOPERA_NONull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.OPERA_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NONull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NAMENull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_SEXNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_AGENull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.PATIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTART_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.START_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTART_TIMENull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.SURGEONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEONNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.SURGEONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCRUBNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.SCRUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCRUBNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.SCRUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIRCULATINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.CIRCULATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIRCULATINGNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.CIRCULATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANESTHESIONLOGISTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.ANESTHESIONLOGISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANESTHESIONLOGISTNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.ANESTHESIONLOGISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_GANull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_GANull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_NEURONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_NEUROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_NEURONull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_NEUROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_STANDBYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_STANDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_STANDBYNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_STANDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_RETROBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_RETROBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_RETROBULBARNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_RETROBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_PERIBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_PERIBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_PERIBULBARNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_PERIBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_TOPICALNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_SUBCONJUNCTIVALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_SUBCONJUNCTIVALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_SUBCONJUNCTIVALNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.S_AN_SUBCONJUNCTIVALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTHER_PROCEDURESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.OTHER_PROCEDURESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTHER_PROCEDURESNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.OTHER_PROCEDURESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_GENTALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_GENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_GENTALNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_GENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_CEFAZOLINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_CEFAZOLINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_CEFAZOLINNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_CEFAZOLINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_DEXAMETHASONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_DEXAMETHASONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_DEXAMETHASONENull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_DEXAMETHASONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_OTHERNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.SUB_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_MAXITRALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_MAXITRALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_MAXITRALNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_MAXITRALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_PILOCARPINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_PILOCARPINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_PILOCARPINENull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_PILOCARPINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_ATROPINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_ATROPINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_ATROPINENull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_ATROPINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_OTHERNull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.TOPICAL_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEON_SIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_GENERAL_OPERATIVE.SURGEON_SIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEON_SIGNATURENull()
            Me(Me.tableS_OPER_GENERAL_OPERATIVE.SURGEON_SIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_OPER_PHACOEMULSIFICATIONRow
        Inherits Global.System.Data.DataRow
        
        Private tableS_OPER_PHACOEMULSIFICATION As S_OPER_PHACOEMULSIFICATIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_OPER_PHACOEMULSIFICATION = CType(Me.Table,S_OPER_PHACOEMULSIFICATIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHACOEMULSIF_ID() As Decimal
            Get
                Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACOEMULSIF_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACOEMULSIF_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OPERA_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.OPERA_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERA_NO' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.OPERA_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NO' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NAME' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_SEX' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_AGE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property START_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.START_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'START_TIME' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.START_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SURGEONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SURGEONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCRUB() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SCRUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRUB' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SCRUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIRCULATING() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.CIRCULATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCULATING' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.CIRCULATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANESTHESIONLOGIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.ANESTHESIONLOGISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANESTHESIONLOGIST' in table 'S_OPER_PHACOEMULSIFICATION' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.ANESTHESIONLOGISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_GA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_GAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_GA' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_NEURO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_NEUROColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_NEURO' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_NEUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_STANDBY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_STANDBYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_STANDBY' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_STANDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_RETROBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_RETROBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_RETROBULBAR' in table 'S_OPER_PHACOEMULSIFICATION' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_RETROBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_PERIBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_PERIBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_PERIBULBAR' in table 'S_OPER_PHACOEMULSIFICATION' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_PERIBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_TOPICAL' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_HEALON_GV() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_HEALON_GVColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_HEALON_GV' in table 'S_OPER_PHACOEMULSIFICATION' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_HEALON_GVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_IALF() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_IALFColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_IALF' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_IALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_VISSOAT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_VISSOATColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_VISSOAT' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_VISSOATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_DUOVISE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_DUOVISEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_DUOVISE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_DUOVISEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_HEALON5() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_HEALON5Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_HEALON5' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_HEALON5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_OPHTHALINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_OPHTHALINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_OPHTHALINE' in table 'S_OPER_PHACOEMULSIFICATION' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_OPHTHALINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_PROVISE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_PROVISEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_PROVISE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_PROVISEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BSS_PLUS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.BSS_PLUSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BSS_PLUS' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.BSS_PLUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property POWER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.POWERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'POWER' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.POWERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FLOW_RATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.FLOW_RATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FLOW_RATE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.FLOW_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VAC() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.VACColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VAC' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.VACColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHACO_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHACO_TIME' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IA_FLOW_RATE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_FLOW_RATEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IA_FLOW_RATE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_FLOW_RATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IA_VAC() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_VACColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IA_VAC' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_VACColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NOT_DONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.NOT_DONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOT_DONE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.NOT_DONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.DONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DONE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.DONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DONE_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.DONE_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DONE_NOTE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.DONE_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CORNEAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.CORNEALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CORNEAL' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.CORNEALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLERAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SCLERALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLERAL' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SCLERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FINAL_SIZE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.FINAL_SIZEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINAL_SIZE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.FINAL_SIZEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FINAL_SIZE_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.FINAL_SIZE_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FINAL_SIZE_NOTE' in table 'S_OPER_PHACOEMULSIFICATION' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.FINAL_SIZE_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAPSULORHEXIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULORHEXISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPSULORHEXIS' in table 'S_OPER_PHACOEMULSIFICATION' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULORHEXISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HEYDRODISSECTION_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.HEYDRODISSECTION_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HEYDRODISSECTION_YES' in table 'S_OPER_PHACOEMULSIFICATION'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.HEYDRODISSECTION_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property HEYDRODISSECTION_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.HEYDRODISSECTION_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'HEYDRODISSECTION_NO' in table 'S_OPER_PHACOEMULSIFICATION' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.HEYDRODISSECTION_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHACO_DIVIDE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_DIVIDEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHACO_DIVIDE' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_DIVIDEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHACO_CHOP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_CHOPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHACO_CHOP' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_CHOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHACO_STOP_CHOP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_STOP_CHOPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHACO_STOP_CHOP' in table 'S_OPER_PHACOEMULSIFICATION' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_STOP_CHOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHACO_SCULPTING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_SCULPTINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHACO_SCULPTING' in table 'S_OPER_PHACOEMULSIFICATION' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_SCULPTINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHACO_CRACKING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_CRACKINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHACO_CRACKING' in table 'S_OPER_PHACOEMULSIFICATION' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_CRACKINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PHACO_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PHACO_OTHERS' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IA_TIP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_TIPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IA_TIP' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_TIPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IA_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IA_OTHER' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAPSULAR_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULAR_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPSULAR_YES' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULAR_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAPSULAR_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULAR_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPSULAR_NO' in table 'S_OPER_PHACOEMULSIFICATION' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULAR_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_YES' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_NO' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_IN_CAPSULAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_CAPSULARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_IN_CAPSULAR' in table 'S_OPER_PHACOEMULSIFICATION' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_CAPSULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_IN_SULCUS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_SULCUSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_IN_SULCUS' in table 'S_OPER_PHACOEMULSIFICATION' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_SULCUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_IN_AC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_ACColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_IN_AC' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_ACColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUTURE_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUTURE_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUTURE_YES' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUTURE_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUTURE_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUTURE_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUTURE_NO' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUTURE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_GENTAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_GENTALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_GENTAL' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_GENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_CEFAZOLIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_CEFAZOLINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_CEFAZOLIN' in table 'S_OPER_PHACOEMULSIFICATION' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_CEFAZOLINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_DEXAMETHASONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_DEXAMETHASONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_DEXAMETHASONE' in table 'S_OPER_PHACOEMULSIFICATION' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_DEXAMETHASONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_OTHERS' in table 'S_OPER_PHACOEMULSIFICATION' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_PILOCARPINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_PILOCARPINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_PILOCARPINE' in table 'S_OPER_PHACOEMULSIFICATION' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_PILOCARPINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_MAXITROL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_MAXITROLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_MAXITROL' in table 'S_OPER_PHACOEMULSIFICATION' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_MAXITROLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_OTHERS' in table 'S_OPER_PHACOEMULSIFICATION' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPLICATION_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLICATION_YES' in table 'S_OPER_PHACOEMULSIFICATION' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPLICATION_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLICATION_NO' in table 'S_OPER_PHACOEMULSIFICATION' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COMPLICATION_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPLICATION_NOTE' in table 'S_OPER_PHACOEMULSIFICATION' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTHER_PRO_ANTERIOR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_ANTERIORColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_PRO_ANTERIOR' in table 'S_OPER_PHACOEMULSIFICATION' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTHER_PRO_PI() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_PIColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_PRO_PI' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_PIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTHER_PRO_AT() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_ATColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_PRO_AT' in table 'S_OPER_PHACOEMULSIFICATION' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_ATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON_SIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PHACOEMULSIFICATION.SURGEON_SIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON_SIGNATURE' in table 'S_OPER_PHACOEMULSIFICATION' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PHACOEMULSIFICATION.SURGEON_SIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property View_OTRegistrationRow() As View_OTRegistrationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Oper_Phacoemul")),View_OTRegistrationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Oper_Phacoemul"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOPERA_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.OPERA_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOPERA_NONull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.OPERA_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NONull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NAMENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_SEXNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_AGENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PATIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTART_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.START_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTART_TIMENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SURGEONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEONNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SURGEONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCRUBNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SCRUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCRUBNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SCRUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIRCULATINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.CIRCULATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIRCULATINGNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.CIRCULATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANESTHESIONLOGISTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.ANESTHESIONLOGISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANESTHESIONLOGISTNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.ANESTHESIONLOGISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_GANull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_GANull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_NEURONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_NEUROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_NEURONull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_NEUROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_STANDBYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_STANDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_STANDBYNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_STANDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_RETROBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_RETROBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_RETROBULBARNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_RETROBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_PERIBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_PERIBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_PERIBULBARNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_PERIBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_TOPICALNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.S_AN_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_HEALON_GVNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_HEALON_GVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_HEALON_GVNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_HEALON_GVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_IALFNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_IALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_IALFNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_IALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_VISSOATNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_VISSOATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_VISSOATNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_VISSOATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_DUOVISENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_DUOVISEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_DUOVISENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_DUOVISEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_HEALON5Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_HEALON5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_HEALON5Null()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_HEALON5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_OPHTHALINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_OPHTHALINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_OPHTHALINENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_OPHTHALINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_PROVISENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_PROVISEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_PROVISENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.VIS_PROVISEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBSS_PLUSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.BSS_PLUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBSS_PLUSNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.BSS_PLUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPOWERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.POWERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPOWERNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.POWERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFLOW_RATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.FLOW_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFLOW_RATENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.FLOW_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVACNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.VACColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVACNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.VACColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHACO_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHACO_TIMENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIA_FLOW_RATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IA_FLOW_RATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIA_FLOW_RATENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_FLOW_RATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIA_VACNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IA_VACColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIA_VACNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_VACColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNOT_DONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.NOT_DONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNOT_DONENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.NOT_DONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.DONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDONENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.DONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDONE_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.DONE_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDONE_NOTENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.DONE_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCORNEALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.CORNEALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCORNEALNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.CORNEALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLERALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SCLERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLERALNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SCLERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFINAL_SIZENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.FINAL_SIZEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFINAL_SIZENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.FINAL_SIZEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFINAL_SIZE_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.FINAL_SIZE_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFINAL_SIZE_NOTENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.FINAL_SIZE_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAPSULORHEXISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULORHEXISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAPSULORHEXISNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULORHEXISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHEYDRODISSECTION_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.HEYDRODISSECTION_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHEYDRODISSECTION_YESNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.HEYDRODISSECTION_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsHEYDRODISSECTION_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.HEYDRODISSECTION_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetHEYDRODISSECTION_NONull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.HEYDRODISSECTION_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHACO_DIVIDENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_DIVIDEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHACO_DIVIDENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_DIVIDEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHACO_CHOPNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_CHOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHACO_CHOPNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_CHOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHACO_STOP_CHOPNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_STOP_CHOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHACO_STOP_CHOPNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_STOP_CHOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHACO_SCULPTINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_SCULPTINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHACO_SCULPTINGNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_SCULPTINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHACO_CRACKINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_CRACKINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHACO_CRACKINGNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_CRACKINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPHACO_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPHACO_OTHERSNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.PHACO_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIA_TIPNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IA_TIPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIA_TIPNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_TIPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIA_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IA_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIA_OTHERNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IA_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAPSULAR_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULAR_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAPSULAR_YESNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULAR_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAPSULAR_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULAR_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAPSULAR_NONull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.CAPSULAR_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_YESNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_NONull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_IN_CAPSULARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_CAPSULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_IN_CAPSULARNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_CAPSULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_IN_SULCUSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_SULCUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_IN_SULCUSNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_SULCUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_IN_ACNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_ACColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_IN_ACNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.IOL_IN_ACColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUTURE_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SUTURE_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUTURE_YESNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUTURE_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUTURE_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SUTURE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUTURE_NONull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUTURE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_GENTALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_GENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_GENTALNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_GENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_CEFAZOLINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_CEFAZOLINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_CEFAZOLINNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_CEFAZOLINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_DEXAMETHASONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_DEXAMETHASONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_DEXAMETHASONENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_DEXAMETHASONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_OTHERSNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SUB_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_PILOCARPINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_PILOCARPINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_PILOCARPINENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_PILOCARPINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_MAXITROLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_MAXITROLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_MAXITROLNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_MAXITROLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_OTHERSNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.TOPICAL_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOMPLICATION_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOMPLICATION_YESNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOMPLICATION_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOMPLICATION_NONull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOMPLICATION_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOMPLICATION_NOTENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.COMPLICATION_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTHER_PRO_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTHER_PRO_ANTERIORNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTHER_PRO_PINull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_PIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTHER_PRO_PINull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_PIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTHER_PRO_ATNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_ATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTHER_PRO_ATNull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.OTHER_PRO_ATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEON_SIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PHACOEMULSIFICATION.SURGEON_SIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEON_SIGNATURENull()
            Me(Me.tableS_OPER_PHACOEMULSIFICATION.SURGEON_SIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_OPERA_ECCERow
        Inherits Global.System.Data.DataRow
        
        Private tableS_OPERA_ECCE As S_OPERA_ECCEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_OPERA_ECCE = CType(Me.Table,S_OPERA_ECCEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ECCE_ID() As Decimal
            Get
                Return CType(Me(Me.tableS_OPERA_ECCE.ECCE_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.ECCE_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OPERA_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.OPERA_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERA_NO' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.OPERA_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.PATIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NO' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.PATIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.PATIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NAME' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.PATIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.PATIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_SEX' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.PATIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.PATIENT_AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_AGE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.PATIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property START_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.START_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'START_TIME' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.START_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LEFT_EYE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.LEFT_EYEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEFT_EYE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.LEFT_EYEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RIGHT_EYE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.RIGHT_EYEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIGHT_EYE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.RIGHT_EYEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SURGEONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SURGEONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCRUB() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SCRUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRUB' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SCRUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIRCULATING() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CIRCULATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCULATING' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CIRCULATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANESTHESIONLOGIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.ANESTHESIONLOGISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANESTHESIONLOGIST' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.ANESTHESIONLOGISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_GA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.S_AN_GAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_GA' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.S_AN_GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_NEURO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.S_AN_NEUROColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_NEURO' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.S_AN_NEUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_STANDBY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.S_AN_STANDBYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_STANDBY' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.S_AN_STANDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_RETROBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.S_AN_RETROBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_RETROBULBAR' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.S_AN_RETROBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_PERIBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.S_AN_PERIBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_PERIBULBAR' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.S_AN_PERIBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.S_AN_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_TOPICAL' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.S_AN_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_HEALON_GV() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.VIS_HEALON_GVColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_HEALON_GV' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.VIS_HEALON_GVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_IALF() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.VIS_IALFColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_IALF' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.VIS_IALFColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_VISSOAT() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.VIS_VISSOATColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_VISSOAT' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.VIS_VISSOATColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_DUOVISE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.VIS_DUOVISEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_DUOVISE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.VIS_DUOVISEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_HEALON5() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.VIS_HEALON5Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_HEALON5' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.VIS_HEALON5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_OPHTHALINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.VIS_OPHTHALINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_OPHTHALINE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.VIS_OPHTHALINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VIS_PROVISE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.VIS_PROVISEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIS_PROVISE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.VIS_PROVISEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BSS_PLUS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.BSS_PLUSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BSS_PLUS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.BSS_PLUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BSS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.BSSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BSS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.BSSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERITO_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.PERITO_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERITO_YES' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.PERITO_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERITO_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.PERITO_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERITO_NO' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.PERITO_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CARTERY_MILD() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CARTERY_MILDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARTERY_MILD' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CARTERY_MILDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CARTERY_MODERATE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CARTERY_MODERATEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CARTERY_MODERATE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CARTERY_MODERATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAUTERY_EXTENSIVE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CAUTERY_EXTENSIVEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAUTERY_EXTENSIVE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CAUTERY_EXTENSIVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INCISION_SITE_CORNEOSCLERAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.INCISION_SITE_CORNEOSCLERALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INCISION_SITE_CORNEOSCLERAL' in table 'S_OPERA_ECCE' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.INCISION_SITE_CORNEOSCLERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INCISION_SITE_SCLERAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.INCISION_SITE_SCLERALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INCISION_SITE_SCLERAL' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.INCISION_SITE_SCLERALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INCISION_SIZE_SUPERRIOR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIORColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INCISION_SIZE_SUPERRIOR' in table 'S_OPERA_ECCE' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INCISION_SIZE_SUPERRIOR_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIOR_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INCISION_SIZE_SUPERRIOR_NOTE' in table 'S_OPERA_ECCE' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIOR_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INCISION_SIZE_SUPERRIOR_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIOR_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INCISION_SIZE_SUPERRIOR_OTHER' in table 'S_OPERA_ECCE' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIOR_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAPSULOTOMY_CYSTOTOMY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CAPSULOTOMY_CYSTOTOMYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPSULOTOMY_CYSTOTOMY' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CAPSULOTOMY_CYSTOTOMYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAPSULOTOMY_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CAPSULOTOMY_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPSULOTOMY_OTHERS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CAPSULOTOMY_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUCLEUS_EXPRESSION() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.NUCLEUS_EXPRESSIONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUCLEUS_EXPRESSION' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.NUCLEUS_EXPRESSIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUCLEUS_LENSLOOP() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.NUCLEUS_LENSLOOPColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUCLEUS_LENSLOOP' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.NUCLEUS_LENSLOOPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NUCLEUS_VISCO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.NUCLEUS_VISCOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUCLEUS_VISCO' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.NUCLEUS_VISCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CORTEX_SIMCO_IA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CORTEX_SIMCO_IAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CORTEX_SIMCO_IA' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CORTEX_SIMCO_IAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAPSULE_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CAPSULE_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPSULE_YES' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CAPSULE_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAPSULE_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.CAPSULE_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAPSULE_NO' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.CAPSULE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_IN_CAPSULAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.IOL_IN_CAPSULARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_IN_CAPSULAR' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.IOL_IN_CAPSULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_IN_SULCUS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.IOL_IN_SULCUSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_IN_SULCUS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.IOL_IN_SULCUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IOL_IN_AC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.IOL_IN_ACColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IOL_IN_AC' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.IOL_IN_ACColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUTURE_NYLON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SUTURE_NYLONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUTURE_NYLON' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SUTURE_NYLONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUTURE_NYLON_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SUTURE_NYLON_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUTURE_NYLON_NOTE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SUTURE_NYLON_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUTURE_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SUTURE_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUTURE_OTHERS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SUTURE_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUN_GENTAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SUBCONJUN_GENTALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUN_GENTAL' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SUBCONJUN_GENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUN_CEFAZOLIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SUBCONJUN_CEFAZOLINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUN_CEFAZOLIN' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SUBCONJUN_CEFAZOLINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUN_DEXAMETHASONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SUBCONJUN_DEXAMETHASONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUN_DEXAMETHASONE' in table 'S_OPERA_ECCE' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SUBCONJUN_DEXAMETHASONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUN_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SUBCONJUN_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUN_OTHERS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SUBCONJUN_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_PILOCARPINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.TOPICAL_PILOCARPINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_PILOCARPINE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.TOPICAL_PILOCARPINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_MAXITROL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.TOPICAL_MAXITROLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_MAXITROL' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.TOPICAL_MAXITROLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.TOPICAL_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_OTHERS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.TOPICAL_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXTRA_IRRIDECTOMY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.EXTRA_IRRIDECTOMYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRA_IRRIDECTOMY' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.EXTRA_IRRIDECTOMYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXTRA_LOCATION() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.EXTRA_LOCATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRA_LOCATION' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.EXTRA_LOCATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXTRA_CAPSULAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.EXTRA_CAPSULARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRA_CAPSULAR' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.EXTRA_CAPSULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXTRA_VITREOS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.EXTRA_VITREOSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRA_VITREOS' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.EXTRA_VITREOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXTRA_ANTERIOR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.EXTRA_ANTERIORColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRA_ANTERIOR' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.EXTRA_ANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXTRA_AC_HEMORRHAGE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.EXTRA_AC_HEMORRHAGEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRA_AC_HEMORRHAGE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.EXTRA_AC_HEMORRHAGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXTRA_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.EXTRA_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRA_OTHER' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.EXTRA_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON_SIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPERA_ECCE.SURGEON_SIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON_SIGNATURE' in table 'S_OPERA_ECCE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPERA_ECCE.SURGEON_SIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property View_OTRegistrationRow() As View_OTRegistrationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("Oper_ECCE")),View_OTRegistrationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("Oper_ECCE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableS_OPERA_ECCE.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOPERA_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.OPERA_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOPERA_NONull()
            Me(Me.tableS_OPERA_ECCE.OPERA_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.PATIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NONull()
            Me(Me.tableS_OPERA_ECCE.PATIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.PATIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NAMENull()
            Me(Me.tableS_OPERA_ECCE.PATIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.PATIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_SEXNull()
            Me(Me.tableS_OPERA_ECCE.PATIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.PATIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_AGENull()
            Me(Me.tableS_OPERA_ECCE.PATIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTART_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.START_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTART_TIMENull()
            Me(Me.tableS_OPERA_ECCE.START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLEFT_EYENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.LEFT_EYEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLEFT_EYENull()
            Me(Me.tableS_OPERA_ECCE.LEFT_EYEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRIGHT_EYENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.RIGHT_EYEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRIGHT_EYENull()
            Me(Me.tableS_OPERA_ECCE.RIGHT_EYEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SURGEONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEONNull()
            Me(Me.tableS_OPERA_ECCE.SURGEONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCRUBNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SCRUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCRUBNull()
            Me(Me.tableS_OPERA_ECCE.SCRUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIRCULATINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CIRCULATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIRCULATINGNull()
            Me(Me.tableS_OPERA_ECCE.CIRCULATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANESTHESIONLOGISTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.ANESTHESIONLOGISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANESTHESIONLOGISTNull()
            Me(Me.tableS_OPERA_ECCE.ANESTHESIONLOGISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableS_OPERA_ECCE.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_GANull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.S_AN_GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_GANull()
            Me(Me.tableS_OPERA_ECCE.S_AN_GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_NEURONull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.S_AN_NEUROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_NEURONull()
            Me(Me.tableS_OPERA_ECCE.S_AN_NEUROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_STANDBYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.S_AN_STANDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_STANDBYNull()
            Me(Me.tableS_OPERA_ECCE.S_AN_STANDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_RETROBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.S_AN_RETROBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_RETROBULBARNull()
            Me(Me.tableS_OPERA_ECCE.S_AN_RETROBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_PERIBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.S_AN_PERIBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_PERIBULBARNull()
            Me(Me.tableS_OPERA_ECCE.S_AN_PERIBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.S_AN_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_TOPICALNull()
            Me(Me.tableS_OPERA_ECCE.S_AN_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_HEALON_GVNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.VIS_HEALON_GVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_HEALON_GVNull()
            Me(Me.tableS_OPERA_ECCE.VIS_HEALON_GVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_IALFNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.VIS_IALFColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_IALFNull()
            Me(Me.tableS_OPERA_ECCE.VIS_IALFColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_VISSOATNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.VIS_VISSOATColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_VISSOATNull()
            Me(Me.tableS_OPERA_ECCE.VIS_VISSOATColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_DUOVISENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.VIS_DUOVISEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_DUOVISENull()
            Me(Me.tableS_OPERA_ECCE.VIS_DUOVISEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_HEALON5Null() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.VIS_HEALON5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_HEALON5Null()
            Me(Me.tableS_OPERA_ECCE.VIS_HEALON5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_OPHTHALINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.VIS_OPHTHALINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_OPHTHALINENull()
            Me(Me.tableS_OPERA_ECCE.VIS_OPHTHALINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVIS_PROVISENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.VIS_PROVISEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVIS_PROVISENull()
            Me(Me.tableS_OPERA_ECCE.VIS_PROVISEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBSS_PLUSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.BSS_PLUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBSS_PLUSNull()
            Me(Me.tableS_OPERA_ECCE.BSS_PLUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBSSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.BSSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBSSNull()
            Me(Me.tableS_OPERA_ECCE.BSSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERITO_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.PERITO_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERITO_YESNull()
            Me(Me.tableS_OPERA_ECCE.PERITO_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERITO_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.PERITO_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERITO_NONull()
            Me(Me.tableS_OPERA_ECCE.PERITO_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCARTERY_MILDNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CARTERY_MILDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCARTERY_MILDNull()
            Me(Me.tableS_OPERA_ECCE.CARTERY_MILDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCARTERY_MODERATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CARTERY_MODERATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCARTERY_MODERATENull()
            Me(Me.tableS_OPERA_ECCE.CARTERY_MODERATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAUTERY_EXTENSIVENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CAUTERY_EXTENSIVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAUTERY_EXTENSIVENull()
            Me(Me.tableS_OPERA_ECCE.CAUTERY_EXTENSIVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINCISION_SITE_CORNEOSCLERALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.INCISION_SITE_CORNEOSCLERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINCISION_SITE_CORNEOSCLERALNull()
            Me(Me.tableS_OPERA_ECCE.INCISION_SITE_CORNEOSCLERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINCISION_SITE_SCLERALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.INCISION_SITE_SCLERALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINCISION_SITE_SCLERALNull()
            Me(Me.tableS_OPERA_ECCE.INCISION_SITE_SCLERALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINCISION_SIZE_SUPERRIORNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINCISION_SIZE_SUPERRIORNull()
            Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINCISION_SIZE_SUPERRIOR_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIOR_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINCISION_SIZE_SUPERRIOR_NOTENull()
            Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIOR_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINCISION_SIZE_SUPERRIOR_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIOR_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINCISION_SIZE_SUPERRIOR_OTHERNull()
            Me(Me.tableS_OPERA_ECCE.INCISION_SIZE_SUPERRIOR_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAPSULOTOMY_CYSTOTOMYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CAPSULOTOMY_CYSTOTOMYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAPSULOTOMY_CYSTOTOMYNull()
            Me(Me.tableS_OPERA_ECCE.CAPSULOTOMY_CYSTOTOMYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAPSULOTOMY_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CAPSULOTOMY_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAPSULOTOMY_OTHERSNull()
            Me(Me.tableS_OPERA_ECCE.CAPSULOTOMY_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNUCLEUS_EXPRESSIONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.NUCLEUS_EXPRESSIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNUCLEUS_EXPRESSIONNull()
            Me(Me.tableS_OPERA_ECCE.NUCLEUS_EXPRESSIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNUCLEUS_LENSLOOPNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.NUCLEUS_LENSLOOPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNUCLEUS_LENSLOOPNull()
            Me(Me.tableS_OPERA_ECCE.NUCLEUS_LENSLOOPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNUCLEUS_VISCONull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.NUCLEUS_VISCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNUCLEUS_VISCONull()
            Me(Me.tableS_OPERA_ECCE.NUCLEUS_VISCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCORTEX_SIMCO_IANull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CORTEX_SIMCO_IAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCORTEX_SIMCO_IANull()
            Me(Me.tableS_OPERA_ECCE.CORTEX_SIMCO_IAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAPSULE_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CAPSULE_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAPSULE_YESNull()
            Me(Me.tableS_OPERA_ECCE.CAPSULE_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAPSULE_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.CAPSULE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAPSULE_NONull()
            Me(Me.tableS_OPERA_ECCE.CAPSULE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_IN_CAPSULARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.IOL_IN_CAPSULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_IN_CAPSULARNull()
            Me(Me.tableS_OPERA_ECCE.IOL_IN_CAPSULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_IN_SULCUSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.IOL_IN_SULCUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_IN_SULCUSNull()
            Me(Me.tableS_OPERA_ECCE.IOL_IN_SULCUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIOL_IN_ACNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.IOL_IN_ACColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIOL_IN_ACNull()
            Me(Me.tableS_OPERA_ECCE.IOL_IN_ACColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUTURE_NYLONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SUTURE_NYLONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUTURE_NYLONNull()
            Me(Me.tableS_OPERA_ECCE.SUTURE_NYLONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUTURE_NYLON_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SUTURE_NYLON_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUTURE_NYLON_NOTENull()
            Me(Me.tableS_OPERA_ECCE.SUTURE_NYLON_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUTURE_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SUTURE_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUTURE_OTHERSNull()
            Me(Me.tableS_OPERA_ECCE.SUTURE_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUN_GENTALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SUBCONJUN_GENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUN_GENTALNull()
            Me(Me.tableS_OPERA_ECCE.SUBCONJUN_GENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUN_CEFAZOLINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SUBCONJUN_CEFAZOLINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUN_CEFAZOLINNull()
            Me(Me.tableS_OPERA_ECCE.SUBCONJUN_CEFAZOLINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUN_DEXAMETHASONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SUBCONJUN_DEXAMETHASONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUN_DEXAMETHASONENull()
            Me(Me.tableS_OPERA_ECCE.SUBCONJUN_DEXAMETHASONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUN_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SUBCONJUN_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUN_OTHERSNull()
            Me(Me.tableS_OPERA_ECCE.SUBCONJUN_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_PILOCARPINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.TOPICAL_PILOCARPINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_PILOCARPINENull()
            Me(Me.tableS_OPERA_ECCE.TOPICAL_PILOCARPINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_MAXITROLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.TOPICAL_MAXITROLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_MAXITROLNull()
            Me(Me.tableS_OPERA_ECCE.TOPICAL_MAXITROLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.TOPICAL_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_OTHERSNull()
            Me(Me.tableS_OPERA_ECCE.TOPICAL_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXTRA_IRRIDECTOMYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.EXTRA_IRRIDECTOMYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXTRA_IRRIDECTOMYNull()
            Me(Me.tableS_OPERA_ECCE.EXTRA_IRRIDECTOMYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXTRA_LOCATIONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.EXTRA_LOCATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXTRA_LOCATIONNull()
            Me(Me.tableS_OPERA_ECCE.EXTRA_LOCATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXTRA_CAPSULARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.EXTRA_CAPSULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXTRA_CAPSULARNull()
            Me(Me.tableS_OPERA_ECCE.EXTRA_CAPSULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXTRA_VITREOSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.EXTRA_VITREOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXTRA_VITREOSNull()
            Me(Me.tableS_OPERA_ECCE.EXTRA_VITREOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXTRA_ANTERIORNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.EXTRA_ANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXTRA_ANTERIORNull()
            Me(Me.tableS_OPERA_ECCE.EXTRA_ANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXTRA_AC_HEMORRHAGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.EXTRA_AC_HEMORRHAGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXTRA_AC_HEMORRHAGENull()
            Me(Me.tableS_OPERA_ECCE.EXTRA_AC_HEMORRHAGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXTRA_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.EXTRA_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXTRA_OTHERNull()
            Me(Me.tableS_OPERA_ECCE.EXTRA_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEON_SIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableS_OPERA_ECCE.SURGEON_SIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEON_SIGNATURENull()
            Me(Me.tableS_OPERA_ECCE.SURGEON_SIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_OPER_PAR_PLANA_VITRECTOMYRow
        Inherits Global.System.Data.DataRow
        
        Private tableS_OPER_PAR_PLANA_VITRECTOMY As S_OPER_PAR_PLANA_VITRECTOMYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_OPER_PAR_PLANA_VITRECTOMY = CType(Me.Table,S_OPER_PAR_PLANA_VITRECTOMYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PA_PLANA_ID() As Decimal
            Get
                Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PA_PLANA_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PA_PLANA_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OPERA_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.OPERA_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERA_NO' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.OPERA_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NO' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NAME' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_SEX' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_AGE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property START_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.START_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'START_TIME' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.START_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCRUB() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCRUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRUB' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCRUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIRCULATING() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CIRCULATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCULATING' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CIRCULATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANESTHESIONLOGIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ANESTHESIONLOGISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANESTHESIONLOGIST' in table 'S_OPER_PAR_PLANA_VITRECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ANESTHESIONLOGISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_GA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_GAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_GA' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_NEURO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_NEUROColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_NEURO' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_NEUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_STANDBY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_STANDBYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_STANDBY' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_STANDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_RETROBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_RETROBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_RETROBULBAR' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_RETROBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_PERIBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_PERIBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_PERIBULBAR' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_PERIBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_TOPICAL' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERITOMY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERITOMYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERITOMY' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERITOMYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLEROTOMISE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMISEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLEROTOMISE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMISEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLEROTOMISE_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMISE_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLEROTOMISE_NOTE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMISE_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INFUSION_SIZE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.INFUSION_SIZEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFUSION_SIZE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.INFUSION_SIZEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INFUSION_SIZE_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.INFUSION_SIZE_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INFUSION_SIZE_NOTE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.INFUSION_SIZE_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CORE_VITRECTOMY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CORE_VITRECTOMY' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CORE_VITRECTOMY_NOTE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMY_NOTE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CORE_VITRECTOMY_NOTE1' in table 'S_OPER_PAR_PLANA_VITRECTOM"& _ 
                            "Y' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMY_NOTE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CORE_VITRECTOMY_NOTE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMY_NOTE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CORE_VITRECTOMY_NOTE2' in table 'S_OPER_PAR_PLANA_VITRECTOM"& _ 
                            "Y' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMY_NOTE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERIPHERAL_VITRECTORMY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERIPHERAL_VITRECTORMYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERIPHERAL_VITRECTORMY' in table 'S_OPER_PAR_PLANA_VITRECTO"& _ 
                            "MY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERIPHERAL_VITRECTORMYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MEMBRANCE_PEELING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.MEMBRANCE_PEELINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEMBRANCE_PEELING' in table 'S_OPER_PAR_PLANA_VITRECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.MEMBRANCE_PEELINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PERFLUOCARBON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERFLUOCARBONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PERFLUOCARBON' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERFLUOCARBONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ENDO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENDO' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ENDO_LASER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_LASERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENDO_LASER' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_LASERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ENDO_MW() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_MWColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENDO_MW' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_MWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ENDO_SHOTS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_SHOTSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENDO_SHOTS' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_SHOTSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RETINOCRYOPEXY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.RETINOCRYOPEXYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RETINOCRYOPEXY' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.RETINOCRYOPEXYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property AIR_FLUID_EXCHANGE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.AIR_FLUID_EXCHANGEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AIR_FLUID_EXCHANGE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.AIR_FLUID_EXCHANGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GAS_EXCHANGE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.GAS_EXCHANGEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GAS_EXCHANGE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.GAS_EXCHANGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SF6() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SF6Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SF6' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SF6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C6F8() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.C6F8Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C6F8' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.C6F8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property C6F8_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.C6F8_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'C6F8_NOTE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.C6F8_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLERAL_BUCHING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLERAL_BUCHINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLERAL_BUCHING' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLERAL_BUCHINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SILICONE_OIL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SILICONE_OILColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SILICONE_OIL' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SILICONE_OILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PAR_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PAR_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAR_NOTE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PAR_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLEROTOMY_VICRYL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMY_VICRYLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLEROTOMY_VICRYL' in table 'S_OPER_PAR_PLANA_VITRECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMY_VICRYLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLEROLOMY_NYLON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROLOMY_NYLONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLEROLOMY_NYLON' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROLOMY_NYLONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLEROLOMY_DEXON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROLOMY_DEXONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLEROLOMY_DEXON' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROLOMY_DEXONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNTIVAL_NYLON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CONJUNTIVAL_NYLONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNTIVAL_NYLON' in table 'S_OPER_PAR_PLANA_VITRECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CONJUNTIVAL_NYLONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNTIVAL_VICRYL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CONJUNTIVAL_VICRYLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNTIVAL_VICRYL' in table 'S_OPER_PAR_PLANA_VITRECTOMY' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CONJUNTIVAL_VICRYLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_GENTAL2MG() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_GENTAL2MGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_GENTAL2MG' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_GENTAL2MGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_CEFAZOLIN50MG() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_CEFAZOLIN50MGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_CEFAZOLIN50MG' in table 'S_OPER_PAR_PLANA_VITRECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_CEFAZOLIN50MGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_DEXAMETHASONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_DEXAMETHASONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_DEXAMETHASONE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_DEXAMETHASONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_OTHERS' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_MAXITROL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_MAXITROLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_MAXITROL' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_MAXITROLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_PILOCARPINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_PILOCARPINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_PILOCARPINE' in table 'S_OPER_PAR_PLANA_VITRECTOMY'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_PILOCARPINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_ATROPINE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_ATROPINEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_ATROPINE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_ATROPINEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_ALPHAGAN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_ALPHAGANColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_ALPHAGAN' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_ALPHAGANColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_VIGAMOX() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_VIGAMOXColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_VIGAMOX' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_VIGAMOXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_OTHERS' in table 'S_OPER_PAR_PLANA_VITRECTOMY' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON_SIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SURGEON_SIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON_SIGNATURE' in table 'S_OPER_PAR_PLANA_VITRECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SURGEON_SIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property View_OTRegistrationRow() As View_OTRegistrationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("OperParPlana")),View_OTRegistrationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("OperParPlana"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOPERA_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.OPERA_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOPERA_NONull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.OPERA_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NONull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NAMENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_SEXNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_AGENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PATIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTART_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.START_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTART_TIMENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCRUBNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCRUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCRUBNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCRUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIRCULATINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CIRCULATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIRCULATINGNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CIRCULATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANESTHESIONLOGISTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ANESTHESIONLOGISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANESTHESIONLOGISTNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ANESTHESIONLOGISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_GANull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_GANull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_NEURONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_NEUROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_NEURONull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_NEUROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_STANDBYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_STANDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_STANDBYNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_STANDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_RETROBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_RETROBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_RETROBULBARNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_RETROBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_PERIBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_PERIBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_PERIBULBARNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_PERIBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_TOPICALNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.S_AN_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERITOMYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERITOMYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERITOMYNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERITOMYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLEROTOMISENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMISEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLEROTOMISENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMISEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLEROTOMISE_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMISE_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLEROTOMISE_NOTENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMISE_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINFUSION_SIZENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.INFUSION_SIZEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINFUSION_SIZENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.INFUSION_SIZEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINFUSION_SIZE_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.INFUSION_SIZE_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINFUSION_SIZE_NOTENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.INFUSION_SIZE_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCORE_VITRECTOMYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCORE_VITRECTOMYNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCORE_VITRECTOMY_NOTE1Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMY_NOTE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCORE_VITRECTOMY_NOTE1Null()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMY_NOTE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCORE_VITRECTOMY_NOTE2Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMY_NOTE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCORE_VITRECTOMY_NOTE2Null()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CORE_VITRECTOMY_NOTE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERIPHERAL_VITRECTORMYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERIPHERAL_VITRECTORMYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERIPHERAL_VITRECTORMYNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERIPHERAL_VITRECTORMYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMEMBRANCE_PEELINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.MEMBRANCE_PEELINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMEMBRANCE_PEELINGNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.MEMBRANCE_PEELINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPERFLUOCARBONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERFLUOCARBONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPERFLUOCARBONNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PERFLUOCARBONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsENDONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetENDONull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsENDO_LASERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_LASERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetENDO_LASERNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_LASERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsENDO_MWNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_MWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetENDO_MWNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_MWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsENDO_SHOTSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_SHOTSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetENDO_SHOTSNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.ENDO_SHOTSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRETINOCRYOPEXYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.RETINOCRYOPEXYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRETINOCRYOPEXYNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.RETINOCRYOPEXYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsAIR_FLUID_EXCHANGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.AIR_FLUID_EXCHANGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetAIR_FLUID_EXCHANGENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.AIR_FLUID_EXCHANGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGAS_EXCHANGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.GAS_EXCHANGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGAS_EXCHANGENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.GAS_EXCHANGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSF6Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SF6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSF6Null()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SF6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC6F8Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.C6F8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC6F8Null()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.C6F8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsC6F8_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.C6F8_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetC6F8_NOTENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.C6F8_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLERAL_BUCHINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLERAL_BUCHINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLERAL_BUCHINGNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLERAL_BUCHINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSILICONE_OILNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SILICONE_OILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSILICONE_OILNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SILICONE_OILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPAR_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PAR_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPAR_NOTENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.PAR_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLEROTOMY_VICRYLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMY_VICRYLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLEROTOMY_VICRYLNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROTOMY_VICRYLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLEROLOMY_NYLONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROLOMY_NYLONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLEROLOMY_NYLONNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROLOMY_NYLONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLEROLOMY_DEXONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROLOMY_DEXONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLEROLOMY_DEXONNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SCLEROLOMY_DEXONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNTIVAL_NYLONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CONJUNTIVAL_NYLONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNTIVAL_NYLONNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CONJUNTIVAL_NYLONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNTIVAL_VICRYLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CONJUNTIVAL_VICRYLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNTIVAL_VICRYLNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.CONJUNTIVAL_VICRYLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_GENTAL2MGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_GENTAL2MGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_GENTAL2MGNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_GENTAL2MGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_CEFAZOLIN50MGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_CEFAZOLIN50MGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_CEFAZOLIN50MGNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_CEFAZOLIN50MGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_DEXAMETHASONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_DEXAMETHASONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_DEXAMETHASONENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_DEXAMETHASONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_OTHERSNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SUB_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_MAXITROLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_MAXITROLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_MAXITROLNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_MAXITROLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_PILOCARPINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_PILOCARPINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_PILOCARPINENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_PILOCARPINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_ATROPINENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_ATROPINEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_ATROPINENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_ATROPINEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_ALPHAGANNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_ALPHAGANColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_ALPHAGANNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_ALPHAGANColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_VIGAMOXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_VIGAMOXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_VIGAMOXNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_VIGAMOXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_OTHERSNull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.TOPICAL_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEON_SIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SURGEON_SIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEON_SIGNATURENull()
            Me(Me.tableS_OPER_PAR_PLANA_VITRECTOMY.SURGEON_SIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_OPER_TRABECULECTOMYRow
        Inherits Global.System.Data.DataRow
        
        Private tableS_OPER_TRABECULECTOMY As S_OPER_TRABECULECTOMYDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_OPER_TRABECULECTOMY = CType(Me.Table,S_OPER_TRABECULECTOMYDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRABECULECTIOMY_ID() As Decimal
            Get
                Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTIOMY_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTIOMY_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OPERA_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.OPERA_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERA_NO' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.OPERA_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NO' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NAME' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_SEX' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_AGE' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property START_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.START_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'START_TIME' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.START_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SURGEONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SURGEONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCRUB() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SCRUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRUB' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SCRUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIRCULATING() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CIRCULATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCULATING' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CIRCULATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANESTHESIONLOGIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.ANESTHESIONLOGISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANESTHESIONLOGIST' in table 'S_OPER_TRABECULECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.ANESTHESIONLOGISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RIGHT_EYE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.RIGHT_EYEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIGHT_EYE' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.RIGHT_EYEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LEFT_EYE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.LEFT_EYEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEFT_EYE' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.LEFT_EYEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_GA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_GAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_GA' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_NEURO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_NEUROColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_NEURO' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_NEUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_STANDBY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_STANDBYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_STANDBY' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_STANDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_RETROBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_RETROBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_RETROBULBAR' in table 'S_OPER_TRABECULECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_RETROBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_PERIBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_PERIBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_PERIBULBAR' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_PERIBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_TOPICAL' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_SUBCONJUNCTIVAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_SUBCONJUNCTIVALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_SUBCONJUNCTIVAL' in table 'S_OPER_TRABECULECTOMY' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_SUBCONJUNCTIVALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVA_LIMBAL_BASE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVA_LIMBAL_BASEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVA_LIMBAL_BASE' in table 'S_OPER_TRABECULECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVA_LIMBAL_BASEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_FORNIX_BASE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_FORNIX_BASEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_FORNIX_BASE' in table 'S_OPER_TRABECULECTOMY' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_FORNIX_BASEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNC_NOTE_FROM() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNC_NOTE_FROMColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNC_NOTE_FROM' in table 'S_OPER_TRABECULECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNC_NOTE_FROMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNC_NOTE_TO() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNC_NOTE_TOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNC_NOTE_TO' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNC_NOTE_TOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAPE1() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE1Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHAPE1' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAPE2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHAPE2' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SHAPE_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SHAPE_OTHER' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIZE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SIZE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIZE1' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SIZE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIZE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SIZE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIZE2' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SIZE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property THICKNESS13() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS13Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'THICKNESS13' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property THICKNESS12() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS12Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'THICKNESS12' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property THICKNESS23() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS23Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'THICKNESS23' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS23Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property THICKNESS_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'THICKNESS_OTHER' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LOCATION() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.LOCATIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LOCATION' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.LOCATIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADJUNCTIVE_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUNCTIVE_NO' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADJUNCTIVE_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUNCTIVE_YES' in table 'S_OPER_TRABECULECTOMY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADJUNCTIVE_MMC() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_MMCColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUNCTIVE_MMC' in table 'S_OPER_TRABECULECTOMY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_MMCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADJUNCTIVE_MMC_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_MMC_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUNCTIVE_MMC_NOTE' in table 'S_OPER_TRABECULECTOMY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_MMC_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADJUNCTIVE_5FU() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_5FUColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUNCTIVE_5FU' in table 'S_OPER_TRABECULECTOMY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_5FUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ADJUNCTIVE_5FU_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_5FU_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ADJUNCTIVE_5FU_NOTE' in table 'S_OPER_TRABECULECTOMY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_5FU_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property INTRABLE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.INTRABLEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTRABLE' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.INTRABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SOAKED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SOAKEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOAKED' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SOAKEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SOAKED_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SOAKED_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SOAKED_NOTE' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SOAKED_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRRIGATION_NO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_NOColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRRIGATION_NO' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRRIGATION_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRRIGATION_YES' in table 'S_OPER_TRABECULECTOMY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRRIGATION_WITH() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_WITHColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRRIGATION_WITH' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_WITHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRRIGATION_NOT_DONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_NOT_DONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRRIGATION_NOT_DONE' in table 'S_OPER_TRABECULECTOMY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_NOT_DONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRRIGATION_DONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_DONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRRIGATION_DONE' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_DONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRRIGATION_DONE_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_DONE_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRRIGATION_DONE_NOTE' in table 'S_OPER_TRABECULECTOMY' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_DONE_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PARACENTESIS_NOTE_DONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_NOTE_DONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARACENTESIS_NOTE_DONE' in table 'S_OPER_TRABECULECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_NOTE_DONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PARACENTESIS_DONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_DONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARACENTESIS_DONE' in table 'S_OPER_TRABECULECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_DONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PARACENTESIS_DONE_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_DONE_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PARACENTESIS_DONE_NOTE' in table 'S_OPER_TRABECULECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_DONE_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRABECULECTOMY1() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTOMY1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRABECULECTOMY1' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTOMY1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TRABECULECTOMY2() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTOMY2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRABECULECTOMY2' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTOMY2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRIDECTOMY_NOT_DONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_NOT_DONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRIDECTOMY_NOT_DONE' in table 'S_OPER_TRABECULECTOMY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_NOT_DONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRIDECTOMY_DONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_DONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRIDECTOMY_DONE' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_DONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IRIDECTOMY_DONE_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_DONE_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IRIDECTOMY_DONE_NOTE' in table 'S_OPER_TRABECULECTOMY' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_DONE_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLERAL_NOTE_NO() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_NOTE_NOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLERAL_NOTE_NO' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_NOTE_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLERAL_100NYLON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_100NYLONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLERAL_100NYLON' in table 'S_OPER_TRABECULECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_100NYLONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLERAL_100PROLENE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_100PROLENEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLERAL_100PROLENE' in table 'S_OPER_TRABECULECTOMY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_100PROLENEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLERAL_RELEASABLE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_RELEASABLEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLERAL_RELEASABLE' in table 'S_OPER_TRABECULECTOMY' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_RELEASABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCLERAL_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCLERAL_NOTE' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_CONTINUOS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_CONTINUOSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_CONTINUOS' in table 'S_OPER_TRABECULECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_CONTINUOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_INTERRUPTED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_INTERRUPTEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_INTERRUPTED' in table 'S_OPER_TRABECULECTOMY' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_INTERRUPTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_INTERRUPTED_NOTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_INTERRUPTED_NOTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_INTERRUPTED_NOTE' in table 'S_OPER_TRABECULECT"& _ 
                            "OMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_INTERRUPTED_NOTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_100NYLON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_100NYLONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_100NYLON' in table 'S_OPER_TRABECULECTOMY' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_100NYLONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_100PROLENE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_100PROLENEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_100PROLENE' in table 'S_OPER_TRABECULECTOMY' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_100PROLENEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_OTHERS' in table 'S_OPER_TRABECULECTOMY' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COPLICATION_NONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.COPLICATION_NONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COPLICATION_NONE' in table 'S_OPER_TRABECULECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.COPLICATION_NONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property COPLICATION_YES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.COPLICATION_YESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COPLICATION_YES' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.COPLICATION_YESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OTHER_PROCEDURES() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.OTHER_PROCEDURESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTHER_PROCEDURES' in table 'S_OPER_TRABECULECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.OTHER_PROCEDURESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_GENTAL2MG() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SUB_GENTAL2MGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_GENTAL2MG' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SUB_GENTAL2MGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_CEFAZOLIN50MG() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SUB_CEFAZOLIN50MGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_CEFAZOLIN50MG' in table 'S_OPER_TRABECULECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SUB_CEFAZOLIN50MGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_DEXAMETHASONE_25MG() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SUB_DEXAMETHASONE_25MGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_DEXAMETHASONE_25MG' in table 'S_OPER_TRABECULECTOMY' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SUB_DEXAMETHASONE_25MGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUB_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SUB_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUB_OTHER' in table 'S_OPER_TRABECULECTOMY' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SUB_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_MAXITROL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_MAXITROLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_MAXITROL' in table 'S_OPER_TRABECULECTOMY' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_MAXITROLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_PILOCARPINE2() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_PILOCARPINE2Column),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_PILOCARPINE2' in table 'S_OPER_TRABECULECTOMY' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_PILOCARPINE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_VIGAMOX() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_VIGAMOXColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_VIGAMOX' in table 'S_OPER_TRABECULECTOMY' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_VIGAMOXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_OTHERS' in table 'S_OPER_TRABECULECTOMY' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON_SIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_TRABECULECTOMY.SURGEON_SIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON_SIGNATURE' in table 'S_OPER_TRABECULECTOMY' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_TRABECULECTOMY.SURGEON_SIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property View_OTRegistrationRow() As View_OTRegistrationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("S_OPER_TRABECULECTOMY")),View_OTRegistrationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("S_OPER_TRABECULECTOMY"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOPERA_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.OPERA_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOPERA_NONull()
            Me(Me.tableS_OPER_TRABECULECTOMY.OPERA_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.PATIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NONull()
            Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.PATIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NAMENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.PATIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_SEXNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.PATIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_AGENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.PATIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTART_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.START_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTART_TIMENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SURGEONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEONNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SURGEONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCRUBNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SCRUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCRUBNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SCRUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIRCULATINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CIRCULATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIRCULATINGNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CIRCULATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANESTHESIONLOGISTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.ANESTHESIONLOGISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANESTHESIONLOGISTNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.ANESTHESIONLOGISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRIGHT_EYENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.RIGHT_EYEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRIGHT_EYENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.RIGHT_EYEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLEFT_EYENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.LEFT_EYEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLEFT_EYENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.LEFT_EYEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_GANull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.S_AN_GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_GANull()
            Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_NEURONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.S_AN_NEUROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_NEURONull()
            Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_NEUROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_STANDBYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.S_AN_STANDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_STANDBYNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_STANDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_RETROBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.S_AN_RETROBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_RETROBULBARNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_RETROBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_PERIBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.S_AN_PERIBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_PERIBULBARNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_PERIBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.S_AN_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_TOPICALNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_SUBCONJUNCTIVALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.S_AN_SUBCONJUNCTIVALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_SUBCONJUNCTIVALNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.S_AN_SUBCONJUNCTIVALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVA_LIMBAL_BASENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVA_LIMBAL_BASEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVA_LIMBAL_BASENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVA_LIMBAL_BASEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_FORNIX_BASENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_FORNIX_BASEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_FORNIX_BASENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_FORNIX_BASEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNC_NOTE_FROMNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNC_NOTE_FROMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNC_NOTE_FROMNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNC_NOTE_FROMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNC_NOTE_TONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNC_NOTE_TOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNC_NOTE_TONull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNC_NOTE_TOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSHAPE1Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SHAPE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSHAPE1Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSHAPE2Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SHAPE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSHAPE2Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSHAPE_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SHAPE_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSHAPE_OTHERNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SHAPE_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIZE1Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SIZE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIZE1Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.SIZE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIZE2Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SIZE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIZE2Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.SIZE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTHICKNESS13Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.THICKNESS13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTHICKNESS13Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTHICKNESS12Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.THICKNESS12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTHICKNESS12Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTHICKNESS23Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.THICKNESS23Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTHICKNESS23Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS23Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTHICKNESS_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.THICKNESS_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTHICKNESS_OTHERNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.THICKNESS_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLOCATIONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.LOCATIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLOCATIONNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.LOCATIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADJUNCTIVE_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADJUNCTIVE_NONull()
            Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADJUNCTIVE_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADJUNCTIVE_YESNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADJUNCTIVE_MMCNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_MMCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADJUNCTIVE_MMCNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_MMCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADJUNCTIVE_MMC_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_MMC_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADJUNCTIVE_MMC_NOTENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_MMC_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADJUNCTIVE_5FUNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_5FUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADJUNCTIVE_5FUNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_5FUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsADJUNCTIVE_5FU_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_5FU_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetADJUNCTIVE_5FU_NOTENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.ADJUNCTIVE_5FU_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsINTRABLENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.INTRABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetINTRABLENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.INTRABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSOAKEDNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SOAKEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSOAKEDNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SOAKEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSOAKED_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SOAKED_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSOAKED_NOTENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SOAKED_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRRIGATION_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRRIGATION_NONull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRRIGATION_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRRIGATION_YESNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRRIGATION_WITHNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_WITHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRRIGATION_WITHNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_WITHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRRIGATION_NOT_DONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_NOT_DONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRRIGATION_NOT_DONENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_NOT_DONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRRIGATION_DONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_DONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRRIGATION_DONENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_DONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRRIGATION_DONE_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_DONE_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRRIGATION_DONE_NOTENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRRIGATION_DONE_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPARACENTESIS_NOTE_DONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_NOTE_DONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPARACENTESIS_NOTE_DONENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_NOTE_DONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPARACENTESIS_DONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_DONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPARACENTESIS_DONENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_DONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPARACENTESIS_DONE_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_DONE_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPARACENTESIS_DONE_NOTENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.PARACENTESIS_DONE_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTRABECULECTOMY1Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTOMY1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTRABECULECTOMY1Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTOMY1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTRABECULECTOMY2Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTOMY2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTRABECULECTOMY2Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.TRABECULECTOMY2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRIDECTOMY_NOT_DONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_NOT_DONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRIDECTOMY_NOT_DONENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_NOT_DONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRIDECTOMY_DONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_DONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRIDECTOMY_DONENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_DONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIRIDECTOMY_DONE_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_DONE_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIRIDECTOMY_DONE_NOTENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.IRIDECTOMY_DONE_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLERAL_NOTE_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_NOTE_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLERAL_NOTE_NONull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_NOTE_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLERAL_100NYLONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_100NYLONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLERAL_100NYLONNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_100NYLONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLERAL_100PROLENENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_100PROLENEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLERAL_100PROLENENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_100PROLENEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLERAL_RELEASABLENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_RELEASABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLERAL_RELEASABLENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_RELEASABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCLERAL_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCLERAL_NOTENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SCLERAL_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_CONTINUOSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_CONTINUOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_CONTINUOSNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_CONTINUOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_INTERRUPTEDNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_INTERRUPTEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_INTERRUPTEDNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_INTERRUPTEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_INTERRUPTED_NOTENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_INTERRUPTED_NOTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_INTERRUPTED_NOTENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_INTERRUPTED_NOTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_100NYLONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_100NYLONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_100NYLONNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_100NYLONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_100PROLENENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_100PROLENEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_100PROLENENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_100PROLENEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_OTHERSNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.CONJUNCTIVAL_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOPLICATION_NONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.COPLICATION_NONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOPLICATION_NONENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.COPLICATION_NONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCOPLICATION_YESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.COPLICATION_YESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCOPLICATION_YESNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.COPLICATION_YESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOTHER_PROCEDURESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.OTHER_PROCEDURESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOTHER_PROCEDURESNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.OTHER_PROCEDURESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_GENTAL2MGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SUB_GENTAL2MGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_GENTAL2MGNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SUB_GENTAL2MGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_CEFAZOLIN50MGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SUB_CEFAZOLIN50MGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_CEFAZOLIN50MGNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SUB_CEFAZOLIN50MGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_DEXAMETHASONE_25MGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SUB_DEXAMETHASONE_25MGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_DEXAMETHASONE_25MGNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SUB_DEXAMETHASONE_25MGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUB_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SUB_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUB_OTHERNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SUB_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_MAXITROLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_MAXITROLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_MAXITROLNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_MAXITROLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_PILOCARPINE2Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_PILOCARPINE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_PILOCARPINE2Null()
            Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_PILOCARPINE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_VIGAMOXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_VIGAMOXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_VIGAMOXNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_VIGAMOXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_OTHERSNull()
            Me(Me.tableS_OPER_TRABECULECTOMY.TOPICAL_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEON_SIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_TRABECULECTOMY.SURGEON_SIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEON_SIGNATURENull()
            Me(Me.tableS_OPER_TRABECULECTOMY.SURGEON_SIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class S_OPER_PTERYGIUMRow
        Inherits Global.System.Data.DataRow
        
        Private tableS_OPER_PTERYGIUM As S_OPER_PTERYGIUMDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableS_OPER_PTERYGIUM = CType(Me.Table,S_OPER_PTERYGIUMDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTERYGIUM_ID() As Decimal
            Get
                Return CType(Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_IDColumn),Decimal)
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_IDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CREATE_DATE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.CREATE_DATEColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CREATE_DATE' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.CREATE_DATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property OPERA_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.OPERA_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OPERA_NO' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.OPERA_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.PATIENT_NOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NO' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PATIENT_NOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_NAME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.PATIENT_NAMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_NAME' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PATIENT_NAMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_SEX() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.PATIENT_SEXColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_SEX' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PATIENT_SEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PATIENT_AGE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.PATIENT_AGEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PATIENT_AGE' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PATIENT_AGEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property START_TIME() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.START_TIMEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'START_TIME' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.START_TIMEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SURGEONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SURGEONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SCRUB() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SCRUBColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SCRUB' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SCRUBColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CIRCULATING() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.CIRCULATINGColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CIRCULATING' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.CIRCULATINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ANESTHESIONLOGIST() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.ANESTHESIONLOGISTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANESTHESIONLOGIST' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.ANESTHESIONLOGISTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property DIAGNOSIS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.DIAGNOSISColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIAGNOSIS' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.DIAGNOSISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property RIGHT_EYE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.RIGHT_EYEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RIGHT_EYE' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.RIGHT_EYEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LEFT_EYE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.LEFT_EYEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LEFT_EYE' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.LEFT_EYEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_GA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.S_AN_GAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_GA' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.S_AN_GAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_NEURO() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.S_AN_NEUROColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_NEURO' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.S_AN_NEUROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_STANDBY() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.S_AN_STANDBYColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_STANDBY' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.S_AN_STANDBYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_RETROBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.S_AN_RETROBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_RETROBULBAR' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.S_AN_RETROBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_PERIBULBAR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.S_AN_PERIBULBARColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_PERIBULBAR' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.S_AN_PERIBULBARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_TOPICAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.S_AN_TOPICALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_TOPICAL' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.S_AN_TOPICALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property S_AN_SUBCONJUNCTIVAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.S_AN_SUBCONJUNCTIVALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'S_AN_SUBCONJUNCTIVAL' in table 'S_OPER_PTERYGIUM' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.S_AN_SUBCONJUNCTIVALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTERYGIUM_NASAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_NASALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTERYGIUM_NASAL' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_NASALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTERYGIUM_TEMPORAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_TEMPORALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTERYGIUM_TEMPORAL' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_TEMPORALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BRIDAL_SUPERIOR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_SUPERIORColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRIDAL_SUPERIOR' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_SUPERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BRIDAL_70VICRYL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_70VICRYLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRIDAL_70VICRYL' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_70VICRYLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BRIDAL_80SILK() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_80SILKColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRIDAL_80SILK' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_80SILKColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BRIDAL_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BRIDAL_OTHERS' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUNCTIVAL_XYLOCAIN_WITH() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_XYLOCAIN_WITHColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUNCTIVAL_XYLOCAIN_WITH' in table 'S_OPER_PTERYGIUM' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_XYLOCAIN_WITHColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUNCTIVAL_XYLOCAIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_XYLOCAINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUNCTIVAL_XYLOCAIN' in table 'S_OPER_PTERYGIUM' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_XYLOCAINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUNCTIVAL_NONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_NONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUNCTIVAL_NONE' in table 'S_OPER_PTERYGIUM' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_NONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTERYGIUM_SCISSORS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_SCISSORSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTERYGIUM_SCISSORS' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_SCISSORSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property PTERYGIUM_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PTERYGIUM_OTHER' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAUTERY_MILD() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_MILDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAUTERY_MILD' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_MILDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAUTERY_69BLADE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_69BLADEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAUTERY_69BLADE' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_69BLADEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAUTERY_MODRATE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_MODRATEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAUTERY_MODRATE' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_MODRATEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CAUTERY_EXTENSIVE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_EXTENSIVEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAUTERY_EXTENSIVE' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_EXTENSIVEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_SUPERIOR() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.CONJUNCTIVAL_SUPERIORColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_SUPERIOR' in table 'S_OPER_PTERYGIUM' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.CONJUNCTIVAL_SUPERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CONJUNCTIVAL_OTHER_SITE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.CONJUNCTIVAL_OTHER_SITEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONJUNCTIVAL_OTHER_SITE' in table 'S_OPER_PTERYGIUM' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.CONJUNCTIVAL_OTHER_SITEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIZE1() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SIZE1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIZE1' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SIZE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SIZE2() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SIZE2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIZE2' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SIZE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GRAFT_80VERGIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.GRAFT_80VERGINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRAFT_80VERGIN' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.GRAFT_80VERGINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GRAFT_100NYLON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.GRAFT_100NYLONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRAFT_100NYLON' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.GRAFT_100NYLONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GRAFT_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.GRAFT_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRAFT_OTHER' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.GRAFT_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GRAFT_90NYLON() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.GRAFT_90NYLONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRAFT_90NYLON' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.GRAFT_90NYLONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GRAFT_RUNNING() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.GRAFT_RUNNINGColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRAFT_RUNNING' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.GRAFT_RUNNINGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GRAFT_INTERRUPTED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.GRAFT_INTERRUPTEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRAFT_INTERRUPTED' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.GRAFT_INTERRUPTEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GRAFT_COMBINED() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.GRAFT_COMBINEDColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'GRAFT_COMBINED' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.GRAFT_COMBINEDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUNCTIVAL_GENTAL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_GENTALColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUNCTIVAL_GENTAL' in table 'S_OPER_PTERYGIUM' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_GENTALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUNCTIVAL_CEFAZOLIN() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_CEFAZOLINColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUNCTIVAL_CEFAZOLIN' in table 'S_OPER_PTERYGIUM' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_CEFAZOLINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUNCTIVAL_DEXAMETHASONE() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_DEXAMETHASONEColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUNCTIVAL_DEXAMETHASONE' in table 'S_OPER_PTERYGIUM' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_DEXAMETHASONEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SUBCONJUNCTIVAL_OTHERS() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_OTHERSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SUBCONJUNCTIVAL_OTHERS' in table 'S_OPER_PTERYGIUM' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_OTHERSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_MAXITROL() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_MAXITROLColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_MAXITROL' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_MAXITROLColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_TOBRADEX() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_TOBRADEXColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_TOBRADEX' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_TOBRADEXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TOPICAL_OTHER() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_OTHERColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOPICAL_OTHER' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_OTHERColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EXTRA_NOTES() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.EXTRA_NOTESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EXTRA_NOTES' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.EXTRA_NOTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SURGEON_SIGNATURE() As String
            Get
                Try 
                    Return CType(Me(Me.tableS_OPER_PTERYGIUM.SURGEON_SIGNATUREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SURGEON_SIGNATURE' in table 'S_OPER_PTERYGIUM' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableS_OPER_PTERYGIUM.SURGEON_SIGNATUREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property View_OTRegistrationRow() As View_OTRegistrationRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("S_OPER_PTERYGIUM")),View_OTRegistrationRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("S_OPER_PTERYGIUM"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCREATE_DATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.CREATE_DATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCREATE_DATENull()
            Me(Me.tableS_OPER_PTERYGIUM.CREATE_DATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsOPERA_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.OPERA_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetOPERA_NONull()
            Me(Me.tableS_OPER_PTERYGIUM.OPERA_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.PATIENT_NOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NONull()
            Me(Me.tableS_OPER_PTERYGIUM.PATIENT_NOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_NAMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.PATIENT_NAMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_NAMENull()
            Me(Me.tableS_OPER_PTERYGIUM.PATIENT_NAMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_SEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.PATIENT_SEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_SEXNull()
            Me(Me.tableS_OPER_PTERYGIUM.PATIENT_SEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPATIENT_AGENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.PATIENT_AGEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPATIENT_AGENull()
            Me(Me.tableS_OPER_PTERYGIUM.PATIENT_AGEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSTART_TIMENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.START_TIMEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSTART_TIMENull()
            Me(Me.tableS_OPER_PTERYGIUM.START_TIMEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SURGEONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEONNull()
            Me(Me.tableS_OPER_PTERYGIUM.SURGEONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSCRUBNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SCRUBColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSCRUBNull()
            Me(Me.tableS_OPER_PTERYGIUM.SCRUBColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCIRCULATINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.CIRCULATINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCIRCULATINGNull()
            Me(Me.tableS_OPER_PTERYGIUM.CIRCULATINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsANESTHESIONLOGISTNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.ANESTHESIONLOGISTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetANESTHESIONLOGISTNull()
            Me(Me.tableS_OPER_PTERYGIUM.ANESTHESIONLOGISTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDIAGNOSISNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.DIAGNOSISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDIAGNOSISNull()
            Me(Me.tableS_OPER_PTERYGIUM.DIAGNOSISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsRIGHT_EYENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.RIGHT_EYEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetRIGHT_EYENull()
            Me(Me.tableS_OPER_PTERYGIUM.RIGHT_EYEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLEFT_EYENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.LEFT_EYEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLEFT_EYENull()
            Me(Me.tableS_OPER_PTERYGIUM.LEFT_EYEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_GANull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.S_AN_GAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_GANull()
            Me(Me.tableS_OPER_PTERYGIUM.S_AN_GAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_NEURONull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.S_AN_NEUROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_NEURONull()
            Me(Me.tableS_OPER_PTERYGIUM.S_AN_NEUROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_STANDBYNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.S_AN_STANDBYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_STANDBYNull()
            Me(Me.tableS_OPER_PTERYGIUM.S_AN_STANDBYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_RETROBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.S_AN_RETROBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_RETROBULBARNull()
            Me(Me.tableS_OPER_PTERYGIUM.S_AN_RETROBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_PERIBULBARNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.S_AN_PERIBULBARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_PERIBULBARNull()
            Me(Me.tableS_OPER_PTERYGIUM.S_AN_PERIBULBARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_TOPICALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.S_AN_TOPICALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_TOPICALNull()
            Me(Me.tableS_OPER_PTERYGIUM.S_AN_TOPICALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsS_AN_SUBCONJUNCTIVALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.S_AN_SUBCONJUNCTIVALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetS_AN_SUBCONJUNCTIVALNull()
            Me(Me.tableS_OPER_PTERYGIUM.S_AN_SUBCONJUNCTIVALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTERYGIUM_NASALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_NASALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTERYGIUM_NASALNull()
            Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_NASALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTERYGIUM_TEMPORALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_TEMPORALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTERYGIUM_TEMPORALNull()
            Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_TEMPORALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBRIDAL_SUPERIORNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.BRIDAL_SUPERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBRIDAL_SUPERIORNull()
            Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_SUPERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBRIDAL_70VICRYLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.BRIDAL_70VICRYLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBRIDAL_70VICRYLNull()
            Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_70VICRYLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBRIDAL_80SILKNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.BRIDAL_80SILKColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBRIDAL_80SILKNull()
            Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_80SILKColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsBRIDAL_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.BRIDAL_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetBRIDAL_OTHERSNull()
            Me(Me.tableS_OPER_PTERYGIUM.BRIDAL_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUNCTIVAL_XYLOCAIN_WITHNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_XYLOCAIN_WITHColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUNCTIVAL_XYLOCAIN_WITHNull()
            Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_XYLOCAIN_WITHColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUNCTIVAL_XYLOCAINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_XYLOCAINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUNCTIVAL_XYLOCAINNull()
            Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_XYLOCAINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUNCTIVAL_NONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_NONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUNCTIVAL_NONENull()
            Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_NONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTERYGIUM_SCISSORSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_SCISSORSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTERYGIUM_SCISSORSNull()
            Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_SCISSORSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPTERYGIUM_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPTERYGIUM_OTHERNull()
            Me(Me.tableS_OPER_PTERYGIUM.PTERYGIUM_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAUTERY_MILDNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.CAUTERY_MILDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAUTERY_MILDNull()
            Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_MILDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAUTERY_69BLADENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.CAUTERY_69BLADEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAUTERY_69BLADENull()
            Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_69BLADEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAUTERY_MODRATENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.CAUTERY_MODRATEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAUTERY_MODRATENull()
            Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_MODRATEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCAUTERY_EXTENSIVENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.CAUTERY_EXTENSIVEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCAUTERY_EXTENSIVENull()
            Me(Me.tableS_OPER_PTERYGIUM.CAUTERY_EXTENSIVEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_SUPERIORNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.CONJUNCTIVAL_SUPERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_SUPERIORNull()
            Me(Me.tableS_OPER_PTERYGIUM.CONJUNCTIVAL_SUPERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCONJUNCTIVAL_OTHER_SITENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.CONJUNCTIVAL_OTHER_SITEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCONJUNCTIVAL_OTHER_SITENull()
            Me(Me.tableS_OPER_PTERYGIUM.CONJUNCTIVAL_OTHER_SITEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIZE1Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SIZE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIZE1Null()
            Me(Me.tableS_OPER_PTERYGIUM.SIZE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSIZE2Null() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SIZE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSIZE2Null()
            Me(Me.tableS_OPER_PTERYGIUM.SIZE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGRAFT_80VERGINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.GRAFT_80VERGINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGRAFT_80VERGINNull()
            Me(Me.tableS_OPER_PTERYGIUM.GRAFT_80VERGINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGRAFT_100NYLONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.GRAFT_100NYLONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGRAFT_100NYLONNull()
            Me(Me.tableS_OPER_PTERYGIUM.GRAFT_100NYLONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGRAFT_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.GRAFT_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGRAFT_OTHERNull()
            Me(Me.tableS_OPER_PTERYGIUM.GRAFT_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGRAFT_90NYLONNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.GRAFT_90NYLONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGRAFT_90NYLONNull()
            Me(Me.tableS_OPER_PTERYGIUM.GRAFT_90NYLONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGRAFT_RUNNINGNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.GRAFT_RUNNINGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGRAFT_RUNNINGNull()
            Me(Me.tableS_OPER_PTERYGIUM.GRAFT_RUNNINGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGRAFT_INTERRUPTEDNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.GRAFT_INTERRUPTEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGRAFT_INTERRUPTEDNull()
            Me(Me.tableS_OPER_PTERYGIUM.GRAFT_INTERRUPTEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGRAFT_COMBINEDNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.GRAFT_COMBINEDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGRAFT_COMBINEDNull()
            Me(Me.tableS_OPER_PTERYGIUM.GRAFT_COMBINEDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUNCTIVAL_GENTALNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_GENTALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUNCTIVAL_GENTALNull()
            Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_GENTALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUNCTIVAL_CEFAZOLINNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_CEFAZOLINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUNCTIVAL_CEFAZOLINNull()
            Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_CEFAZOLINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUNCTIVAL_DEXAMETHASONENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_DEXAMETHASONEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUNCTIVAL_DEXAMETHASONENull()
            Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_DEXAMETHASONEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSUBCONJUNCTIVAL_OTHERSNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_OTHERSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSUBCONJUNCTIVAL_OTHERSNull()
            Me(Me.tableS_OPER_PTERYGIUM.SUBCONJUNCTIVAL_OTHERSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_MAXITROLNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.TOPICAL_MAXITROLColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_MAXITROLNull()
            Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_MAXITROLColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_TOBRADEXNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.TOPICAL_TOBRADEXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_TOBRADEXNull()
            Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_TOBRADEXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTOPICAL_OTHERNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.TOPICAL_OTHERColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTOPICAL_OTHERNull()
            Me(Me.tableS_OPER_PTERYGIUM.TOPICAL_OTHERColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEXTRA_NOTESNull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.EXTRA_NOTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEXTRA_NOTESNull()
            Me(Me.tableS_OPER_PTERYGIUM.EXTRA_NOTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSURGEON_SIGNATURENull() As Boolean
            Return Me.IsNull(Me.tableS_OPER_PTERYGIUM.SURGEON_SIGNATUREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSURGEON_SIGNATURENull()
            Me(Me.tableS_OPER_PTERYGIUM.SURGEON_SIGNATUREColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_OPER_SCLERAL_BUCKLINGRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_OPER_SCLERAL_BUCKLINGRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_OPER_SCLERAL_BUCKLINGRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_OPER_SCLERAL_BUCKLINGRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TblDoctorRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TblDoctorRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TblDoctorRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TblDoctorRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class TblSurgeryRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TblSurgeryRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As TblSurgeryRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As TblSurgeryRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class View_OTRegistrationRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As View_OTRegistrationRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As View_OTRegistrationRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As View_OTRegistrationRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_OPER_INJECTIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_OPER_INJECTIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_OPER_INJECTIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_OPER_INJECTIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_OPER_GENERAL_OPERATIVERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_OPER_GENERAL_OPERATIVERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_OPER_GENERAL_OPERATIVERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_OPER_GENERAL_OPERATIVERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_OPER_PHACOEMULSIFICATIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_OPER_PHACOEMULSIFICATIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_OPER_PHACOEMULSIFICATIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_OPER_PHACOEMULSIFICATIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_OPERA_ECCERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_OPERA_ECCERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_OPERA_ECCERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_OPERA_ECCERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_OPER_PAR_PLANA_VITRECTOMYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_OPER_PAR_PLANA_VITRECTOMYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_OPER_PAR_PLANA_VITRECTOMYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_OPER_PAR_PLANA_VITRECTOMYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_OPER_TRABECULECTOMYRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_OPER_TRABECULECTOMYRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_OPER_TRABECULECTOMYRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_OPER_TRABECULECTOMYRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class S_OPER_PTERYGIUMRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As S_OPER_PTERYGIUMRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As S_OPER_PTERYGIUMRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As S_OPER_PTERYGIUMRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSOPERATIONNOTETableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_OPER_SCLERAL_BUCKLINGTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_OPER_SCLERAL_BUCKLING"
            tableMapping.ColumnMappings.Add("SCLERAL_ID", "SCLERAL_ID")
            tableMapping.ColumnMappings.Add("OPERA_NO", "OPERA_NO")
            tableMapping.ColumnMappings.Add("RIGHT_EYE", "RIGHT_EYE")
            tableMapping.ColumnMappings.Add("LEFT_EYE", "LEFT_EYE")
            tableMapping.ColumnMappings.Add("START_TIME", "START_TIME")
            tableMapping.ColumnMappings.Add("SCRUB", "SCRUB")
            tableMapping.ColumnMappings.Add("CIRCULATING", "CIRCULATING")
            tableMapping.ColumnMappings.Add("ANESTHESIONLOGIST", "ANESTHESIONLOGIST")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("S_PERITOMY360", "S_PERITOMY360")
            tableMapping.ColumnMappings.Add("S_RECTUS_MUSCLES", "S_RECTUS_MUSCLES")
            tableMapping.ColumnMappings.Add("S_AN_GA", "S_AN_GA")
            tableMapping.ColumnMappings.Add("S_AN_NEURO", "S_AN_NEURO")
            tableMapping.ColumnMappings.Add("S_AN_STANDBY", "S_AN_STANDBY")
            tableMapping.ColumnMappings.Add("S_AN_RETROBULBAR", "S_AN_RETROBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_PERIBULBAR", "S_AN_PERIBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_TOPICAL", "S_AN_TOPICAL")
            tableMapping.ColumnMappings.Add("S_EX_GA", "S_EX_GA")
            tableMapping.ColumnMappings.Add("S_EX_RETROBULBAR", "S_EX_RETROBULBAR")
            tableMapping.ColumnMappings.Add("S_EX_TOPICAL", "S_EX_TOPICAL")
            tableMapping.ColumnMappings.Add("S_NOTE", "S_NOTE")
            tableMapping.ColumnMappings.Add("S_INTRAVITREAL", "S_INTRAVITREAL")
            tableMapping.ColumnMappings.Add("S_OTHER_PROCEDURES", "S_OTHER_PROCEDURES")
            tableMapping.ColumnMappings.Add("S_CON_8VICRYL", "S_CON_8VICRYL")
            tableMapping.ColumnMappings.Add("S_CON_10NYLON", "S_CON_10NYLON")
            tableMapping.ColumnMappings.Add("S_CON_OTHERS", "S_CON_OTHERS")
            tableMapping.ColumnMappings.Add("S_SUB_GENTAMICIN", "S_SUB_GENTAMICIN")
            tableMapping.ColumnMappings.Add("S_SUB_CEFAZOLIN", "S_SUB_CEFAZOLIN")
            tableMapping.ColumnMappings.Add("S_SUB_DEXAMETHASONE", "S_SUB_DEXAMETHASONE")
            tableMapping.ColumnMappings.Add("S_SUB_OTHERS", "S_SUB_OTHERS")
            tableMapping.ColumnMappings.Add("S_TOP_MAXITROL", "S_TOP_MAXITROL")
            tableMapping.ColumnMappings.Add("S_TOP_PILOCARPINE", "S_TOP_PILOCARPINE")
            tableMapping.ColumnMappings.Add("S_TOP_ATROPINE", "S_TOP_ATROPINE")
            tableMapping.ColumnMappings.Add("S_TOP_OTHERS", "S_TOP_OTHERS")
            tableMapping.ColumnMappings.Add("S_SUGEON_NAME", "S_SUGEON_NAME")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("SURGEON", "SURGEON")
            tableMapping.ColumnMappings.Add("PATIENT_NO", "PATIENT_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NAME", "PATIENT_NAME")
            tableMapping.ColumnMappings.Add("PATIENT_SEX", "PATIENT_SEX")
            tableMapping.ColumnMappings.Add("PATIENT_AGE", "PATIENT_AGE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [S_OPER_SCLERAL_BUCKLING] WHERE (([SCLERAL_ID] = @Original_SCLERAL_ID"& _ 
                ") AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL) OR ([OPERA_NO] = @Original_"& _ 
                "OPERA_NO)) AND ((@IsNull_RIGHT_EYE = 1 AND [RIGHT_EYE] IS NULL) OR ([RIGHT_EYE] "& _ 
                "= @Original_RIGHT_EYE)) AND ((@IsNull_LEFT_EYE = 1 AND [LEFT_EYE] IS NULL) OR (["& _ 
                "LEFT_EYE] = @Original_LEFT_EYE)) AND ((@IsNull_START_TIME = 1 AND [START_TIME] I"& _ 
                "S NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_SCRUB = 1 AND [S"& _ 
                "CRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_CIRCULATING = 1 AND"& _ 
                " [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCULATING)) AND ((@IsNul"& _ 
                "l_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ([ANESTHESIONLOGIST]"& _ 
                " = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 AND [DIAGNOSIS] IS "& _ 
                "NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_S_PERITOMY360 = 1 AN"& _ 
                "D [S_PERITOMY360] IS NULL) OR ([S_PERITOMY360] = @Original_S_PERITOMY360)) AND ("& _ 
                "(@IsNull_S_RECTUS_MUSCLES = 1 AND [S_RECTUS_MUSCLES] IS NULL) OR ([S_RECTUS_MUSC"& _ 
                "LES] = @Original_S_RECTUS_MUSCLES)) AND ((@IsNull_S_AN_GA = 1 AND [S_AN_GA] IS N"& _ 
                "ULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AND ((@IsNull_S_AN_NEURO = 1 AND [S_AN_"& _ 
                "NEURO] IS NULL) OR ([S_AN_NEURO] = @Original_S_AN_NEURO)) AND ((@IsNull_S_AN_STA"& _ 
                "NDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_AN_STANDBY] = @Original_S_AN_STANDBY"& _ 
                ")) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_AN_RETROBULBAR] IS NULL) OR ([S_AN_"& _ 
                "RETROBULBAR] = @Original_S_AN_RETROBULBAR)) AND ((@IsNull_S_AN_PERIBULBAR = 1 AN"& _ 
                "D [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBULBAR] = @Original_S_AN_PERIBULBAR))"& _ 
                " AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOPICAL] IS NULL) OR ([S_AN_TOPICAL] ="& _ 
                " @Original_S_AN_TOPICAL)) AND ((@IsNull_S_EX_GA = 1 AND [S_EX_GA] IS NULL) OR (["& _ 
                "S_EX_GA] = @Original_S_EX_GA)) AND ((@IsNull_S_EX_RETROBULBAR = 1 AND [S_EX_RETR"& _ 
                "OBULBAR] IS NULL) OR ([S_EX_RETROBULBAR] = @Original_S_EX_RETROBULBAR)) AND ((@I"& _ 
                "sNull_S_EX_TOPICAL = 1 AND [S_EX_TOPICAL] IS NULL) OR ([S_EX_TOPICAL] = @Origina"& _ 
                "l_S_EX_TOPICAL)) AND ((@IsNull_S_NOTE = 1 AND [S_NOTE] IS NULL) OR ([S_NOTE] = @"& _ 
                "Original_S_NOTE)) AND ((@IsNull_S_INTRAVITREAL = 1 AND [S_INTRAVITREAL] IS NULL)"& _ 
                " OR ([S_INTRAVITREAL] = @Original_S_INTRAVITREAL)) AND ((@IsNull_S_OTHER_PROCEDU"& _ 
                "RES = 1 AND [S_OTHER_PROCEDURES] IS NULL) OR ([S_OTHER_PROCEDURES] = @Original_S"& _ 
                "_OTHER_PROCEDURES)) AND ((@IsNull_S_CON_8VICRYL = 1 AND [S_CON_8VICRYL] IS NULL)"& _ 
                " OR ([S_CON_8VICRYL] = @Original_S_CON_8VICRYL)) AND ((@IsNull_S_CON_10NYLON = 1"& _ 
                " AND [S_CON_10NYLON] IS NULL) OR ([S_CON_10NYLON] = @Original_S_CON_10NYLON)) AN"& _ 
                "D ((@IsNull_S_CON_OTHERS = 1 AND [S_CON_OTHERS] IS NULL) OR ([S_CON_OTHERS] = @O"& _ 
                "riginal_S_CON_OTHERS)) AND ((@IsNull_S_SUB_GENTAMICIN = 1 AND [S_SUB_GENTAMICIN]"& _ 
                " IS NULL) OR ([S_SUB_GENTAMICIN] = @Original_S_SUB_GENTAMICIN)) AND ((@IsNull_S_"& _ 
                "SUB_CEFAZOLIN = 1 AND [S_SUB_CEFAZOLIN] IS NULL) OR ([S_SUB_CEFAZOLIN] = @Origin"& _ 
                "al_S_SUB_CEFAZOLIN)) AND ((@IsNull_S_SUB_DEXAMETHASONE = 1 AND [S_SUB_DEXAMETHAS"& _ 
                "ONE] IS NULL) OR ([S_SUB_DEXAMETHASONE] = @Original_S_SUB_DEXAMETHASONE)) AND (("& _ 
                "@IsNull_S_SUB_OTHERS = 1 AND [S_SUB_OTHERS] IS NULL) OR ([S_SUB_OTHERS] = @Origi"& _ 
                "nal_S_SUB_OTHERS)) AND ((@IsNull_S_TOP_MAXITROL = 1 AND [S_TOP_MAXITROL] IS NULL"& _ 
                ") OR ([S_TOP_MAXITROL] = @Original_S_TOP_MAXITROL)) AND ((@IsNull_S_TOP_PILOCARP"& _ 
                "INE = 1 AND [S_TOP_PILOCARPINE] IS NULL) OR ([S_TOP_PILOCARPINE] = @Original_S_T"& _ 
                "OP_PILOCARPINE)) AND ((@IsNull_S_TOP_ATROPINE = 1 AND [S_TOP_ATROPINE] IS NULL) "& _ 
                "OR ([S_TOP_ATROPINE] = @Original_S_TOP_ATROPINE)) AND ((@IsNull_S_TOP_OTHERS = 1"& _ 
                " AND [S_TOP_OTHERS] IS NULL) OR ([S_TOP_OTHERS] = @Original_S_TOP_OTHERS)) AND ("& _ 
                "(@IsNull_S_SUGEON_NAME = 1 AND [S_SUGEON_NAME] IS NULL) OR ([S_SUGEON_NAME] = @O"& _ 
                "riginal_S_SUGEON_NAME)) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL)"& _ 
                " OR ([CREATE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_SURGEON = 1 AND [SURG"& _ 
                "EON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ((@IsNull_PATIENT_NO = 1 A"& _ 
                "ND [PATIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull"& _ 
                "_PATIENT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PAT"& _ 
                "IENT_NAME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIEN"& _ 
                "T_SEX] = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE]"& _ 
                " IS NULL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SCLERAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_PERITOMY360", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_PERITOMY360", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_INTRAVITREAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_INTRAVITREAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_8VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_8VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_10NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_10NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_ATROPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUGEON_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUGEON_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [S_OPER_SCLERAL_BUCKLING] ([OPERA_NO], [RIGHT_EYE], [LEFT_EYE], [STAR"& _ 
                "T_TIME], [SCRUB], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_PERITOMY36"& _ 
                "0], [S_RECTUS_MUSCLES], [S_AN_GA], [S_AN_NEURO], [S_AN_STANDBY], [S_AN_RETROBULB"& _ 
                "AR], [S_AN_PERIBULBAR], [S_AN_TOPICAL], [S_EX_GA], [S_EX_RETROBULBAR], [S_EX_TOP"& _ 
                "ICAL], [S_NOTE], [S_INTRAVITREAL], [S_OTHER_PROCEDURES], [S_CON_8VICRYL], [S_CON"& _ 
                "_10NYLON], [S_CON_OTHERS], [S_SUB_GENTAMICIN], [S_SUB_CEFAZOLIN], [S_SUB_DEXAMET"& _ 
                "HASONE], [S_SUB_OTHERS], [S_TOP_MAXITROL], [S_TOP_PILOCARPINE], [S_TOP_ATROPINE]"& _ 
                ", [S_TOP_OTHERS], [S_SUGEON_NAME], [CREATE_DATE], [SURGEON], [PATIENT_NO], [PATI"& _ 
                "ENT_NAME], [PATIENT_SEX], [PATIENT_AGE]) VALUES (@OPERA_NO, @RIGHT_EYE, @LEFT_EY"& _ 
                "E, @START_TIME, @SCRUB, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_PERITOM"& _ 
                "Y360, @S_RECTUS_MUSCLES, @S_AN_GA, @S_AN_NEURO, @S_AN_STANDBY, @S_AN_RETROBULBAR"& _ 
                ", @S_AN_PERIBULBAR, @S_AN_TOPICAL, @S_EX_GA, @S_EX_RETROBULBAR, @S_EX_TOPICAL, @"& _ 
                "S_NOTE, @S_INTRAVITREAL, @S_OTHER_PROCEDURES, @S_CON_8VICRYL, @S_CON_10NYLON, @S"& _ 
                "_CON_OTHERS, @S_SUB_GENTAMICIN, @S_SUB_CEFAZOLIN, @S_SUB_DEXAMETHASONE, @S_SUB_O"& _ 
                "THERS, @S_TOP_MAXITROL, @S_TOP_PILOCARPINE, @S_TOP_ATROPINE, @S_TOP_OTHERS, @S_S"& _ 
                "UGEON_NAME, @CREATE_DATE, @SURGEON, @PATIENT_NO, @PATIENT_NAME, @PATIENT_SEX, @P"& _ 
                "ATIENT_AGE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SCLERAL_ID, OPERA_NO, RIGHT_EYE, LEFT_EYE, START_TIME, SCRU"& _ 
                "B, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_PERITOMY360, S_RECTUS_MUSCLES, S"& _ 
                "_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICA"& _ 
                "L, S_EX_GA, S_EX_RETROBULBAR, S_EX_TOPICAL, S_NOTE, S_INTRAVITREAL, S_OTHER_PROC"& _ 
                "EDURES, S_CON_8VICRYL, S_CON_10NYLON, S_CON_OTHERS, S_SUB_GENTAMICIN, S_SUB_CEFA"& _ 
                "ZOLIN, S_SUB_DEXAMETHASONE, S_SUB_OTHERS, S_TOP_MAXITROL, S_TOP_PILOCARPINE, S_T"& _ 
                "OP_ATROPINE, S_TOP_OTHERS, S_SUGEON_NAME, CREATE_DATE, SURGEON, PATIENT_NO, PATI"& _ 
                "ENT_NAME, PATIENT_SEX, PATIENT_AGE FROM S_OPER_SCLERAL_BUCKLING WHERE (SCLERAL_I"& _ 
                "D = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_PERITOMY360", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_INTRAVITREAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_8VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_10NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUGEON_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [S_OPER_SCLERAL_BUCKLING] SET [OPERA_NO] = @OPERA_NO, [RIGHT_EYE] = @RIGHT"& _ 
                "_EYE, [LEFT_EYE] = @LEFT_EYE, [START_TIME] = @START_TIME, [SCRUB] = @SCRUB, [CIR"& _ 
                "CULATING] = @CIRCULATING, [ANESTHESIONLOGIST] = @ANESTHESIONLOGIST, [DIAGNOSIS] "& _ 
                "= @DIAGNOSIS, [S_PERITOMY360] = @S_PERITOMY360, [S_RECTUS_MUSCLES] = @S_RECTUS_M"& _ 
                "USCLES, [S_AN_GA] = @S_AN_GA, [S_AN_NEURO] = @S_AN_NEURO, [S_AN_STANDBY] = @S_AN"& _ 
                "_STANDBY, [S_AN_RETROBULBAR] = @S_AN_RETROBULBAR, [S_AN_PERIBULBAR] = @S_AN_PERI"& _ 
                "BULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL, [S_EX_GA] = @S_EX_GA, [S_EX_RETROBULBAR]"& _ 
                " = @S_EX_RETROBULBAR, [S_EX_TOPICAL] = @S_EX_TOPICAL, [S_NOTE] = @S_NOTE, [S_INT"& _ 
                "RAVITREAL] = @S_INTRAVITREAL, [S_OTHER_PROCEDURES] = @S_OTHER_PROCEDURES, [S_CON"& _ 
                "_8VICRYL] = @S_CON_8VICRYL, [S_CON_10NYLON] = @S_CON_10NYLON, [S_CON_OTHERS] = @"& _ 
                "S_CON_OTHERS, [S_SUB_GENTAMICIN] = @S_SUB_GENTAMICIN, [S_SUB_CEFAZOLIN] = @S_SUB"& _ 
                "_CEFAZOLIN, [S_SUB_DEXAMETHASONE] = @S_SUB_DEXAMETHASONE, [S_SUB_OTHERS] = @S_SU"& _ 
                "B_OTHERS, [S_TOP_MAXITROL] = @S_TOP_MAXITROL, [S_TOP_PILOCARPINE] = @S_TOP_PILOC"& _ 
                "ARPINE, [S_TOP_ATROPINE] = @S_TOP_ATROPINE, [S_TOP_OTHERS] = @S_TOP_OTHERS, [S_S"& _ 
                "UGEON_NAME] = @S_SUGEON_NAME, [CREATE_DATE] = @CREATE_DATE, [SURGEON] = @SURGEON"& _ 
                ", [PATIENT_NO] = @PATIENT_NO, [PATIENT_NAME] = @PATIENT_NAME, [PATIENT_SEX] = @P"& _ 
                "ATIENT_SEX, [PATIENT_AGE] = @PATIENT_AGE WHERE (([SCLERAL_ID] = @Original_SCLERA"& _ 
                "L_ID) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL) OR ([OPERA_NO] = @Origi"& _ 
                "nal_OPERA_NO)) AND ((@IsNull_RIGHT_EYE = 1 AND [RIGHT_EYE] IS NULL) OR ([RIGHT_E"& _ 
                "YE] = @Original_RIGHT_EYE)) AND ((@IsNull_LEFT_EYE = 1 AND [LEFT_EYE] IS NULL) O"& _ 
                "R ([LEFT_EYE] = @Original_LEFT_EYE)) AND ((@IsNull_START_TIME = 1 AND [START_TIM"& _ 
                "E] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_SCRUB = 1 AN"& _ 
                "D [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_CIRCULATING = 1"& _ 
                " AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCULATING)) AND ((@I"& _ 
                "sNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ([ANESTHESIONLOG"& _ 
                "IST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 AND [DIAGNOSIS]"& _ 
                " IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_S_PERITOMY360 = "& _ 
                "1 AND [S_PERITOMY360] IS NULL) OR ([S_PERITOMY360] = @Original_S_PERITOMY360)) A"& _ 
                "ND ((@IsNull_S_RECTUS_MUSCLES = 1 AND [S_RECTUS_MUSCLES] IS NULL) OR ([S_RECTUS_"& _ 
                "MUSCLES] = @Original_S_RECTUS_MUSCLES)) AND ((@IsNull_S_AN_GA = 1 AND [S_AN_GA] "& _ 
                "IS NULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AND ((@IsNull_S_AN_NEURO = 1 AND [S"& _ 
                "_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @Original_S_AN_NEURO)) AND ((@IsNull_S_AN"& _ 
                "_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_AN_STANDBY] = @Original_S_AN_STA"& _ 
                "NDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_AN_RETROBULBAR] IS NULL) OR ([S"& _ 
                "_AN_RETROBULBAR] = @Original_S_AN_RETROBULBAR)) AND ((@IsNull_S_AN_PERIBULBAR = "& _ 
                "1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBULBAR] = @Original_S_AN_PERIBULB"& _ 
                "AR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOPICAL] IS NULL) OR ([S_AN_TOPICA"& _ 
                "L] = @Original_S_AN_TOPICAL)) AND ((@IsNull_S_EX_GA = 1 AND [S_EX_GA] IS NULL) O"& _ 
                "R ([S_EX_GA] = @Original_S_EX_GA)) AND ((@IsNull_S_EX_RETROBULBAR = 1 AND [S_EX_"& _ 
                "RETROBULBAR] IS NULL) OR ([S_EX_RETROBULBAR] = @Original_S_EX_RETROBULBAR)) AND "& _ 
                "((@IsNull_S_EX_TOPICAL = 1 AND [S_EX_TOPICAL] IS NULL) OR ([S_EX_TOPICAL] = @Ori"& _ 
                "ginal_S_EX_TOPICAL)) AND ((@IsNull_S_NOTE = 1 AND [S_NOTE] IS NULL) OR ([S_NOTE]"& _ 
                " = @Original_S_NOTE)) AND ((@IsNull_S_INTRAVITREAL = 1 AND [S_INTRAVITREAL] IS N"& _ 
                "ULL) OR ([S_INTRAVITREAL] = @Original_S_INTRAVITREAL)) AND ((@IsNull_S_OTHER_PRO"& _ 
                "CEDURES = 1 AND [S_OTHER_PROCEDURES] IS NULL) OR ([S_OTHER_PROCEDURES] = @Origin"& _ 
                "al_S_OTHER_PROCEDURES)) AND ((@IsNull_S_CON_8VICRYL = 1 AND [S_CON_8VICRYL] IS N"& _ 
                "ULL) OR ([S_CON_8VICRYL] = @Original_S_CON_8VICRYL)) AND ((@IsNull_S_CON_10NYLON"& _ 
                " = 1 AND [S_CON_10NYLON] IS NULL) OR ([S_CON_10NYLON] = @Original_S_CON_10NYLON)"& _ 
                ") AND ((@IsNull_S_CON_OTHERS = 1 AND [S_CON_OTHERS] IS NULL) OR ([S_CON_OTHERS] "& _ 
                "= @Original_S_CON_OTHERS)) AND ((@IsNull_S_SUB_GENTAMICIN = 1 AND [S_SUB_GENTAMI"& _ 
                "CIN] IS NULL) OR ([S_SUB_GENTAMICIN] = @Original_S_SUB_GENTAMICIN)) AND ((@IsNul"& _ 
                "l_S_SUB_CEFAZOLIN = 1 AND [S_SUB_CEFAZOLIN] IS NULL) OR ([S_SUB_CEFAZOLIN] = @Or"& _ 
                "iginal_S_SUB_CEFAZOLIN)) AND ((@IsNull_S_SUB_DEXAMETHASONE = 1 AND [S_SUB_DEXAME"& _ 
                "THASONE] IS NULL) OR ([S_SUB_DEXAMETHASONE] = @Original_S_SUB_DEXAMETHASONE)) AN"& _ 
                "D ((@IsNull_S_SUB_OTHERS = 1 AND [S_SUB_OTHERS] IS NULL) OR ([S_SUB_OTHERS] = @O"& _ 
                "riginal_S_SUB_OTHERS)) AND ((@IsNull_S_TOP_MAXITROL = 1 AND [S_TOP_MAXITROL] IS "& _ 
                "NULL) OR ([S_TOP_MAXITROL] = @Original_S_TOP_MAXITROL)) AND ((@IsNull_S_TOP_PILO"& _ 
                "CARPINE = 1 AND [S_TOP_PILOCARPINE] IS NULL) OR ([S_TOP_PILOCARPINE] = @Original"& _ 
                "_S_TOP_PILOCARPINE)) AND ((@IsNull_S_TOP_ATROPINE = 1 AND [S_TOP_ATROPINE] IS NU"& _ 
                "LL) OR ([S_TOP_ATROPINE] = @Original_S_TOP_ATROPINE)) AND ((@IsNull_S_TOP_OTHERS"& _ 
                " = 1 AND [S_TOP_OTHERS] IS NULL) OR ([S_TOP_OTHERS] = @Original_S_TOP_OTHERS)) A"& _ 
                "ND ((@IsNull_S_SUGEON_NAME = 1 AND [S_SUGEON_NAME] IS NULL) OR ([S_SUGEON_NAME] "& _ 
                "= @Original_S_SUGEON_NAME)) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS N"& _ 
                "ULL) OR ([CREATE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_SURGEON = 1 AND ["& _ 
                "SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ((@IsNull_PATIENT_NO ="& _ 
                " 1 AND [PATIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@Is"& _ 
                "Null_PATIENT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original"& _ 
                "_PATIENT_NAME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PA"& _ 
                "TIENT_SEX] = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_"& _ 
                "AGE] IS NULL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT SCLERAL_ID, "& _ 
                "OPERA_NO, RIGHT_EYE, LEFT_EYE, START_TIME, SCRUB, CIRCULATING, ANESTHESIONLOGIST"& _ 
                ", DIAGNOSIS, S_PERITOMY360, S_RECTUS_MUSCLES, S_AN_GA, S_AN_NEURO, S_AN_STANDBY,"& _ 
                " S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_EX_GA, S_EX_RETROBULBAR, S_E"& _ 
                "X_TOPICAL, S_NOTE, S_INTRAVITREAL, S_OTHER_PROCEDURES, S_CON_8VICRYL, S_CON_10NY"& _ 
                "LON, S_CON_OTHERS, S_SUB_GENTAMICIN, S_SUB_CEFAZOLIN, S_SUB_DEXAMETHASONE, S_SUB"& _ 
                "_OTHERS, S_TOP_MAXITROL, S_TOP_PILOCARPINE, S_TOP_ATROPINE, S_TOP_OTHERS, S_SUGE"& _ 
                "ON_NAME, CREATE_DATE, SURGEON, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AG"& _ 
                "E FROM S_OPER_SCLERAL_BUCKLING WHERE (SCLERAL_ID = @SCLERAL_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_PERITOMY360", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_INTRAVITREAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_8VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_10NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUGEON_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SCLERAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_PERITOMY360", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_PERITOMY360", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_INTRAVITREAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_INTRAVITREAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_8VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_8VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_10NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_10NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_ATROPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUGEON_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUGEON_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SCLERAL_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SCLERAL_ID, OPERA_NO, RIGHT_EYE, LEFT_EYE, START_TIME, SCRUB, CIRCU"& _ 
                "LATING, ANESTHESIONLOGIST, DIAGNOSIS, S_PERITOMY360, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "S_RECTUS_MUSCLES, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERI"& _ 
                "BULBAR, S_AN_TOPICAL, S_EX_GA, S_EX_RETROBULBAR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_EX"& _ 
                "_TOPICAL, S_NOTE, S_INTRAVITREAL, S_OTHER_PROCEDURES, S_CON_8VICRYL, S_CON_10NYL"& _ 
                "ON, S_CON_OTHERS, S_SUB_GENTAMICIN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_SUB_CEFAZOLIN, "& _ 
                "S_SUB_DEXAMETHASONE, S_SUB_OTHERS, S_TOP_MAXITROL, S_TOP_PILOCARPINE, S_TOP_ATRO"& _ 
                "PINE, S_TOP_OTHERS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_SUGEON_NAME, CREATE_DATE, SURGE"& _ 
                "ON, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            S_OPER_S"& _ 
                "CLERAL_BUCKLING"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM [dbo].[S_OPER_SCLERAL_BUCKLING] WHERE (([SCLERAL_ID] = @Original_SCLE"& _ 
                "RAL_ID)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "SCLERAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.VarBinary, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_PERITOMY360", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_PERITOMY360", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_EX_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_EX_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_INTRAVITREAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_INTRAVITREAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_8VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_8VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_10NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_10NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_CON_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_CON_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUB_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_ATROPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_TOP_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_TOP_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_SUGEON_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_SUGEON_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        SCLERAL_ID, OPERA_NO, RIGHT_EYE, LEFT_EYE, START_TIME, SCRUB, CIRCU"& _ 
                "LATING, ANESTHESIONLOGIST, DIAGNOSIS, S_PERITOMY360, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "S_RECTUS_MUSCLES, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERI"& _ 
                "BULBAR, S_AN_TOPICAL, S_EX_GA, S_EX_RETROBULBAR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_EX"& _ 
                "_TOPICAL, S_NOTE, S_INTRAVITREAL, S_OTHER_PROCEDURES, S_CON_8VICRYL, S_CON_10NYL"& _ 
                "ON, S_CON_OTHERS, S_SUB_GENTAMICIN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_SUB_CEFAZOLIN, "& _ 
                "S_SUB_DEXAMETHASONE, S_SUB_OTHERS, S_TOP_MAXITROL, S_TOP_PILOCARPINE, S_TOP_ATRO"& _ 
                "PINE, S_TOP_OTHERS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_SUGEON_NAME, CREATE_DATE, SURGE"& _ 
                "ON, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            S_OPER_S"& _ 
                "CLERAL_BUCKLING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE SCLERAL_ID=@SCLERAL_ID"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SCLERAL_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO S_OPER_SCLERAL_BUCKLING"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (OPERA_NO, RIGHT_EY"& _ 
                "E, LEFT_EYE, START_TIME, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_PER"& _ 
                "ITOMY360, S_RECTUS_MUSCLES, S_AN_GA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_AN_NEURO, S_AN"& _ 
                "_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_EX_GA, S_EX_RETROBU"& _ 
                "LBAR, S_EX_TOPICAL, S_NOTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_INTRAVITREAL, S_OTHER_P"& _ 
                "ROCEDURES, S_CON_8VICRYL, S_CON_10NYLON, S_CON_OTHERS, S_SUB_GENTAMICIN, S_SUB_C"& _ 
                "EFAZOLIN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_SUB_DEXAMETHASONE, S_SUB_OTHERS, S_TOP_MA"& _ 
                "XITROL, S_TOP_PILOCARPINE, S_TOP_ATROPINE, S_TOP_OTHERS, S_SUGEON_NAME, CREATE_D"& _ 
                "ATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SURGEON, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, "& _ 
                "PATIENT_AGE)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (@OPERA_NO,@RIGHT_EYE,@LEFT_EYE,@START_TIME,@SCRUB,@"& _ 
                "CIRCULATING,@ANESTHESIONLOGIST,@DIAGNOSIS,@S_PERITOMY360,@S_RECTUS_MUSCLES,@S_AN"& _ 
                "_GA,@S_AN_NEURO,@S_AN_STANDBY,@S_AN_RETROBULBAR,@S_AN_PERIBULBAR,@S_AN_TOPICAL,@"& _ 
                "S_EX_GA,@S_EX_RETROBULBAR,@S_EX_TOPICAL,@S_NOTE,@S_INTRAVITREAL,@S_OTHER_PROCEDU"& _ 
                "RES,@S_CON_8VICRYL,@S_CON_10NYLON,@S_CON_OTHERS,@S_SUB_GENTAMICIN,@S_SUB_CEFAZOL"& _ 
                "IN,@S_SUB_DEXAMETHASONE,@S_SUB_OTHERS,@S_TOP_MAXITROL,@S_TOP_PILOCARPINE,@S_TOP_"& _ 
                "ATROPINE,@S_TOP_OTHERS,@S_SUGEON_NAME,@CREATE_DATE,@SURGEON,@PATIENT_NO,@PATIENT"& _ 
                "_NAME,@PATIENT_SEX,@PATIENT_AGE)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_PERITOMY360", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_INTRAVITREAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_8VICRYL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_10NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_ATROPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUGEON_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE [dbo].[S_OPER_SCLERAL_BUCKLING] SET [OPERA_NO] = @OPERA_NO, [RIGHT_EYE] = "& _ 
                "@RIGHT_EYE, [LEFT_EYE] = @LEFT_EYE, [START_TIME] = @START_TIME, [SCRUB] = @SCRUB"& _ 
                ", [CIRCULATING] = @CIRCULATING, [ANESTHESIONLOGIST] = @ANESTHESIONLOGIST, [DIAGN"& _ 
                "OSIS] = @DIAGNOSIS, [S_PERITOMY360] = @S_PERITOMY360, [S_RECTUS_MUSCLES] = @S_RE"& _ 
                "CTUS_MUSCLES, [S_AN_GA] = @S_AN_GA, [S_AN_NEURO] = @S_AN_NEURO, [S_AN_STANDBY] ="& _ 
                " @S_AN_STANDBY, [S_AN_RETROBULBAR] = @S_AN_RETROBULBAR, [S_AN_PERIBULBAR] = @S_A"& _ 
                "N_PERIBULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL, [S_EX_GA] = @S_EX_GA, [S_EX_RETROB"& _ 
                "ULBAR] = @S_EX_RETROBULBAR, [S_EX_TOPICAL] = @S_EX_TOPICAL, [S_NOTE] = @S_NOTE, "& _ 
                "[S_INTRAVITREAL] = @S_INTRAVITREAL, [S_OTHER_PROCEDURES] = @S_OTHER_PROCEDURES, "& _ 
                "[S_CON_8VICRYL] = @S_CON_8VICRYL, [S_CON_10NYLON] = @S_CON_10NYLON, [S_CON_OTHER"& _ 
                "S] = @S_CON_OTHERS, [S_SUB_GENTAMICIN] = @S_SUB_GENTAMICIN, [S_SUB_CEFAZOLIN] = "& _ 
                "@S_SUB_CEFAZOLIN, [S_SUB_DEXAMETHASONE] = @S_SUB_DEXAMETHASONE, [S_SUB_OTHERS] ="& _ 
                " @S_SUB_OTHERS, [S_TOP_MAXITROL] = @S_TOP_MAXITROL, [S_TOP_PILOCARPINE] = @S_TOP"& _ 
                "_PILOCARPINE, [S_TOP_ATROPINE] = @S_TOP_ATROPINE, [S_TOP_OTHERS] = @S_TOP_OTHERS"& _ 
                ", [S_SUGEON_NAME] = @S_SUGEON_NAME WHERE ([SCLERAL_ID] = @Original_SCLERAL_ID) "
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_PERITOMY360", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_PERITOMY360", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_RECTUS_MUSCLES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_RECTUS_MUSCLES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_EX_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_EX_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_INTRAVITREAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_INTRAVITREAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_8VICRYL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_8VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_10NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_10NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_CON_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_CON_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_GENTAMICIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_GENTAMICIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_ATROPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_TOP_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "S_TOP_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_SUGEON_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "S_SUGEON_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "SCLERAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable = New DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable, ByVal SCLERAL_ID As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SCLERAL_ID,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectScleralBuckling(ByVal SCLERAL_ID As Decimal) As DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(SCLERAL_ID,Decimal)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable = New DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.S_OPER_SCLERAL_BUCKLINGDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "S_OPER_SCLERAL_BUCKLING")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_SCLERAL_ID As Decimal,  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_START_TIME() As Byte,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_NOTE As String,  _
                    ByVal Original_S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_OTHER_PROCEDURES As String,  _
                    ByVal Original_S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_CON_OTHERS As String,  _
                    ByVal Original_S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_OTHERS As String,  _
                    ByVal Original_S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_OTHERS As String,  _
                    ByVal Original_S_SUGEON_NAME As String,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_SCLERAL_ID,Decimal)
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_START_TIME,Byte())
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_PERITOMY360.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_S_PERITOMY360.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_S_RECTUS_MUSCLES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_S_RECTUS_MUSCLES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_GA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_S_EX_GA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_RETROBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_S_EX_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_S_EX_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_S_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_S_NOTE,String)
            End If
            If (Original_S_INTRAVITREAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_S_INTRAVITREAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_S_OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_S_OTHER_PROCEDURES,String)
            End If
            If (Original_S_CON_8VICRYL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_S_CON_8VICRYL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_S_CON_10NYLON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_S_CON_10NYLON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_S_CON_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_S_CON_OTHERS,String)
            End If
            If (Original_S_SUB_GENTAMICIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_S_SUB_GENTAMICIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_S_SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_S_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_S_SUB_OTHERS,String)
            End If
            If (Original_S_TOP_MAXITROL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_S_TOP_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_PILOCARPINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_S_TOP_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_ATROPINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_S_TOP_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_S_TOP_OTHERS,String)
            End If
            If (Original_S_SUGEON_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_S_SUGEON_NAME,String)
            End If
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_SURGEON,String)
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_PATIENT_AGE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal START_TIME() As Byte,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_NOTE As String,  _
                    ByVal S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_OTHER_PROCEDURES As String,  _
                    ByVal S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_OTHERS As String,  _
                    ByVal S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_OTHERS As String,  _
                    ByVal S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_OTHERS As String,  _
                    ByVal S_SUGEON_NAME As String,  _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal SURGEON As String,  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String) As Integer
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RIGHT_EYE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(START_TIME,Byte())
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DIAGNOSIS,String)
            End If
            If (S_PERITOMY360.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(S_PERITOMY360.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_RECTUS_MUSCLES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(S_RECTUS_MUSCLES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_EX_GA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(S_EX_GA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_EX_RETROBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(S_EX_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_EX_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(S_EX_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(S_NOTE,String)
            End If
            If (S_INTRAVITREAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(S_INTRAVITREAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (S_OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(S_OTHER_PROCEDURES,String)
            End If
            If (S_CON_8VICRYL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(S_CON_8VICRYL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (S_CON_10NYLON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(S_CON_10NYLON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (S_CON_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(S_CON_OTHERS,String)
            End If
            If (S_SUB_GENTAMICIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(S_SUB_GENTAMICIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(S_SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(S_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(S_SUB_OTHERS,String)
            End If
            If (S_TOP_MAXITROL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(S_TOP_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_PILOCARPINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(S_TOP_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_ATROPINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(S_TOP_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(S_TOP_OTHERS,String)
            End If
            If (S_SUGEON_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(S_SUGEON_NAME,String)
            End If
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(SURGEON,String)
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(PATIENT_AGE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal START_TIME() As Byte,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_NOTE As String,  _
                    ByVal S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_OTHER_PROCEDURES As String,  _
                    ByVal S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_OTHERS As String,  _
                    ByVal S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_OTHERS As String,  _
                    ByVal S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_OTHERS As String,  _
                    ByVal S_SUGEON_NAME As String,  _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal SURGEON As String,  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal Original_SCLERAL_ID As Decimal,  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_START_TIME() As Byte,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_NOTE As String,  _
                    ByVal Original_S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_OTHER_PROCEDURES As String,  _
                    ByVal Original_S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_CON_OTHERS As String,  _
                    ByVal Original_S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_OTHERS As String,  _
                    ByVal Original_S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_OTHERS As String,  _
                    ByVal Original_S_SUGEON_NAME As String,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal SCLERAL_ID As Decimal) As Integer
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RIGHT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(START_TIME,Byte())
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DIAGNOSIS,String)
            End If
            If (S_PERITOMY360.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(S_PERITOMY360.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_RECTUS_MUSCLES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(S_RECTUS_MUSCLES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_EX_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(S_EX_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_EX_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(S_EX_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_EX_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(S_EX_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(S_NOTE,String)
            End If
            If (S_INTRAVITREAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(S_INTRAVITREAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (S_OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(S_OTHER_PROCEDURES,String)
            End If
            If (S_CON_8VICRYL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(S_CON_8VICRYL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (S_CON_10NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(S_CON_10NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (S_CON_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(S_CON_OTHERS,String)
            End If
            If (S_SUB_GENTAMICIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(S_SUB_GENTAMICIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(S_SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(S_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(S_SUB_OTHERS,String)
            End If
            If (S_TOP_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(S_TOP_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(S_TOP_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_ATROPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(S_TOP_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(S_TOP_OTHERS,String)
            End If
            If (S_SUGEON_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(S_SUGEON_NAME,String)
            End If
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(SURGEON,String)
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(PATIENT_AGE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_SCLERAL_ID,Decimal)
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_START_TIME,Byte())
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_PERITOMY360.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_S_PERITOMY360.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_S_RECTUS_MUSCLES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_S_RECTUS_MUSCLES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_S_EX_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_S_EX_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_S_EX_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_S_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_S_NOTE,String)
            End If
            If (Original_S_INTRAVITREAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_S_INTRAVITREAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_S_OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_S_OTHER_PROCEDURES,String)
            End If
            If (Original_S_CON_8VICRYL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_S_CON_8VICRYL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_S_CON_10NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_S_CON_10NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_S_CON_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_S_CON_OTHERS,String)
            End If
            If (Original_S_SUB_GENTAMICIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_S_SUB_GENTAMICIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_S_SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_S_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_S_SUB_OTHERS,String)
            End If
            If (Original_S_TOP_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_S_TOP_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_S_TOP_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_ATROPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_S_TOP_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_S_TOP_OTHERS,String)
            End If
            If (Original_S_SUGEON_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_S_SUGEON_NAME,String)
            End If
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_SURGEON,String)
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_PATIENT_AGE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(121).Value = CType(SCLERAL_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal START_TIME() As Byte,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_NOTE As String,  _
                    ByVal S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_OTHER_PROCEDURES As String,  _
                    ByVal S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_OTHERS As String,  _
                    ByVal S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_OTHERS As String,  _
                    ByVal S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_OTHERS As String,  _
                    ByVal S_SUGEON_NAME As String,  _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal SURGEON As String,  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal Original_SCLERAL_ID As Decimal,  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_START_TIME() As Byte,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_NOTE As String,  _
                    ByVal Original_S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_OTHER_PROCEDURES As String,  _
                    ByVal Original_S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_CON_OTHERS As String,  _
                    ByVal Original_S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_SUB_OTHERS As String,  _
                    ByVal Original_S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_TOP_OTHERS As String,  _
                    ByVal Original_S_SUGEON_NAME As String,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String) As Integer
            Return Me.Update(OPERA_NO, RIGHT_EYE, LEFT_EYE, START_TIME, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_PERITOMY360, S_RECTUS_MUSCLES, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_EX_GA, S_EX_RETROBULBAR, S_EX_TOPICAL, S_NOTE, S_INTRAVITREAL, S_OTHER_PROCEDURES, S_CON_8VICRYL, S_CON_10NYLON, S_CON_OTHERS, S_SUB_GENTAMICIN, S_SUB_CEFAZOLIN, S_SUB_DEXAMETHASONE, S_SUB_OTHERS, S_TOP_MAXITROL, S_TOP_PILOCARPINE, S_TOP_ATROPINE, S_TOP_OTHERS, S_SUGEON_NAME, CREATE_DATE, SURGEON, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, Original_SCLERAL_ID, Original_OPERA_NO, Original_RIGHT_EYE, Original_LEFT_EYE, Original_START_TIME, Original_SCRUB, Original_CIRCULATING, Original_ANESTHESIONLOGIST, Original_DIAGNOSIS, Original_S_PERITOMY360, Original_S_RECTUS_MUSCLES, Original_S_AN_GA, Original_S_AN_NEURO, Original_S_AN_STANDBY, Original_S_AN_RETROBULBAR, Original_S_AN_PERIBULBAR, Original_S_AN_TOPICAL, Original_S_EX_GA, Original_S_EX_RETROBULBAR, Original_S_EX_TOPICAL, Original_S_NOTE, Original_S_INTRAVITREAL, Original_S_OTHER_PROCEDURES, Original_S_CON_8VICRYL, Original_S_CON_10NYLON, Original_S_CON_OTHERS, Original_S_SUB_GENTAMICIN, Original_S_SUB_CEFAZOLIN, Original_S_SUB_DEXAMETHASONE, Original_S_SUB_OTHERS, Original_S_TOP_MAXITROL, Original_S_TOP_PILOCARPINE, Original_S_TOP_ATROPINE, Original_S_TOP_OTHERS, Original_S_SUGEON_NAME, Original_CREATE_DATE, Original_SURGEON, Original_PATIENT_NO, Original_PATIENT_NAME, Original_PATIENT_SEX, Original_PATIENT_AGE, Original_SCLERAL_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteScleralBuckling( _
                    ByVal Original_SCLERAL_ID As Decimal,  _
                    ByVal IsNull_OPERA_NO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal IsNull_RIGHT_EYE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_LEFT_EYE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_START_TIME As Global.System.Nullable(Of Integer),  _
                    ByVal Original_START_TIME() As Byte,  _
                    ByVal IsNull_SCRUB As Global.System.Nullable(Of Integer),  _
                    ByVal Original_SCRUB As String,  _
                    ByVal IsNull_CIRCULATING As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal IsNull_ANESTHESIONLOGIST As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal IsNull_DIAGNOSIS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal IsNull_S_PERITOMY360 As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_RECTUS_MUSCLES As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_AN_GA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_AN_NEURO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_AN_STANDBY As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_AN_RETROBULBAR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_AN_PERIBULBAR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_AN_TOPICAL As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_EX_GA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_EX_RETROBULBAR As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_EX_TOPICAL As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_NOTE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_NOTE As String,  _
                    ByVal IsNull_S_INTRAVITREAL As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_OTHER_PROCEDURES As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_OTHER_PROCEDURES As String,  _
                    ByVal IsNull_S_CON_8VICRYL As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_CON_10NYLON As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_CON_OTHERS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_CON_OTHERS As String,  _
                    ByVal IsNull_S_SUB_GENTAMICIN As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_SUB_CEFAZOLIN As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_SUB_OTHERS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_SUB_OTHERS As String,  _
                    ByVal IsNull_S_TOP_MAXITROL As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_TOP_PILOCARPINE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_TOP_ATROPINE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal IsNull_S_TOP_OTHERS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_TOP_OTHERS As String,  _
                    ByVal IsNull_S_SUGEON_NAME As Global.System.Nullable(Of Integer),  _
                    ByVal Original_S_SUGEON_NAME As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(1)
            command.Parameters(0).Value = CType(Original_SCLERAL_ID,Decimal)
            If (IsNull_OPERA_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(IsNull_OPERA_NO.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (IsNull_RIGHT_EYE.HasValue = true) Then
                command.Parameters(3).Value = CType(IsNull_RIGHT_EYE.Value,Integer)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                command.Parameters(4).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (IsNull_LEFT_EYE.HasValue = true) Then
                command.Parameters(5).Value = CType(IsNull_LEFT_EYE.Value,Integer)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                command.Parameters(6).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IsNull_START_TIME.HasValue = true) Then
                command.Parameters(7).Value = CType(IsNull_START_TIME.Value,Integer)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_START_TIME Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(Original_START_TIME,Byte())
            End If
            If (IsNull_SCRUB.HasValue = true) Then
                command.Parameters(9).Value = CType(IsNull_SCRUB.Value,Integer)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_SCRUB Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(Original_SCRUB,String)
            End If
            If (IsNull_CIRCULATING.HasValue = true) Then
                command.Parameters(11).Value = CType(IsNull_CIRCULATING.Value,Integer)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_CIRCULATING Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(Original_CIRCULATING,String)
            End If
            If (IsNull_ANESTHESIONLOGIST.HasValue = true) Then
                command.Parameters(13).Value = CType(IsNull_ANESTHESIONLOGIST.Value,Integer)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (IsNull_DIAGNOSIS.HasValue = true) Then
                command.Parameters(15).Value = CType(IsNull_DIAGNOSIS.Value,Integer)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (IsNull_S_PERITOMY360.HasValue = true) Then
                command.Parameters(17).Value = CType(IsNull_S_PERITOMY360.Value,Integer)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_S_PERITOMY360.HasValue = true) Then
                command.Parameters(18).Value = CType(Original_S_PERITOMY360.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_RECTUS_MUSCLES.HasValue = true) Then
                command.Parameters(19).Value = CType(IsNull_S_RECTUS_MUSCLES.Value,Integer)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_S_RECTUS_MUSCLES.HasValue = true) Then
                command.Parameters(20).Value = CType(Original_S_RECTUS_MUSCLES.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_AN_GA.HasValue = true) Then
                command.Parameters(21).Value = CType(IsNull_S_AN_GA.Value,Integer)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                command.Parameters(22).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_AN_NEURO.HasValue = true) Then
                command.Parameters(23).Value = CType(IsNull_S_AN_NEURO.Value,Integer)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                command.Parameters(24).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_AN_STANDBY.HasValue = true) Then
                command.Parameters(25).Value = CType(IsNull_S_AN_STANDBY.Value,Integer)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                command.Parameters(26).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(27).Value = CType(IsNull_S_AN_RETROBULBAR.Value,Integer)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(28).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(29).Value = CType(IsNull_S_AN_PERIBULBAR.Value,Integer)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(30).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(31).Value = CType(IsNull_S_AN_TOPICAL.Value,Integer)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(32).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_EX_GA.HasValue = true) Then
                command.Parameters(33).Value = CType(IsNull_S_EX_GA.Value,Integer)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_GA.HasValue = true) Then
                command.Parameters(34).Value = CType(Original_S_EX_GA.Value,Boolean)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_EX_RETROBULBAR.HasValue = true) Then
                command.Parameters(35).Value = CType(IsNull_S_EX_RETROBULBAR.Value,Integer)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_RETROBULBAR.HasValue = true) Then
                command.Parameters(36).Value = CType(Original_S_EX_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_EX_TOPICAL.HasValue = true) Then
                command.Parameters(37).Value = CType(IsNull_S_EX_TOPICAL.Value,Integer)
            Else
                command.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_S_EX_TOPICAL.HasValue = true) Then
                command.Parameters(38).Value = CType(Original_S_EX_TOPICAL.Value,Boolean)
            Else
                command.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_NOTE.HasValue = true) Then
                command.Parameters(39).Value = CType(IsNull_S_NOTE.Value,Integer)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_S_NOTE Is Nothing) Then
                command.Parameters(40).Value = Global.System.DBNull.Value
            Else
                command.Parameters(40).Value = CType(Original_S_NOTE,String)
            End If
            If (IsNull_S_INTRAVITREAL.HasValue = true) Then
                command.Parameters(41).Value = CType(IsNull_S_INTRAVITREAL.Value,Integer)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_S_INTRAVITREAL.HasValue = true) Then
                command.Parameters(42).Value = CType(Original_S_INTRAVITREAL.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_OTHER_PROCEDURES.HasValue = true) Then
                command.Parameters(43).Value = CType(IsNull_S_OTHER_PROCEDURES.Value,Integer)
            Else
                command.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_S_OTHER_PROCEDURES Is Nothing) Then
                command.Parameters(44).Value = Global.System.DBNull.Value
            Else
                command.Parameters(44).Value = CType(Original_S_OTHER_PROCEDURES,String)
            End If
            If (IsNull_S_CON_8VICRYL.HasValue = true) Then
                command.Parameters(45).Value = CType(IsNull_S_CON_8VICRYL.Value,Integer)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_S_CON_8VICRYL.HasValue = true) Then
                command.Parameters(46).Value = CType(Original_S_CON_8VICRYL.Value,Boolean)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_CON_10NYLON.HasValue = true) Then
                command.Parameters(47).Value = CType(IsNull_S_CON_10NYLON.Value,Integer)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_S_CON_10NYLON.HasValue = true) Then
                command.Parameters(48).Value = CType(Original_S_CON_10NYLON.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_CON_OTHERS.HasValue = true) Then
                command.Parameters(49).Value = CType(IsNull_S_CON_OTHERS.Value,Integer)
            Else
                command.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_S_CON_OTHERS Is Nothing) Then
                command.Parameters(50).Value = Global.System.DBNull.Value
            Else
                command.Parameters(50).Value = CType(Original_S_CON_OTHERS,String)
            End If
            If (IsNull_S_SUB_GENTAMICIN.HasValue = true) Then
                command.Parameters(51).Value = CType(IsNull_S_SUB_GENTAMICIN.Value,Integer)
            Else
                command.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_GENTAMICIN.HasValue = true) Then
                command.Parameters(52).Value = CType(Original_S_SUB_GENTAMICIN.Value,Boolean)
            Else
                command.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_SUB_CEFAZOLIN.HasValue = true) Then
                command.Parameters(53).Value = CType(IsNull_S_SUB_CEFAZOLIN.Value,Integer)
            Else
                command.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_CEFAZOLIN.HasValue = true) Then
                command.Parameters(54).Value = CType(Original_S_SUB_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(55).Value = CType(IsNull_S_SUB_DEXAMETHASONE.Value,Integer)
            Else
                command.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(56).Value = CType(Original_S_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_SUB_OTHERS.HasValue = true) Then
                command.Parameters(57).Value = CType(IsNull_S_SUB_OTHERS.Value,Integer)
            Else
                command.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUB_OTHERS Is Nothing) Then
                command.Parameters(58).Value = Global.System.DBNull.Value
            Else
                command.Parameters(58).Value = CType(Original_S_SUB_OTHERS,String)
            End If
            If (IsNull_S_TOP_MAXITROL.HasValue = true) Then
                command.Parameters(59).Value = CType(IsNull_S_TOP_MAXITROL.Value,Integer)
            Else
                command.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_MAXITROL.HasValue = true) Then
                command.Parameters(60).Value = CType(Original_S_TOP_MAXITROL.Value,Boolean)
            Else
                command.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_TOP_PILOCARPINE.HasValue = true) Then
                command.Parameters(61).Value = CType(IsNull_S_TOP_PILOCARPINE.Value,Integer)
            Else
                command.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_PILOCARPINE.HasValue = true) Then
                command.Parameters(62).Value = CType(Original_S_TOP_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_TOP_ATROPINE.HasValue = true) Then
                command.Parameters(63).Value = CType(IsNull_S_TOP_ATROPINE.Value,Integer)
            Else
                command.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_ATROPINE.HasValue = true) Then
                command.Parameters(64).Value = CType(Original_S_TOP_ATROPINE.Value,Boolean)
            Else
                command.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (IsNull_S_TOP_OTHERS.HasValue = true) Then
                command.Parameters(65).Value = CType(IsNull_S_TOP_OTHERS.Value,Integer)
            Else
                command.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_S_TOP_OTHERS Is Nothing) Then
                command.Parameters(66).Value = Global.System.DBNull.Value
            Else
                command.Parameters(66).Value = CType(Original_S_TOP_OTHERS,String)
            End If
            If (IsNull_S_SUGEON_NAME.HasValue = true) Then
                command.Parameters(67).Value = CType(IsNull_S_SUGEON_NAME.Value,Integer)
            Else
                command.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_S_SUGEON_NAME Is Nothing) Then
                command.Parameters(68).Value = Global.System.DBNull.Value
            Else
                command.Parameters(68).Value = CType(Original_S_SUGEON_NAME,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertNewScleralBuckling( _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_NOTE As String,  _
                    ByVal S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_OTHER_PROCEDURES As String,  _
                    ByVal S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_OTHERS As String,  _
                    ByVal S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_OTHERS As String,  _
                    ByVal S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_OTHERS As String,  _
                    ByVal S_SUGEON_NAME As String,  _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal SURGEON As String,  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RIGHT_EYE.HasValue = true) Then
                command.Parameters(1).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                command.Parameters(2).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(START_TIME,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(DIAGNOSIS,String)
            End If
            If (S_PERITOMY360.HasValue = true) Then
                command.Parameters(8).Value = CType(S_PERITOMY360.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_RECTUS_MUSCLES.HasValue = true) Then
                command.Parameters(9).Value = CType(S_RECTUS_MUSCLES.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(10).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(11).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(13).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(15).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_EX_GA.HasValue = true) Then
                command.Parameters(16).Value = CType(S_EX_GA.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_EX_RETROBULBAR.HasValue = true) Then
                command.Parameters(17).Value = CType(S_EX_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_EX_TOPICAL.HasValue = true) Then
                command.Parameters(18).Value = CType(S_EX_TOPICAL.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_NOTE Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(S_NOTE,String)
            End If
            If (S_INTRAVITREAL.HasValue = true) Then
                command.Parameters(20).Value = CType(S_INTRAVITREAL.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (S_OTHER_PROCEDURES Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(S_OTHER_PROCEDURES,String)
            End If
            If (S_CON_8VICRYL.HasValue = true) Then
                command.Parameters(22).Value = CType(S_CON_8VICRYL.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (S_CON_10NYLON.HasValue = true) Then
                command.Parameters(23).Value = CType(S_CON_10NYLON.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (S_CON_OTHERS Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(S_CON_OTHERS,String)
            End If
            If (S_SUB_GENTAMICIN.HasValue = true) Then
                command.Parameters(25).Value = CType(S_SUB_GENTAMICIN.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_CEFAZOLIN.HasValue = true) Then
                command.Parameters(26).Value = CType(S_SUB_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(27).Value = CType(S_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_OTHERS Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(S_SUB_OTHERS,String)
            End If
            If (S_TOP_MAXITROL.HasValue = true) Then
                command.Parameters(29).Value = CType(S_TOP_MAXITROL.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_PILOCARPINE.HasValue = true) Then
                command.Parameters(30).Value = CType(S_TOP_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_ATROPINE.HasValue = true) Then
                command.Parameters(31).Value = CType(S_TOP_ATROPINE.Value,Boolean)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_OTHERS Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(S_TOP_OTHERS,String)
            End If
            If (S_SUGEON_NAME Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(S_SUGEON_NAME,String)
            End If
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(34).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(35).Value = Global.System.DBNull.Value
            Else
                command.Parameters(35).Value = CType(SURGEON,String)
            End If
            If (PATIENT_NO.HasValue = true) Then
                command.Parameters(36).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                command.Parameters(37).Value = Global.System.DBNull.Value
            Else
                command.Parameters(37).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                command.Parameters(38).Value = Global.System.DBNull.Value
            Else
                command.Parameters(38).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                command.Parameters(39).Value = Global.System.DBNull.Value
            Else
                command.Parameters(39).Value = CType(PATIENT_AGE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateScleralBuckling( _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_PERITOMY360 As Global.System.Nullable(Of Boolean),  _
                    ByVal S_RECTUS_MUSCLES As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_EX_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_NOTE As String,  _
                    ByVal S_INTRAVITREAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_OTHER_PROCEDURES As String,  _
                    ByVal S_CON_8VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_10NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal S_CON_OTHERS As String,  _
                    ByVal S_SUB_GENTAMICIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_SUB_OTHERS As String,  _
                    ByVal S_TOP_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_TOP_OTHERS As String,  _
                    ByVal S_SUGEON_NAME As String,  _
                    ByVal Original_SCLERAL_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(4)
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(0).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (RIGHT_EYE.HasValue = true) Then
                command.Parameters(1).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                command.Parameters(2).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(START_TIME,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(DIAGNOSIS,String)
            End If
            If (S_PERITOMY360.HasValue = true) Then
                command.Parameters(8).Value = CType(S_PERITOMY360.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_RECTUS_MUSCLES.HasValue = true) Then
                command.Parameters(9).Value = CType(S_RECTUS_MUSCLES.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(10).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(11).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(13).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(15).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_EX_GA.HasValue = true) Then
                command.Parameters(16).Value = CType(S_EX_GA.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_EX_RETROBULBAR.HasValue = true) Then
                command.Parameters(17).Value = CType(S_EX_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_EX_TOPICAL.HasValue = true) Then
                command.Parameters(18).Value = CType(S_EX_TOPICAL.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_NOTE Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(S_NOTE,String)
            End If
            If (S_INTRAVITREAL.HasValue = true) Then
                command.Parameters(20).Value = CType(S_INTRAVITREAL.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (S_OTHER_PROCEDURES Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(S_OTHER_PROCEDURES,String)
            End If
            If (S_CON_8VICRYL.HasValue = true) Then
                command.Parameters(22).Value = CType(S_CON_8VICRYL.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (S_CON_10NYLON.HasValue = true) Then
                command.Parameters(23).Value = CType(S_CON_10NYLON.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (S_CON_OTHERS Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(S_CON_OTHERS,String)
            End If
            If (S_SUB_GENTAMICIN.HasValue = true) Then
                command.Parameters(25).Value = CType(S_SUB_GENTAMICIN.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_CEFAZOLIN.HasValue = true) Then
                command.Parameters(26).Value = CType(S_SUB_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(27).Value = CType(S_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (S_SUB_OTHERS Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(S_SUB_OTHERS,String)
            End If
            If (S_TOP_MAXITROL.HasValue = true) Then
                command.Parameters(29).Value = CType(S_TOP_MAXITROL.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_PILOCARPINE.HasValue = true) Then
                command.Parameters(30).Value = CType(S_TOP_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_ATROPINE.HasValue = true) Then
                command.Parameters(31).Value = CType(S_TOP_ATROPINE.Value,Boolean)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (S_TOP_OTHERS Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(S_TOP_OTHERS,String)
            End If
            If (S_SUGEON_NAME Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(S_SUGEON_NAME,String)
            End If
            command.Parameters(34).Value = CType(Original_SCLERAL_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TblDoctorTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TblDoctor"
            tableMapping.ColumnMappings.Add("DoctorNo", "DoctorNo")
            tableMapping.ColumnMappings.Add("DoctorName", "DoctorName")
            tableMapping.ColumnMappings.Add("Sex", "Sex")
            tableMapping.ColumnMappings.Add("Age", "Age")
            tableMapping.ColumnMappings.Add("Tel", "Tel")
            tableMapping.ColumnMappings.Add("Job", "Job")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TblDoctor] WHERE (([DoctorNo] = @Original_DoctorNo) AND ((@IsN"& _ 
                "ull_DoctorName = 1 AND [DoctorName] IS NULL) OR ([DoctorName] = @Original_Doctor"& _ 
                "Name)) AND ((@IsNull_Sex = 1 AND [Sex] IS NULL) OR ([Sex] = @Original_Sex)) AND "& _ 
                "((@IsNull_Age = 1 AND [Age] IS NULL) OR ([Age] = @Original_Age)) AND ((@IsNull_T"& _ 
                "el = 1 AND [Tel] IS NULL) OR ([Tel] = @Original_Tel)) AND ((@IsNull_Job = 1 AND "& _ 
                "[Job] IS NULL) OR ([Job] = @Original_Job)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DoctorNo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DoctorNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DoctorName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DoctorName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DoctorName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DoctorName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sex", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sex", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sex", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sex", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Age", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Age", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Age", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Age", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Job", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Job", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Job", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Job", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TblDoctor] ([DoctorName], [Sex], [Age], [Tel], [Job]) VALUES ("& _ 
                "@DoctorName, @Sex, @Age, @Tel, @Job);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DoctorNo, DoctorName, Sex, Age, Te"& _ 
                "l, Job FROM TblDoctor WHERE (DoctorNo = SCOPE_IDENTITY()) ORDER BY DoctorName"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DoctorName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DoctorName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sex", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Age", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Age", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Job", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Job", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TblDoctor] SET [DoctorName] = @DoctorName, [Sex] = @Sex, [Age] = @A"& _ 
                "ge, [Tel] = @Tel, [Job] = @Job WHERE (([DoctorNo] = @Original_DoctorNo) AND ((@I"& _ 
                "sNull_DoctorName = 1 AND [DoctorName] IS NULL) OR ([DoctorName] = @Original_Doct"& _ 
                "orName)) AND ((@IsNull_Sex = 1 AND [Sex] IS NULL) OR ([Sex] = @Original_Sex)) AN"& _ 
                "D ((@IsNull_Age = 1 AND [Age] IS NULL) OR ([Age] = @Original_Age)) AND ((@IsNull"& _ 
                "_Tel = 1 AND [Tel] IS NULL) OR ([Tel] = @Original_Tel)) AND ((@IsNull_Job = 1 AN"& _ 
                "D [Job] IS NULL) OR ([Job] = @Original_Job)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DoctorNo, DoctorName, Sex"& _ 
                ", Age, Tel, Job FROM TblDoctor WHERE (DoctorNo = @DoctorNo) ORDER BY DoctorName"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DoctorName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DoctorName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Sex", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sex", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Age", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Age", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tel", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Job", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Job", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DoctorNo", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DoctorNo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DoctorName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DoctorName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DoctorName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DoctorName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Sex", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sex", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Sex", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Sex", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Age", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Age", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Age", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "Age", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tel", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tel", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tel", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tel", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Job", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Job", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Job", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Job", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DoctorNo", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "DoctorNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DoctorNo, DoctorName, Sex, Age, Tel, Job FROM dbo.TblDoctor"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Doct"& _ 
                "orName"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.TblDoctorDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.TblDoctorDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.TblDoctorDataTable = New DSOPERATIONNOTE.TblDoctorDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.TblDoctorDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "TblDoctor")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DoctorNo As Decimal, ByVal Original_DoctorName As String, ByVal Original_Sex As String, ByVal Original_Age As Global.System.Nullable(Of Decimal), ByVal Original_Tel As String, ByVal Original_Job As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DoctorNo,Decimal)
            If (Original_DoctorName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DoctorName,String)
            End If
            If (Original_Sex Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_Sex,String)
            End If
            If (Original_Age.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_Age.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_Tel Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_Tel,String)
            End If
            If (Original_Job Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Job,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DoctorName As String, ByVal Sex As String, ByVal Age As Global.System.Nullable(Of Decimal), ByVal Tel As String, ByVal Job As String) As Integer
            If (DoctorName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DoctorName,String)
            End If
            If (Sex Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Sex,String)
            End If
            If (Age.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Age.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Tel Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Tel,String)
            End If
            If (Job Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Job,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DoctorName As String, ByVal Sex As String, ByVal Age As Global.System.Nullable(Of Decimal), ByVal Tel As String, ByVal Job As String, ByVal Original_DoctorNo As Decimal, ByVal Original_DoctorName As String, ByVal Original_Sex As String, ByVal Original_Age As Global.System.Nullable(Of Decimal), ByVal Original_Tel As String, ByVal Original_Job As String, ByVal DoctorNo As Decimal) As Integer
            If (DoctorName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DoctorName,String)
            End If
            If (Sex Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Sex,String)
            End If
            If (Age.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(Age.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Tel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Tel,String)
            End If
            If (Job Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Job,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_DoctorNo,Decimal)
            If (Original_DoctorName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_DoctorName,String)
            End If
            If (Original_Sex Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_Sex,String)
            End If
            If (Original_Age.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_Age.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_Tel Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_Tel,String)
            End If
            If (Original_Job Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_Job,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(DoctorNo,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DoctorName As String, ByVal Sex As String, ByVal Age As Global.System.Nullable(Of Decimal), ByVal Tel As String, ByVal Job As String, ByVal Original_DoctorNo As Decimal, ByVal Original_DoctorName As String, ByVal Original_Sex As String, ByVal Original_Age As Global.System.Nullable(Of Decimal), ByVal Original_Tel As String, ByVal Original_Job As String) As Integer
            Return Me.Update(DoctorName, Sex, Age, Tel, Job, Original_DoctorNo, Original_DoctorName, Original_Sex, Original_Age, Original_Tel, Original_Job, Original_DoctorNo)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TblSurgeryTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TblSurgery"
            tableMapping.ColumnMappings.Add("SID", "SID")
            tableMapping.ColumnMappings.Add("Surgery", "Surgery")
            tableMapping.ColumnMappings.Add("Description", "Description")
            tableMapping.ColumnMappings.Add("Code", "Code")
            tableMapping.ColumnMappings.Add("Type", "Type")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TblSurgery] ([Surgery], [Description], [Code], [Type]) VALUES "& _ 
                "(@Surgery, @Description, @Code, @Type)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Surgery", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Surgery", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Description", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Description", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Code", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Code", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Type", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Type", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT SID, Surgery, Description, Code, Type FROM dbo.TblSurgery"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Surger"& _ 
                "y"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.TblSurgeryDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.TblSurgeryDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.TblSurgeryDataTable = New DSOPERATIONNOTE.TblSurgeryDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.TblSurgeryDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "TblSurgery")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Surgery As String, ByVal Description As String, ByVal Code As String, ByVal Type As Global.System.Nullable(Of Boolean)) As Integer
            If (Surgery Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Surgery,String)
            End If
            If (Description Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Description,String)
            End If
            If (Code Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(Code,String)
            End If
            If (Type.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(Type.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class View_OTRegistrationTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "View_OTRegistration"
            tableMapping.ColumnMappings.Add("OTNo", "OTNo")
            tableMapping.ColumnMappings.Add("NewInPatientNo", "NewInPatientNo")
            tableMapping.ColumnMappings.Add("PatientNo", "PatientNo")
            tableMapping.ColumnMappings.Add("NameKhmer", "NameKhmer")
            tableMapping.ColumnMappings.Add("Age", "Age")
            tableMapping.ColumnMappings.Add("Sex", "Sex")
            tableMapping.ColumnMappings.Add("Address", "Address")
            tableMapping.ColumnMappings.Add("OperationTime", "OperationTime")
            tableMapping.ColumnMappings.Add("Anesthesia", "Anesthesia")
            tableMapping.ColumnMappings.Add("Anesthetist", "Anesthetist")
            tableMapping.ColumnMappings.Add("Eye", "Eye")
            tableMapping.ColumnMappings.Add("OperationType", "OperationType")
            tableMapping.ColumnMappings.Add("IOL", "IOL")
            tableMapping.ColumnMappings.Add("Surgeon", "Surgeon")
            tableMapping.ColumnMappings.Add("Assistant", "Assistant")
            tableMapping.ColumnMappings.Add("Circulation", "Circulation")
            tableMapping.ColumnMappings.Add("Compli", "Compli")
            tableMapping.ColumnMappings.Add("CreateDate", "CreateDate")
            tableMapping.ColumnMappings.Add("Status", "Status")
            tableMapping.ColumnMappings.Add("DateOperated", "DateOperated")
            tableMapping.ColumnMappings.Add("Others", "Others")
            tableMapping.ColumnMappings.Add("Waiting", "Waiting")
            tableMapping.ColumnMappings.Add("DeleteOption", "DeleteOption")
            tableMapping.ColumnMappings.Add("IOL_ID", "IOL_ID")
            tableMapping.ColumnMappings.Add("IOL_ID_OLD", "IOL_ID_OLD")
            tableMapping.ColumnMappings.Add("NameEng", "NameEng")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT OTNo, NewInPatientNo, PatientNo, NameKhmer, Age, Sex, Address, OperationTi"& _ 
                "me, Anesthesia, Anesthetist, Eye, OperationType, IOL, Surgeon, Assistant, Circul"& _ 
                "ation, Compli, CreateDate, Status, DateOperated, Others, Waiting, DeleteOption, "& _ 
                "IOL_ID, IOL_ID_OLD, NameEng FROM dbo.View_OTRegistration"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        OTNo, NewInPatientNo, PatientNo, NameKhmer, Age, Sex, Address, Oper"& _ 
                "ationTime, Anesthesia, Anesthetist, Eye, OperationType, IOL, Surgeon, Assistant,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Circulation, Compli, CreateDate, Status, DateOperate"& _ 
                "d, Others, Waiting, DeleteOption, IOL_ID, IOL_ID_OLD, NameEng"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            V"& _ 
                "iew_OTRegistration"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Waiting = 2) AND (Status = 'False') AND (Delet"& _ 
                "eOption = 'False')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY NameEng"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        OTNo, NewInPatientNo, PatientNo, NameKhmer, Age, Sex, Address, Oper"& _ 
                "ationTime, Anesthesia, Anesthetist, Eye, OperationType, IOL, Surgeon, Assistant,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         Circulation, Compli, CreateDate, Status, DateOperate"& _ 
                "d, Others, Waiting, DeleteOption, IOL_ID, IOL_ID_OLD, NameEng"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            V"& _ 
                "iew_OTRegistration"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (Waiting = 3) AND (Status = 1) AND (DeleteOptio"& _ 
                "n = 'False') AND (PatientNo = @PatientNo)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientNo", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PatientNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT OTNo, NewInPatientNo, PatientNo, NameKhmer, Age, Sex, Address, OperationTi"& _ 
                "me, Anesthesia, Anesthetist, Eye, OperationType, IOL, Surgeon, Assistant, Circul"& _ 
                "ation, Compli, CreateDate, Status, DateOperated, Others, Waiting, DeleteOption, "& _ 
                "IOL_ID, IOL_ID_OLD, NameEng FROM dbo.View_OTRegistration"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Status='True'  A"& _ 
                "ND DeleteOption='False' AND CAST(CONVERT(VARCHAR(10), DateOperated, 1) as DateTi"& _ 
                "me) BETWEEN CAST(CONVERT(VARCHAR(10),CAST(@DateFrom AS DATETIME), 1) as Datetime"& _ 
                ") AND CAST(CONVERT(VARCHAR(10),CAST(@DateTo  AS DATETIME), 1) as Datetime) AND P"& _ 
                "atientNo=@PatientNo"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFrom", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateTo", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PatientNo", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PatientNo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT OTNo, NewInPatientNo, PatientNo, NameKhmer, Age, Sex, Address, OperationTi"& _ 
                "me, Anesthesia, Anesthetist, Eye, OperationType, IOL, Surgeon, Assistant, Circul"& _ 
                "ation, Compli, CreateDate, Status, DateOperated, Others, Waiting, DeleteOption, "& _ 
                "IOL_ID, IOL_ID_OLD, NameEng FROM dbo.View_OTRegistration"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE Status='True'  A"& _ 
                "ND DeleteOption='False' AND CAST(CONVERT(VARCHAR(10), DateOperated, 1) as DateTi"& _ 
                "me) BETWEEN CAST(CONVERT(VARCHAR(10),CAST(@DateFrom AS DATETIME), 1) as Datetime"& _ 
                ") AND CAST(CONVERT(VARCHAR(10),CAST(@DateTo  AS DATETIME), 1) as Datetime)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateFrom", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DateTo", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable = New DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectWaitingOP() As DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable = New DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1(ByVal dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable, ByVal PatientNo As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PatientNo,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectOperationNote(ByVal PatientNo As Decimal) As DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PatientNo,Decimal)
            Dim dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable = New DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillWithHistPNo(ByVal dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable, ByVal DateFrom As Date, ByVal DateTo As Date, ByVal PatientNo As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateTo,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(PatientNo,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectWithHistPatientNo(ByVal DateFrom As Date, ByVal DateTo As Date, ByVal PatientNo As Decimal) As DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateTo,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(PatientNo,Decimal)
            Dim dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable = New DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillWithoutHistPno(ByVal dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable, ByVal DateFrom As Date, ByVal DateTo As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateTo,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectWithoutHistPatientNo(ByVal DateFrom As Date, ByVal DateTo As Date) As DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(DateFrom,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(DateTo,Date)
            Dim dataTable As DSOPERATIONNOTE.View_OTRegistrationDataTable = New DSOPERATIONNOTE.View_OTRegistrationDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_OPER_INJECTIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_OPER_INJECTION"
            tableMapping.ColumnMappings.Add("INJECTION_ID", "INJECTION_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("OPERA_NO", "OPERA_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NO", "PATIENT_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NAME", "PATIENT_NAME")
            tableMapping.ColumnMappings.Add("PATIENT_SEX", "PATIENT_SEX")
            tableMapping.ColumnMappings.Add("PATIENT_AGE", "PATIENT_AGE")
            tableMapping.ColumnMappings.Add("START_TIME", "START_TIME")
            tableMapping.ColumnMappings.Add("SURGEON", "SURGEON")
            tableMapping.ColumnMappings.Add("SCRUB", "SCRUB")
            tableMapping.ColumnMappings.Add("CIRCULATING", "CIRCULATING")
            tableMapping.ColumnMappings.Add("ANESTHESIONLOGIST", "ANESTHESIONLOGIST")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("IVTA", "IVTA")
            tableMapping.ColumnMappings.Add("AVASTIN", "AVASTIN")
            tableMapping.ColumnMappings.Add("LUCENTIS", "LUCENTIS")
            tableMapping.ColumnMappings.Add("AN_TOPICAL", "AN_TOPICAL")
            tableMapping.ColumnMappings.Add("AN_SUBCONJUNCTIVAL", "AN_SUBCONJUNCTIVAL")
            tableMapping.ColumnMappings.Add("FULL_PRE_OP", "FULL_PRE_OP")
            tableMapping.ColumnMappings.Add("PATIENT_FULL", "PATIENT_FULL")
            tableMapping.ColumnMappings.Add("INTRA_TRIAMCINOLONE", "INTRA_TRIAMCINOLONE")
            tableMapping.ColumnMappings.Add("INTRA_TRIAM_DOSE", "INTRA_TRIAM_DOSE")
            tableMapping.ColumnMappings.Add("INTRA_AVASTIN", "INTRA_AVASTIN")
            tableMapping.ColumnMappings.Add("INTRA_AVASTIN_DOSE", "INTRA_AVASTIN_DOSE")
            tableMapping.ColumnMappings.Add("INTRA_LUCENTIS", "INTRA_LUCENTIS")
            tableMapping.ColumnMappings.Add("INTRA_LUCENTIS_DOSE", "INTRA_LUCENTIS_DOSE")
            tableMapping.ColumnMappings.Add("ALPHAGAM", "ALPHAGAM")
            tableMapping.ColumnMappings.Add("NEO_SYNEPHRINE", "NEO_SYNEPHRINE")
            tableMapping.ColumnMappings.Add("POLY_OPH_TROPICAL", "POLY_OPH_TROPICAL")
            tableMapping.ColumnMappings.Add("VIGAMOX_TROPICAL", "VIGAMOX_TROPICAL")
            tableMapping.ColumnMappings.Add("VIGAMO_TROPICAL_NOTE", "VIGAMO_TROPICAL_NOTE")
            tableMapping.ColumnMappings.Add("MAXITROL_EYE_OITMENT", "MAXITROL_EYE_OITMENT")
            tableMapping.ColumnMappings.Add("PATH", "PATH")
            tableMapping.ColumnMappings.Add("NO_COMPLICATION", "NO_COMPLICATION")
            tableMapping.ColumnMappings.Add("NOTE", "NOTE")
            tableMapping.ColumnMappings.Add("SURGEON_SIGNATURE", "SURGEON_SIGNATURE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[S_OPER_INJECTION] WHERE (([INJECTION_ID] = @Original_INJECTION"& _ 
                "_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DATE] "& _ 
                "= @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL) OR "& _ 
                "([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [PATIENT_NO]"& _ 
                " IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATIENT_NAME ="& _ 
                " 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_NAME)) AND"& _ 
                " ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX] = @Origi"& _ 
                "nal_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS NULL) OR (["& _ 
                "PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AND [START_T"& _ 
                "IME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_SURGEON = "& _ 
                "1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ((@IsNull_SCRUB"& _ 
                " = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_CIRCULAT"& _ 
                "ING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCULATING)) A"& _ 
                "ND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ([ANESTHE"& _ 
                "SIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 AND [DIA"& _ 
                "GNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_IVTA = 1 "& _ 
                "AND [IVTA] IS NULL) OR ([IVTA] = @Original_IVTA)) AND ((@IsNull_AVASTIN = 1 AND "& _ 
                "[AVASTIN] IS NULL) OR ([AVASTIN] = @Original_AVASTIN)) AND ((@IsNull_LUCENTIS = "& _ 
                "1 AND [LUCENTIS] IS NULL) OR ([LUCENTIS] = @Original_LUCENTIS)) AND ((@IsNull_AN"& _ 
                "_TOPICAL = 1 AND [AN_TOPICAL] IS NULL) OR ([AN_TOPICAL] = @Original_AN_TOPICAL))"& _ 
                " AND ((@IsNull_AN_SUBCONJUNCTIVAL = 1 AND [AN_SUBCONJUNCTIVAL] IS NULL) OR ([AN_"& _ 
                "SUBCONJUNCTIVAL] = @Original_AN_SUBCONJUNCTIVAL)) AND ((@IsNull_FULL_PRE_OP = 1 "& _ 
                "AND [FULL_PRE_OP] IS NULL) OR ([FULL_PRE_OP] = @Original_FULL_PRE_OP)) AND ((@Is"& _ 
                "Null_PATIENT_FULL = 1 AND [PATIENT_FULL] IS NULL) OR ([PATIENT_FULL] = @Original"& _ 
                "_PATIENT_FULL)) AND ((@IsNull_INTRA_TRIAMCINOLONE = 1 AND [INTRA_TRIAMCINOLONE] "& _ 
                "IS NULL) OR ([INTRA_TRIAMCINOLONE] = @Original_INTRA_TRIAMCINOLONE)) AND ((@IsNu"& _ 
                "ll_INTRA_TRIAM_DOSE = 1 AND [INTRA_TRIAM_DOSE] IS NULL) OR ([INTRA_TRIAM_DOSE] ="& _ 
                " @Original_INTRA_TRIAM_DOSE)) AND ((@IsNull_INTRA_AVASTIN = 1 AND [INTRA_AVASTIN"& _ 
                "] IS NULL) OR ([INTRA_AVASTIN] = @Original_INTRA_AVASTIN)) AND ((@IsNull_INTRA_A"& _ 
                "VASTIN_DOSE = 1 AND [INTRA_AVASTIN_DOSE] IS NULL) OR ([INTRA_AVASTIN_DOSE] = @Or"& _ 
                "iginal_INTRA_AVASTIN_DOSE)) AND ((@IsNull_INTRA_LUCENTIS = 1 AND [INTRA_LUCENTIS"& _ 
                "] IS NULL) OR ([INTRA_LUCENTIS] = @Original_INTRA_LUCENTIS)) AND ((@IsNull_INTRA"& _ 
                "_LUCENTIS_DOSE = 1 AND [INTRA_LUCENTIS_DOSE] IS NULL) OR ([INTRA_LUCENTIS_DOSE] "& _ 
                "= @Original_INTRA_LUCENTIS_DOSE)) AND ((@IsNull_ALPHAGAM = 1 AND [ALPHAGAM] IS N"& _ 
                "ULL) OR ([ALPHAGAM] = @Original_ALPHAGAM)) AND ((@IsNull_NEO_SYNEPHRINE = 1 AND "& _ 
                "[NEO_SYNEPHRINE] IS NULL) OR ([NEO_SYNEPHRINE] = @Original_NEO_SYNEPHRINE)) AND "& _ 
                "((@IsNull_POLY_OPH_TROPICAL = 1 AND [POLY_OPH_TROPICAL] IS NULL) OR ([POLY_OPH_T"& _ 
                "ROPICAL] = @Original_POLY_OPH_TROPICAL)) AND ((@IsNull_VIGAMOX_TROPICAL = 1 AND "& _ 
                "[VIGAMOX_TROPICAL] IS NULL) OR ([VIGAMOX_TROPICAL] = @Original_VIGAMOX_TROPICAL)"& _ 
                ") AND ((@IsNull_VIGAMO_TROPICAL_NOTE = 1 AND [VIGAMO_TROPICAL_NOTE] IS NULL) OR "& _ 
                "([VIGAMO_TROPICAL_NOTE] = @Original_VIGAMO_TROPICAL_NOTE)) AND ((@IsNull_MAXITRO"& _ 
                "L_EYE_OITMENT = 1 AND [MAXITROL_EYE_OITMENT] IS NULL) OR ([MAXITROL_EYE_OITMENT]"& _ 
                " = @Original_MAXITROL_EYE_OITMENT)) AND ((@IsNull_PATH = 1 AND [PATH] IS NULL) O"& _ 
                "R ([PATH] = @Original_PATH)) AND ((@IsNull_NO_COMPLICATION = 1 AND [NO_COMPLICAT"& _ 
                "ION] IS NULL) OR ([NO_COMPLICATION] = @Original_NO_COMPLICATION)) AND ((@IsNull_"& _ 
                "NOTE = 1 AND [NOTE] IS NULL) OR ([NOTE] = @Original_NOTE)) AND ((@IsNull_SURGEON"& _ 
                "_SIGNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE] = @Origi"& _ 
                "nal_SURGEON_SIGNATURE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INJECTION_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "INJECTION_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVTA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AVASTIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AVASTIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AVASTIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AVASTIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LUCENTIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUCENTIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LUCENTIS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUCENTIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FULL_PRE_OP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FULL_PRE_OP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FULL_PRE_OP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FULL_PRE_OP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_FULL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_FULL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_FULL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_FULL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_TRIAMCINOLONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAMCINOLONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_TRIAMCINOLONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAMCINOLONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_TRIAM_DOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAM_DOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_TRIAM_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAM_DOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_AVASTIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_AVASTIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_AVASTIN_DOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN_DOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_AVASTIN_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN_DOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_LUCENTIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_LUCENTIS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_LUCENTIS_DOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS_DOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_LUCENTIS_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS_DOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ALPHAGAM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALPHAGAM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ALPHAGAM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALPHAGAM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NEO_SYNEPHRINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEO_SYNEPHRINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NEO_SYNEPHRINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEO_SYNEPHRINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_POLY_OPH_TROPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POLY_OPH_TROPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_POLY_OPH_TROPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POLY_OPH_TROPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIGAMOX_TROPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMOX_TROPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIGAMOX_TROPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMOX_TROPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIGAMO_TROPICAL_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMO_TROPICAL_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIGAMO_TROPICAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMO_TROPICAL_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAXITROL_EYE_OITMENT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAXITROL_EYE_OITMENT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAXITROL_EYE_OITMENT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAXITROL_EYE_OITMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NO_COMPLICATION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_COMPLICATION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NO_COMPLICATION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_COMPLICATION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[S_OPER_INJECTION] ([CREATE_DATE], [OPERA_NO], [PATIENT_NO], [P"& _ 
                "ATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], [SCRUB], [C"& _ 
                "IRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [IVTA], [AVASTIN], [LUCENTIS], [A"& _ 
                "N_TOPICAL], [AN_SUBCONJUNCTIVAL], [FULL_PRE_OP], [PATIENT_FULL], [INTRA_TRIAMCIN"& _ 
                "OLONE], [INTRA_TRIAM_DOSE], [INTRA_AVASTIN], [INTRA_AVASTIN_DOSE], [INTRA_LUCENT"& _ 
                "IS], [INTRA_LUCENTIS_DOSE], [ALPHAGAM], [NEO_SYNEPHRINE], [POLY_OPH_TROPICAL], ["& _ 
                "VIGAMOX_TROPICAL], [VIGAMO_TROPICAL_NOTE], [MAXITROL_EYE_OITMENT], [PATH], [NO_C"& _ 
                "OMPLICATION], [NOTE], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PAT"& _ 
                "IENT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @SCRU"& _ 
                "B, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @IVTA, @AVASTIN, @LUCENTIS, @AN"& _ 
                "_TOPICAL, @AN_SUBCONJUNCTIVAL, @FULL_PRE_OP, @PATIENT_FULL, @INTRA_TRIAMCINOLONE"& _ 
                ", @INTRA_TRIAM_DOSE, @INTRA_AVASTIN, @INTRA_AVASTIN_DOSE, @INTRA_LUCENTIS, @INTR"& _ 
                "A_LUCENTIS_DOSE, @ALPHAGAM, @NEO_SYNEPHRINE, @POLY_OPH_TROPICAL, @VIGAMOX_TROPIC"& _ 
                "AL, @VIGAMO_TROPICAL_NOTE, @MAXITROL_EYE_OITMENT, @PATH, @NO_COMPLICATION, @NOTE"& _ 
                ", @SURGEON_SIGNATURE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT INJECTION_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, "& _ 
                "PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING,"& _ 
                " ANESTHESIONLOGIST, DIAGNOSIS, IVTA, AVASTIN, LUCENTIS, AN_TOPICAL, AN_SUBCONJUN"& _ 
                "CTIVAL, FULL_PRE_OP, PATIENT_FULL, INTRA_TRIAMCINOLONE, INTRA_TRIAM_DOSE, INTRA_"& _ 
                "AVASTIN, INTRA_AVASTIN_DOSE, INTRA_LUCENTIS, INTRA_LUCENTIS_DOSE, ALPHAGAM, NEO_"& _ 
                "SYNEPHRINE, POLY_OPH_TROPICAL, VIGAMOX_TROPICAL, VIGAMO_TROPICAL_NOTE, MAXITROL_"& _ 
                "EYE_OITMENT, PATH, NO_COMPLICATION, NOTE, SURGEON_SIGNATURE FROM S_OPER_INJECTIO"& _ 
                "N WHERE (INJECTION_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVTA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AVASTIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AVASTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LUCENTIS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUCENTIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FULL_PRE_OP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FULL_PRE_OP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_FULL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_FULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_TRIAMCINOLONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAMCINOLONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_TRIAM_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAM_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_AVASTIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_AVASTIN_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_LUCENTIS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_LUCENTIS_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALPHAGAM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALPHAGAM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEO_SYNEPHRINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEO_SYNEPHRINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POLY_OPH_TROPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POLY_OPH_TROPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIGAMOX_TROPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMOX_TROPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIGAMO_TROPICAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMO_TROPICAL_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAXITROL_EYE_OITMENT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAXITROL_EYE_OITMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO_COMPLICATION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_COMPLICATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_OPER_INJECTION] SET [CREATE_DATE] = @CREATE_DATE, [OPERA_NO] = @O"& _ 
                "PERA_NO, [PATIENT_NO] = @PATIENT_NO, [PATIENT_NAME] = @PATIENT_NAME, [PATIENT_SE"& _ 
                "X] = @PATIENT_SEX, [PATIENT_AGE] = @PATIENT_AGE, [START_TIME] = @START_TIME, [SU"& _ 
                "RGEON] = @SURGEON, [SCRUB] = @SCRUB, [CIRCULATING] = @CIRCULATING, [ANESTHESIONL"& _ 
                "OGIST] = @ANESTHESIONLOGIST, [DIAGNOSIS] = @DIAGNOSIS, [IVTA] = @IVTA, [AVASTIN]"& _ 
                " = @AVASTIN, [LUCENTIS] = @LUCENTIS, [AN_TOPICAL] = @AN_TOPICAL, [AN_SUBCONJUNCT"& _ 
                "IVAL] = @AN_SUBCONJUNCTIVAL, [FULL_PRE_OP] = @FULL_PRE_OP, [PATIENT_FULL] = @PAT"& _ 
                "IENT_FULL, [INTRA_TRIAMCINOLONE] = @INTRA_TRIAMCINOLONE, [INTRA_TRIAM_DOSE] = @I"& _ 
                "NTRA_TRIAM_DOSE, [INTRA_AVASTIN] = @INTRA_AVASTIN, [INTRA_AVASTIN_DOSE] = @INTRA"& _ 
                "_AVASTIN_DOSE, [INTRA_LUCENTIS] = @INTRA_LUCENTIS, [INTRA_LUCENTIS_DOSE] = @INTR"& _ 
                "A_LUCENTIS_DOSE, [ALPHAGAM] = @ALPHAGAM, [NEO_SYNEPHRINE] = @NEO_SYNEPHRINE, [PO"& _ 
                "LY_OPH_TROPICAL] = @POLY_OPH_TROPICAL, [VIGAMOX_TROPICAL] = @VIGAMOX_TROPICAL, ["& _ 
                "VIGAMO_TROPICAL_NOTE] = @VIGAMO_TROPICAL_NOTE, [MAXITROL_EYE_OITMENT] = @MAXITRO"& _ 
                "L_EYE_OITMENT, [PATH] = @PATH, [NO_COMPLICATION] = @NO_COMPLICATION, [NOTE] = @N"& _ 
                "OTE, [SURGEON_SIGNATURE] = @SURGEON_SIGNATURE WHERE (([INJECTION_ID] = @Original"& _ 
                "_INJECTION_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CRE"& _ 
                "ATE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS"& _ 
                " NULL) OR ([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [P"& _ 
                "ATIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATI"& _ 
                "ENT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_"& _ 
                "NAME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX"& _ 
                "] = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS N"& _ 
                "ULL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AN"& _ 
                "D [START_TIME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_"& _ 
                "SURGEON = 1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ((@Is"& _ 
                "Null_SCRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNul"& _ 
                "l_CIRCULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCU"& _ 
                "LATING)) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR"& _ 
                " ([ANESTHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = "& _ 
                "1 AND [DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull"& _ 
                "_IVTA = 1 AND [IVTA] IS NULL) OR ([IVTA] = @Original_IVTA)) AND ((@IsNull_AVASTI"& _ 
                "N = 1 AND [AVASTIN] IS NULL) OR ([AVASTIN] = @Original_AVASTIN)) AND ((@IsNull_L"& _ 
                "UCENTIS = 1 AND [LUCENTIS] IS NULL) OR ([LUCENTIS] = @Original_LUCENTIS)) AND (("& _ 
                "@IsNull_AN_TOPICAL = 1 AND [AN_TOPICAL] IS NULL) OR ([AN_TOPICAL] = @Original_AN"& _ 
                "_TOPICAL)) AND ((@IsNull_AN_SUBCONJUNCTIVAL = 1 AND [AN_SUBCONJUNCTIVAL] IS NULL"& _ 
                ") OR ([AN_SUBCONJUNCTIVAL] = @Original_AN_SUBCONJUNCTIVAL)) AND ((@IsNull_FULL_P"& _ 
                "RE_OP = 1 AND [FULL_PRE_OP] IS NULL) OR ([FULL_PRE_OP] = @Original_FULL_PRE_OP))"& _ 
                " AND ((@IsNull_PATIENT_FULL = 1 AND [PATIENT_FULL] IS NULL) OR ([PATIENT_FULL] ="& _ 
                " @Original_PATIENT_FULL)) AND ((@IsNull_INTRA_TRIAMCINOLONE = 1 AND [INTRA_TRIAM"& _ 
                "CINOLONE] IS NULL) OR ([INTRA_TRIAMCINOLONE] = @Original_INTRA_TRIAMCINOLONE)) A"& _ 
                "ND ((@IsNull_INTRA_TRIAM_DOSE = 1 AND [INTRA_TRIAM_DOSE] IS NULL) OR ([INTRA_TRI"& _ 
                "AM_DOSE] = @Original_INTRA_TRIAM_DOSE)) AND ((@IsNull_INTRA_AVASTIN = 1 AND [INT"& _ 
                "RA_AVASTIN] IS NULL) OR ([INTRA_AVASTIN] = @Original_INTRA_AVASTIN)) AND ((@IsNu"& _ 
                "ll_INTRA_AVASTIN_DOSE = 1 AND [INTRA_AVASTIN_DOSE] IS NULL) OR ([INTRA_AVASTIN_D"& _ 
                "OSE] = @Original_INTRA_AVASTIN_DOSE)) AND ((@IsNull_INTRA_LUCENTIS = 1 AND [INTR"& _ 
                "A_LUCENTIS] IS NULL) OR ([INTRA_LUCENTIS] = @Original_INTRA_LUCENTIS)) AND ((@Is"& _ 
                "Null_INTRA_LUCENTIS_DOSE = 1 AND [INTRA_LUCENTIS_DOSE] IS NULL) OR ([INTRA_LUCEN"& _ 
                "TIS_DOSE] = @Original_INTRA_LUCENTIS_DOSE)) AND ((@IsNull_ALPHAGAM = 1 AND [ALPH"& _ 
                "AGAM] IS NULL) OR ([ALPHAGAM] = @Original_ALPHAGAM)) AND ((@IsNull_NEO_SYNEPHRIN"& _ 
                "E = 1 AND [NEO_SYNEPHRINE] IS NULL) OR ([NEO_SYNEPHRINE] = @Original_NEO_SYNEPHR"& _ 
                "INE)) AND ((@IsNull_POLY_OPH_TROPICAL = 1 AND [POLY_OPH_TROPICAL] IS NULL) OR (["& _ 
                "POLY_OPH_TROPICAL] = @Original_POLY_OPH_TROPICAL)) AND ((@IsNull_VIGAMOX_TROPICA"& _ 
                "L = 1 AND [VIGAMOX_TROPICAL] IS NULL) OR ([VIGAMOX_TROPICAL] = @Original_VIGAMOX"& _ 
                "_TROPICAL)) AND ((@IsNull_VIGAMO_TROPICAL_NOTE = 1 AND [VIGAMO_TROPICAL_NOTE] IS"& _ 
                " NULL) OR ([VIGAMO_TROPICAL_NOTE] = @Original_VIGAMO_TROPICAL_NOTE)) AND ((@IsNu"& _ 
                "ll_MAXITROL_EYE_OITMENT = 1 AND [MAXITROL_EYE_OITMENT] IS NULL) OR ([MAXITROL_EY"& _ 
                "E_OITMENT] = @Original_MAXITROL_EYE_OITMENT)) AND ((@IsNull_PATH = 1 AND [PATH] "& _ 
                "IS NULL) OR ([PATH] = @Original_PATH)) AND ((@IsNull_NO_COMPLICATION = 1 AND [NO"& _ 
                "_COMPLICATION] IS NULL) OR ([NO_COMPLICATION] = @Original_NO_COMPLICATION)) AND "& _ 
                "((@IsNull_NOTE = 1 AND [NOTE] IS NULL) OR ([NOTE] = @Original_NOTE)) AND ((@IsNu"& _ 
                "ll_SURGEON_SIGNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE"& _ 
                "] = @Original_SURGEON_SIGNATURE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT INJECTION_ID, CREATE_DATE, OPERA_NO,"& _ 
                " PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB,"& _ 
                " CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, IVTA, AVASTIN, LUCENTIS, AN_TOPICAL,"& _ 
                " AN_SUBCONJUNCTIVAL, FULL_PRE_OP, PATIENT_FULL, INTRA_TRIAMCINOLONE, INTRA_TRIAM"& _ 
                "_DOSE, INTRA_AVASTIN, INTRA_AVASTIN_DOSE, INTRA_LUCENTIS, INTRA_LUCENTIS_DOSE, A"& _ 
                "LPHAGAM, NEO_SYNEPHRINE, POLY_OPH_TROPICAL, VIGAMOX_TROPICAL, VIGAMO_TROPICAL_NO"& _ 
                "TE, MAXITROL_EYE_OITMENT, PATH, NO_COMPLICATION, NOTE, SURGEON_SIGNATURE FROM S_"& _ 
                "OPER_INJECTION WHERE (INJECTION_ID = @INJECTION_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVTA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AVASTIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AVASTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LUCENTIS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUCENTIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FULL_PRE_OP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FULL_PRE_OP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_FULL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_FULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_TRIAMCINOLONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAMCINOLONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_TRIAM_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAM_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_AVASTIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_AVASTIN_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_LUCENTIS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_LUCENTIS_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALPHAGAM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALPHAGAM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEO_SYNEPHRINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEO_SYNEPHRINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POLY_OPH_TROPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POLY_OPH_TROPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIGAMOX_TROPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMOX_TROPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIGAMO_TROPICAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMO_TROPICAL_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAXITROL_EYE_OITMENT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAXITROL_EYE_OITMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO_COMPLICATION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_COMPLICATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INJECTION_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "INJECTION_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVTA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AVASTIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AVASTIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AVASTIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AVASTIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LUCENTIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUCENTIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LUCENTIS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LUCENTIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FULL_PRE_OP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FULL_PRE_OP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FULL_PRE_OP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FULL_PRE_OP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_FULL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_FULL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_FULL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_FULL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_TRIAMCINOLONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAMCINOLONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_TRIAMCINOLONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAMCINOLONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_TRIAM_DOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAM_DOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_TRIAM_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAM_DOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_AVASTIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_AVASTIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_AVASTIN_DOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN_DOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_AVASTIN_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN_DOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_LUCENTIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_LUCENTIS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRA_LUCENTIS_DOSE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS_DOSE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRA_LUCENTIS_DOSE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS_DOSE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ALPHAGAM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALPHAGAM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ALPHAGAM", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALPHAGAM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NEO_SYNEPHRINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEO_SYNEPHRINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NEO_SYNEPHRINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NEO_SYNEPHRINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_POLY_OPH_TROPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POLY_OPH_TROPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_POLY_OPH_TROPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POLY_OPH_TROPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIGAMOX_TROPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMOX_TROPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIGAMOX_TROPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMOX_TROPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIGAMO_TROPICAL_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMO_TROPICAL_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIGAMO_TROPICAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMO_TROPICAL_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MAXITROL_EYE_OITMENT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAXITROL_EYE_OITMENT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MAXITROL_EYE_OITMENT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MAXITROL_EYE_OITMENT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NO_COMPLICATION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_COMPLICATION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NO_COMPLICATION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_COMPLICATION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INJECTION_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "INJECTION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT INJECTION_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX"& _ 
                ", PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGN"& _ 
                "OSIS, IVTA, AVASTIN, LUCENTIS, AN_TOPICAL, AN_SUBCONJUNCTIVAL, FULL_PRE_OP, PATI"& _ 
                "ENT_FULL, INTRA_TRIAMCINOLONE, INTRA_TRIAM_DOSE, INTRA_AVASTIN, INTRA_AVASTIN_DO"& _ 
                "SE, INTRA_LUCENTIS, INTRA_LUCENTIS_DOSE, ALPHAGAM, NEO_SYNEPHRINE, POLY_OPH_TROP"& _ 
                "ICAL, VIGAMOX_TROPICAL, VIGAMO_TROPICAL_NOTE, MAXITROL_EYE_OITMENT, PATH, NO_COM"& _ 
                "PLICATION, NOTE, SURGEON_SIGNATURE FROM dbo.S_OPER_INJECTION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT INJECTION_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX"& _ 
                ", PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGN"& _ 
                "OSIS, IVTA, AVASTIN, LUCENTIS, AN_TOPICAL, AN_SUBCONJUNCTIVAL, FULL_PRE_OP, PATI"& _ 
                "ENT_FULL, INTRA_TRIAMCINOLONE, INTRA_TRIAM_DOSE, INTRA_AVASTIN, INTRA_AVASTIN_DO"& _ 
                "SE, INTRA_LUCENTIS, INTRA_LUCENTIS_DOSE, ALPHAGAM, NEO_SYNEPHRINE, POLY_OPH_TROP"& _ 
                "ICAL, VIGAMOX_TROPICAL, VIGAMO_TROPICAL_NOTE, MAXITROL_EYE_OITMENT, PATH, NO_COM"& _ 
                "PLICATION, NOTE, SURGEON_SIGNATURE FROM dbo.S_OPER_INJECTION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE INJECTION_ID"& _ 
                "=@INJECTION_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INJECTION_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "INJECTION_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [dbo].[S_OPER_INJECTION] ([CREATE_DATE], [OPERA_NO], [PATIENT_NO], [P"& _ 
                "ATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], [SCRUB], [C"& _ 
                "IRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [IVTA], [AVASTIN], [LUCENTIS], [A"& _ 
                "N_TOPICAL], [AN_SUBCONJUNCTIVAL], [FULL_PRE_OP], [PATIENT_FULL], [INTRA_TRIAMCIN"& _ 
                "OLONE], [INTRA_TRIAM_DOSE], [INTRA_AVASTIN], [INTRA_AVASTIN_DOSE], [INTRA_LUCENT"& _ 
                "IS], [INTRA_LUCENTIS_DOSE], [ALPHAGAM], [NEO_SYNEPHRINE], [POLY_OPH_TROPICAL], ["& _ 
                "VIGAMOX_TROPICAL], [VIGAMO_TROPICAL_NOTE], [MAXITROL_EYE_OITMENT], [PATH], [NO_C"& _ 
                "OMPLICATION], [NOTE], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PAT"& _ 
                "IENT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @SCRU"& _ 
                "B, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @IVTA, @AVASTIN, @LUCENTIS, @AN"& _ 
                "_TOPICAL, @AN_SUBCONJUNCTIVAL, @FULL_PRE_OP, @PATIENT_FULL, @INTRA_TRIAMCINOLONE"& _ 
                ", @INTRA_TRIAM_DOSE, @INTRA_AVASTIN, @INTRA_AVASTIN_DOSE, @INTRA_LUCENTIS, @INTR"& _ 
                "A_LUCENTIS_DOSE, @ALPHAGAM, @NEO_SYNEPHRINE, @POLY_OPH_TROPICAL, @VIGAMOX_TROPIC"& _ 
                "AL, @VIGAMO_TROPICAL_NOTE, @MAXITROL_EYE_OITMENT, @PATH, @NO_COMPLICATION, @NOTE"& _ 
                ", @SURGEON_SIGNATURE)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVTA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IVTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AVASTIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "AVASTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LUCENTIS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LUCENTIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FULL_PRE_OP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "FULL_PRE_OP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_FULL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_FULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_TRIAMCINOLONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAMCINOLONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_TRIAM_DOSE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAM_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_AVASTIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_AVASTIN_DOSE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_LUCENTIS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_LUCENTIS_DOSE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALPHAGAM", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ALPHAGAM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEO_SYNEPHRINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NEO_SYNEPHRINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POLY_OPH_TROPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "POLY_OPH_TROPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIGAMOX_TROPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMOX_TROPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIGAMO_TROPICAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMO_TROPICAL_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAXITROL_EYE_OITMENT", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "MAXITROL_EYE_OITMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATH", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO_COMPLICATION", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_COMPLICATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE [dbo].[S_OPER_INJECTION] SET  [START_TIME] = @START_TIME, [SURGEON] = @SUR"& _ 
                "GEON, [SCRUB] = @SCRUB, [CIRCULATING] = @CIRCULATING, [ANESTHESIONLOGIST] = @ANE"& _ 
                "STHESIONLOGIST, [DIAGNOSIS] = @DIAGNOSIS, [IVTA] = @IVTA, [AVASTIN] = @AVASTIN, "& _ 
                "[LUCENTIS] = @LUCENTIS, [AN_TOPICAL] = @AN_TOPICAL, [AN_SUBCONJUNCTIVAL] = @AN_S"& _ 
                "UBCONJUNCTIVAL, [FULL_PRE_OP] = @FULL_PRE_OP, [PATIENT_FULL] = @PATIENT_FULL, [I"& _ 
                "NTRA_TRIAMCINOLONE] = @INTRA_TRIAMCINOLONE, [INTRA_TRIAM_DOSE] = @INTRA_TRIAM_DO"& _ 
                "SE, [INTRA_AVASTIN] = @INTRA_AVASTIN, [INTRA_AVASTIN_DOSE] = @INTRA_AVASTIN_DOSE"& _ 
                ", [INTRA_LUCENTIS] = @INTRA_LUCENTIS, [INTRA_LUCENTIS_DOSE] = @INTRA_LUCENTIS_DO"& _ 
                "SE, [ALPHAGAM] = @ALPHAGAM, [NEO_SYNEPHRINE] = @NEO_SYNEPHRINE, [POLY_OPH_TROPIC"& _ 
                "AL] = @POLY_OPH_TROPICAL, [VIGAMOX_TROPICAL] = @VIGAMOX_TROPICAL, [VIGAMO_TROPIC"& _ 
                "AL_NOTE] = @VIGAMO_TROPICAL_NOTE, [MAXITROL_EYE_OITMENT] = @MAXITROL_EYE_OITMENT"& _ 
                ", [PATH] = @PATH, [NO_COMPLICATION] = @NO_COMPLICATION, [NOTE] = @NOTE, [SURGEON"& _ 
                "_SIGNATURE] = @SURGEON_SIGNATURE WHERE ([INJECTION_ID] = @Original_INJECTION_ID)"& _ 
                " "
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVTA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IVTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AVASTIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "AVASTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LUCENTIS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LUCENTIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FULL_PRE_OP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "FULL_PRE_OP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_FULL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_FULL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_TRIAMCINOLONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAMCINOLONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_TRIAM_DOSE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_TRIAM_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_AVASTIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_AVASTIN_DOSE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_AVASTIN_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_LUCENTIS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRA_LUCENTIS_DOSE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRA_LUCENTIS_DOSE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALPHAGAM", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ALPHAGAM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NEO_SYNEPHRINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NEO_SYNEPHRINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POLY_OPH_TROPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "POLY_OPH_TROPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIGAMOX_TROPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMOX_TROPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIGAMO_TROPICAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "VIGAMO_TROPICAL_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MAXITROL_EYE_OITMENT", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "MAXITROL_EYE_OITMENT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATH", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NO_COMPLICATION", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NO_COMPLICATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INJECTION_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "INJECTION_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.S_OPER_INJECTIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.S_OPER_INJECTIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_INJECTIONDataTable = New DSOPERATIONNOTE.S_OPER_INJECTIONDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.S_OPER_INJECTIONDataTable, ByVal INJECTION_ID As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(INJECTION_ID,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectInjectionOp(ByVal INJECTION_ID As Decimal) As DSOPERATIONNOTE.S_OPER_INJECTIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(INJECTION_ID,Decimal)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_INJECTIONDataTable = New DSOPERATIONNOTE.S_OPER_INJECTIONDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.S_OPER_INJECTIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "S_OPER_INJECTION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_INJECTION_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_IVTA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FULL_PRE_OP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PATIENT_FULL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_TRIAMCINOLONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_TRIAM_DOSE As String,  _
                    ByVal Original_INTRA_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_AVASTIN_DOSE As String,  _
                    ByVal Original_INTRA_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_LUCENTIS_DOSE As String,  _
                    ByVal Original_ALPHAGAM As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NEO_SYNEPHRINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_POLY_OPH_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIGAMOX_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal Original_MAXITROL_EYE_OITMENT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PATH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NO_COMPLICATION As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NOTE As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_INJECTION_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_IVTA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_IVTA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_AVASTIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_AVASTIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_LUCENTIS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_LUCENTIS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_FULL_PRE_OP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_FULL_PRE_OP.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_FULL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_PATIENT_FULL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_INTRA_TRIAMCINOLONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_INTRA_TRIAMCINOLONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_INTRA_TRIAM_DOSE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_INTRA_TRIAM_DOSE,String)
            End If
            If (Original_INTRA_AVASTIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_INTRA_AVASTIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_INTRA_AVASTIN_DOSE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_INTRA_AVASTIN_DOSE,String)
            End If
            If (Original_INTRA_LUCENTIS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_INTRA_LUCENTIS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_INTRA_LUCENTIS_DOSE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_INTRA_LUCENTIS_DOSE,String)
            End If
            If (Original_ALPHAGAM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_ALPHAGAM.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_NEO_SYNEPHRINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_NEO_SYNEPHRINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_POLY_OPH_TROPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_POLY_OPH_TROPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGAMOX_TROPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_VIGAMOX_TROPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGAMO_TROPICAL_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_VIGAMO_TROPICAL_NOTE,String)
            End If
            If (Original_MAXITROL_EYE_OITMENT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_MAXITROL_EYE_OITMENT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_PATH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_PATH.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_NO_COMPLICATION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_NO_COMPLICATION.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_NOTE,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal IVTA As Global.System.Nullable(Of Boolean),  _
                    ByVal AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FULL_PRE_OP As Global.System.Nullable(Of Boolean),  _
                    ByVal PATIENT_FULL As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAMCINOLONE As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAM_DOSE As String,  _
                    ByVal INTRA_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_AVASTIN_DOSE As String,  _
                    ByVal INTRA_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_LUCENTIS_DOSE As String,  _
                    ByVal ALPHAGAM As Global.System.Nullable(Of Boolean),  _
                    ByVal NEO_SYNEPHRINE As Global.System.Nullable(Of Boolean),  _
                    ByVal POLY_OPH_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMOX_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal MAXITROL_EYE_OITMENT As Global.System.Nullable(Of Boolean),  _
                    ByVal PATH As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_COMPLICATION As Global.System.Nullable(Of Boolean),  _
                    ByVal NOTE As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (IVTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(IVTA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AVASTIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(AVASTIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LUCENTIS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(LUCENTIS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (AN_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FULL_PRE_OP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(FULL_PRE_OP.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_FULL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(PATIENT_FULL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (INTRA_TRIAMCINOLONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(INTRA_TRIAMCINOLONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (INTRA_TRIAM_DOSE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(INTRA_TRIAM_DOSE,String)
            End If
            If (INTRA_AVASTIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(INTRA_AVASTIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (INTRA_AVASTIN_DOSE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(INTRA_AVASTIN_DOSE,String)
            End If
            If (INTRA_LUCENTIS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(INTRA_LUCENTIS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (INTRA_LUCENTIS_DOSE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(INTRA_LUCENTIS_DOSE,String)
            End If
            If (ALPHAGAM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(ALPHAGAM.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (NEO_SYNEPHRINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(NEO_SYNEPHRINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (POLY_OPH_TROPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(POLY_OPH_TROPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (VIGAMOX_TROPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(VIGAMOX_TROPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (VIGAMO_TROPICAL_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(VIGAMO_TROPICAL_NOTE,String)
            End If
            If (MAXITROL_EYE_OITMENT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(MAXITROL_EYE_OITMENT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (PATH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(PATH.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (NO_COMPLICATION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(NO_COMPLICATION.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(NOTE,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal IVTA As Global.System.Nullable(Of Boolean),  _
                    ByVal AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FULL_PRE_OP As Global.System.Nullable(Of Boolean),  _
                    ByVal PATIENT_FULL As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAMCINOLONE As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAM_DOSE As String,  _
                    ByVal INTRA_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_AVASTIN_DOSE As String,  _
                    ByVal INTRA_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_LUCENTIS_DOSE As String,  _
                    ByVal ALPHAGAM As Global.System.Nullable(Of Boolean),  _
                    ByVal NEO_SYNEPHRINE As Global.System.Nullable(Of Boolean),  _
                    ByVal POLY_OPH_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMOX_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal MAXITROL_EYE_OITMENT As Global.System.Nullable(Of Boolean),  _
                    ByVal PATH As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_COMPLICATION As Global.System.Nullable(Of Boolean),  _
                    ByVal NOTE As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_INJECTION_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_IVTA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FULL_PRE_OP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PATIENT_FULL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_TRIAMCINOLONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_TRIAM_DOSE As String,  _
                    ByVal Original_INTRA_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_AVASTIN_DOSE As String,  _
                    ByVal Original_INTRA_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_LUCENTIS_DOSE As String,  _
                    ByVal Original_ALPHAGAM As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NEO_SYNEPHRINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_POLY_OPH_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIGAMOX_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal Original_MAXITROL_EYE_OITMENT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PATH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NO_COMPLICATION As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NOTE As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String,  _
                    ByVal INJECTION_ID As Decimal) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (IVTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(IVTA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AVASTIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(AVASTIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LUCENTIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(LUCENTIS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FULL_PRE_OP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(FULL_PRE_OP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_FULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(PATIENT_FULL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (INTRA_TRIAMCINOLONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(INTRA_TRIAMCINOLONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (INTRA_TRIAM_DOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(INTRA_TRIAM_DOSE,String)
            End If
            If (INTRA_AVASTIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(INTRA_AVASTIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (INTRA_AVASTIN_DOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(INTRA_AVASTIN_DOSE,String)
            End If
            If (INTRA_LUCENTIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(INTRA_LUCENTIS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (INTRA_LUCENTIS_DOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(INTRA_LUCENTIS_DOSE,String)
            End If
            If (ALPHAGAM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(ALPHAGAM.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (NEO_SYNEPHRINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(NEO_SYNEPHRINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (POLY_OPH_TROPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(POLY_OPH_TROPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (VIGAMOX_TROPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(VIGAMOX_TROPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (VIGAMO_TROPICAL_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(VIGAMO_TROPICAL_NOTE,String)
            End If
            If (MAXITROL_EYE_OITMENT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(MAXITROL_EYE_OITMENT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (PATH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(PATH.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (NO_COMPLICATION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(NO_COMPLICATION.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(NOTE,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_INJECTION_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_IVTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_IVTA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_AVASTIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_AVASTIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_LUCENTIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_LUCENTIS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_FULL_PRE_OP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_FULL_PRE_OP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_FULL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_PATIENT_FULL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_INTRA_TRIAMCINOLONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_INTRA_TRIAMCINOLONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_INTRA_TRIAM_DOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_INTRA_TRIAM_DOSE,String)
            End If
            If (Original_INTRA_AVASTIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_INTRA_AVASTIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_INTRA_AVASTIN_DOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_INTRA_AVASTIN_DOSE,String)
            End If
            If (Original_INTRA_LUCENTIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_INTRA_LUCENTIS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_INTRA_LUCENTIS_DOSE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_INTRA_LUCENTIS_DOSE,String)
            End If
            If (Original_ALPHAGAM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_ALPHAGAM.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_NEO_SYNEPHRINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_NEO_SYNEPHRINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_POLY_OPH_TROPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_POLY_OPH_TROPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGAMOX_TROPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_VIGAMOX_TROPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_VIGAMO_TROPICAL_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_VIGAMO_TROPICAL_NOTE,String)
            End If
            If (Original_MAXITROL_EYE_OITMENT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_MAXITROL_EYE_OITMENT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_PATH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_PATH.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_NO_COMPLICATION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_NO_COMPLICATION.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_NOTE,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(106).Value = CType(INJECTION_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal IVTA As Global.System.Nullable(Of Boolean),  _
                    ByVal AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FULL_PRE_OP As Global.System.Nullable(Of Boolean),  _
                    ByVal PATIENT_FULL As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAMCINOLONE As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAM_DOSE As String,  _
                    ByVal INTRA_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_AVASTIN_DOSE As String,  _
                    ByVal INTRA_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_LUCENTIS_DOSE As String,  _
                    ByVal ALPHAGAM As Global.System.Nullable(Of Boolean),  _
                    ByVal NEO_SYNEPHRINE As Global.System.Nullable(Of Boolean),  _
                    ByVal POLY_OPH_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMOX_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal MAXITROL_EYE_OITMENT As Global.System.Nullable(Of Boolean),  _
                    ByVal PATH As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_COMPLICATION As Global.System.Nullable(Of Boolean),  _
                    ByVal NOTE As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_INJECTION_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_IVTA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FULL_PRE_OP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PATIENT_FULL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_TRIAMCINOLONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_TRIAM_DOSE As String,  _
                    ByVal Original_INTRA_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_AVASTIN_DOSE As String,  _
                    ByVal Original_INTRA_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INTRA_LUCENTIS_DOSE As String,  _
                    ByVal Original_ALPHAGAM As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NEO_SYNEPHRINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_POLY_OPH_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIGAMOX_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal Original_MAXITROL_EYE_OITMENT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PATH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NO_COMPLICATION As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NOTE As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Return Me.Update(CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, IVTA, AVASTIN, LUCENTIS, AN_TOPICAL, AN_SUBCONJUNCTIVAL, FULL_PRE_OP, PATIENT_FULL, INTRA_TRIAMCINOLONE, INTRA_TRIAM_DOSE, INTRA_AVASTIN, INTRA_AVASTIN_DOSE, INTRA_LUCENTIS, INTRA_LUCENTIS_DOSE, ALPHAGAM, NEO_SYNEPHRINE, POLY_OPH_TROPICAL, VIGAMOX_TROPICAL, VIGAMO_TROPICAL_NOTE, MAXITROL_EYE_OITMENT, PATH, NO_COMPLICATION, NOTE, SURGEON_SIGNATURE, Original_INJECTION_ID, Original_CREATE_DATE, Original_OPERA_NO, Original_PATIENT_NO, Original_PATIENT_NAME, Original_PATIENT_SEX, Original_PATIENT_AGE, Original_START_TIME, Original_SURGEON, Original_SCRUB, Original_CIRCULATING, Original_ANESTHESIONLOGIST, Original_DIAGNOSIS, Original_IVTA, Original_AVASTIN, Original_LUCENTIS, Original_AN_TOPICAL, Original_AN_SUBCONJUNCTIVAL, Original_FULL_PRE_OP, Original_PATIENT_FULL, Original_INTRA_TRIAMCINOLONE, Original_INTRA_TRIAM_DOSE, Original_INTRA_AVASTIN, Original_INTRA_AVASTIN_DOSE, Original_INTRA_LUCENTIS, Original_INTRA_LUCENTIS_DOSE, Original_ALPHAGAM, Original_NEO_SYNEPHRINE, Original_POLY_OPH_TROPICAL, Original_VIGAMOX_TROPICAL, Original_VIGAMO_TROPICAL_NOTE, Original_MAXITROL_EYE_OITMENT, Original_PATH, Original_NO_COMPLICATION, Original_NOTE, Original_SURGEON_SIGNATURE, Original_INJECTION_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertNewInjection( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal IVTA As Global.System.Nullable(Of Boolean),  _
                    ByVal AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FULL_PRE_OP As Global.System.Nullable(Of Boolean),  _
                    ByVal PATIENT_FULL As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAMCINOLONE As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAM_DOSE As String,  _
                    ByVal INTRA_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_AVASTIN_DOSE As String,  _
                    ByVal INTRA_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_LUCENTIS_DOSE As String,  _
                    ByVal ALPHAGAM As Global.System.Nullable(Of Boolean),  _
                    ByVal NEO_SYNEPHRINE As Global.System.Nullable(Of Boolean),  _
                    ByVal POLY_OPH_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMOX_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal MAXITROL_EYE_OITMENT As Global.System.Nullable(Of Boolean),  _
                    ByVal PATH As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_COMPLICATION As Global.System.Nullable(Of Boolean),  _
                    ByVal NOTE As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (IVTA.HasValue = true) Then
                command.Parameters(12).Value = CType(IVTA.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (AVASTIN.HasValue = true) Then
                command.Parameters(13).Value = CType(AVASTIN.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LUCENTIS.HasValue = true) Then
                command.Parameters(14).Value = CType(LUCENTIS.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (AN_TOPICAL.HasValue = true) Then
                command.Parameters(15).Value = CType(AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (AN_SUBCONJUNCTIVAL.HasValue = true) Then
                command.Parameters(16).Value = CType(AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (FULL_PRE_OP.HasValue = true) Then
                command.Parameters(17).Value = CType(FULL_PRE_OP.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_FULL.HasValue = true) Then
                command.Parameters(18).Value = CType(PATIENT_FULL.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (INTRA_TRIAMCINOLONE.HasValue = true) Then
                command.Parameters(19).Value = CType(INTRA_TRIAMCINOLONE.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (INTRA_TRIAM_DOSE Is Nothing) Then
                command.Parameters(20).Value = Global.System.DBNull.Value
            Else
                command.Parameters(20).Value = CType(INTRA_TRIAM_DOSE,String)
            End If
            If (INTRA_AVASTIN.HasValue = true) Then
                command.Parameters(21).Value = CType(INTRA_AVASTIN.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (INTRA_AVASTIN_DOSE Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(INTRA_AVASTIN_DOSE,String)
            End If
            If (INTRA_LUCENTIS.HasValue = true) Then
                command.Parameters(23).Value = CType(INTRA_LUCENTIS.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (INTRA_LUCENTIS_DOSE Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(INTRA_LUCENTIS_DOSE,String)
            End If
            If (ALPHAGAM.HasValue = true) Then
                command.Parameters(25).Value = CType(ALPHAGAM.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (NEO_SYNEPHRINE.HasValue = true) Then
                command.Parameters(26).Value = CType(NEO_SYNEPHRINE.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (POLY_OPH_TROPICAL.HasValue = true) Then
                command.Parameters(27).Value = CType(POLY_OPH_TROPICAL.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (VIGAMOX_TROPICAL.HasValue = true) Then
                command.Parameters(28).Value = CType(VIGAMOX_TROPICAL.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (VIGAMO_TROPICAL_NOTE Is Nothing) Then
                command.Parameters(29).Value = Global.System.DBNull.Value
            Else
                command.Parameters(29).Value = CType(VIGAMO_TROPICAL_NOTE,String)
            End If
            If (MAXITROL_EYE_OITMENT.HasValue = true) Then
                command.Parameters(30).Value = CType(MAXITROL_EYE_OITMENT.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (PATH.HasValue = true) Then
                command.Parameters(31).Value = CType(PATH.Value,Boolean)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (NO_COMPLICATION.HasValue = true) Then
                command.Parameters(32).Value = CType(NO_COMPLICATION.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (NOTE Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(NOTE,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(34).Value = Global.System.DBNull.Value
            Else
                command.Parameters(34).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateInjection( _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal IVTA As Global.System.Nullable(Of Boolean),  _
                    ByVal AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FULL_PRE_OP As Global.System.Nullable(Of Boolean),  _
                    ByVal PATIENT_FULL As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAMCINOLONE As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_TRIAM_DOSE As String,  _
                    ByVal INTRA_AVASTIN As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_AVASTIN_DOSE As String,  _
                    ByVal INTRA_LUCENTIS As Global.System.Nullable(Of Boolean),  _
                    ByVal INTRA_LUCENTIS_DOSE As String,  _
                    ByVal ALPHAGAM As Global.System.Nullable(Of Boolean),  _
                    ByVal NEO_SYNEPHRINE As Global.System.Nullable(Of Boolean),  _
                    ByVal POLY_OPH_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMOX_TROPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIGAMO_TROPICAL_NOTE As String,  _
                    ByVal MAXITROL_EYE_OITMENT As Global.System.Nullable(Of Boolean),  _
                    ByVal PATH As Global.System.Nullable(Of Boolean),  _
                    ByVal NO_COMPLICATION As Global.System.Nullable(Of Boolean),  _
                    ByVal NOTE As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_INJECTION_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (START_TIME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(DIAGNOSIS,String)
            End If
            If (IVTA.HasValue = true) Then
                command.Parameters(6).Value = CType(IVTA.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (AVASTIN.HasValue = true) Then
                command.Parameters(7).Value = CType(AVASTIN.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (LUCENTIS.HasValue = true) Then
                command.Parameters(8).Value = CType(LUCENTIS.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (AN_TOPICAL.HasValue = true) Then
                command.Parameters(9).Value = CType(AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (AN_SUBCONJUNCTIVAL.HasValue = true) Then
                command.Parameters(10).Value = CType(AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (FULL_PRE_OP.HasValue = true) Then
                command.Parameters(11).Value = CType(FULL_PRE_OP.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_FULL.HasValue = true) Then
                command.Parameters(12).Value = CType(PATIENT_FULL.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (INTRA_TRIAMCINOLONE.HasValue = true) Then
                command.Parameters(13).Value = CType(INTRA_TRIAMCINOLONE.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (INTRA_TRIAM_DOSE Is Nothing) Then
                command.Parameters(14).Value = Global.System.DBNull.Value
            Else
                command.Parameters(14).Value = CType(INTRA_TRIAM_DOSE,String)
            End If
            If (INTRA_AVASTIN.HasValue = true) Then
                command.Parameters(15).Value = CType(INTRA_AVASTIN.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (INTRA_AVASTIN_DOSE Is Nothing) Then
                command.Parameters(16).Value = Global.System.DBNull.Value
            Else
                command.Parameters(16).Value = CType(INTRA_AVASTIN_DOSE,String)
            End If
            If (INTRA_LUCENTIS.HasValue = true) Then
                command.Parameters(17).Value = CType(INTRA_LUCENTIS.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (INTRA_LUCENTIS_DOSE Is Nothing) Then
                command.Parameters(18).Value = Global.System.DBNull.Value
            Else
                command.Parameters(18).Value = CType(INTRA_LUCENTIS_DOSE,String)
            End If
            If (ALPHAGAM.HasValue = true) Then
                command.Parameters(19).Value = CType(ALPHAGAM.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (NEO_SYNEPHRINE.HasValue = true) Then
                command.Parameters(20).Value = CType(NEO_SYNEPHRINE.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (POLY_OPH_TROPICAL.HasValue = true) Then
                command.Parameters(21).Value = CType(POLY_OPH_TROPICAL.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (VIGAMOX_TROPICAL.HasValue = true) Then
                command.Parameters(22).Value = CType(VIGAMOX_TROPICAL.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VIGAMO_TROPICAL_NOTE Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(VIGAMO_TROPICAL_NOTE,String)
            End If
            If (MAXITROL_EYE_OITMENT.HasValue = true) Then
                command.Parameters(24).Value = CType(MAXITROL_EYE_OITMENT.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (PATH.HasValue = true) Then
                command.Parameters(25).Value = CType(PATH.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (NO_COMPLICATION.HasValue = true) Then
                command.Parameters(26).Value = CType(NO_COMPLICATION.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (NOTE Is Nothing) Then
                command.Parameters(27).Value = Global.System.DBNull.Value
            Else
                command.Parameters(27).Value = CType(NOTE,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(SURGEON_SIGNATURE,String)
            End If
            command.Parameters(29).Value = CType(Original_INJECTION_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_OPER_GENERAL_OPERATIVETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_OPER_GENERAL_OPERATIVE"
            tableMapping.ColumnMappings.Add("GENERAL_ID", "GENERAL_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("OPERA_NO", "OPERA_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NO", "PATIENT_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NAME", "PATIENT_NAME")
            tableMapping.ColumnMappings.Add("PATIENT_SEX", "PATIENT_SEX")
            tableMapping.ColumnMappings.Add("PATIENT_AGE", "PATIENT_AGE")
            tableMapping.ColumnMappings.Add("START_TIME", "START_TIME")
            tableMapping.ColumnMappings.Add("SURGEON", "SURGEON")
            tableMapping.ColumnMappings.Add("SCRUB", "SCRUB")
            tableMapping.ColumnMappings.Add("CIRCULATING", "CIRCULATING")
            tableMapping.ColumnMappings.Add("ANESTHESIONLOGIST", "ANESTHESIONLOGIST")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("S_AN_GA", "S_AN_GA")
            tableMapping.ColumnMappings.Add("S_AN_NEURO", "S_AN_NEURO")
            tableMapping.ColumnMappings.Add("S_AN_STANDBY", "S_AN_STANDBY")
            tableMapping.ColumnMappings.Add("S_AN_RETROBULBAR", "S_AN_RETROBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_PERIBULBAR", "S_AN_PERIBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_TOPICAL", "S_AN_TOPICAL")
            tableMapping.ColumnMappings.Add("S_AN_SUBCONJUNCTIVAL", "S_AN_SUBCONJUNCTIVAL")
            tableMapping.ColumnMappings.Add("OTHER_PROCEDURES", "OTHER_PROCEDURES")
            tableMapping.ColumnMappings.Add("SUB_GENTAL", "SUB_GENTAL")
            tableMapping.ColumnMappings.Add("SUB_CEFAZOLIN", "SUB_CEFAZOLIN")
            tableMapping.ColumnMappings.Add("SUB_DEXAMETHASONE", "SUB_DEXAMETHASONE")
            tableMapping.ColumnMappings.Add("SUB_OTHER", "SUB_OTHER")
            tableMapping.ColumnMappings.Add("TOPICAL_MAXITRAL", "TOPICAL_MAXITRAL")
            tableMapping.ColumnMappings.Add("TOPICAL_PILOCARPINE", "TOPICAL_PILOCARPINE")
            tableMapping.ColumnMappings.Add("TOPICAL_ATROPINE", "TOPICAL_ATROPINE")
            tableMapping.ColumnMappings.Add("TOPICAL_OTHER", "TOPICAL_OTHER")
            tableMapping.ColumnMappings.Add("SURGEON_SIGNATURE", "SURGEON_SIGNATURE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[S_OPER_GENERAL_OPERATIVE] WHERE (([GENERAL_ID] = @Original_GEN"& _ 
                "ERAL_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DA"& _ 
                "TE] = @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL)"& _ 
                " OR ([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [PATIENT"& _ 
                "_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATIENT_NA"& _ 
                "ME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_NAME))"& _ 
                " AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX] = @O"& _ 
                "riginal_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS NULL) O"& _ 
                "R ([PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AND [STA"& _ 
                "RT_TIME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_SURGEO"& _ 
                "N = 1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ((@IsNull_S"& _ 
                "CRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_CIRC"& _ 
                "ULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCULATING"& _ 
                ")) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ([ANE"& _ 
                "STHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 AND "& _ 
                "[DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_S_AN_"& _ 
                "GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AND ((@IsNull_"& _ 
                "S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @Original_S_AN_NEURO"& _ 
                ")) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_AN_STANDBY]"& _ 
                " = @Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_AN_RETROBU"& _ 
                "LBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBULBAR)) AND ((@IsNu"& _ 
                "ll_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBULBAR] = @O"& _ 
                "riginal_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOPICAL] IS N"& _ 
                "ULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNull_S_AN_SUBCONJUNC"& _ 
                "TIVAL = 1 AND [S_AN_SUBCONJUNCTIVAL] IS NULL) OR ([S_AN_SUBCONJUNCTIVAL] = @Orig"& _ 
                "inal_S_AN_SUBCONJUNCTIVAL)) AND ((@IsNull_OTHER_PROCEDURES = 1 AND [OTHER_PROCED"& _ 
                "URES] IS NULL) OR ([OTHER_PROCEDURES] = @Original_OTHER_PROCEDURES)) AND ((@IsNu"& _ 
                "ll_SUB_GENTAL = 1 AND [SUB_GENTAL] IS NULL) OR ([SUB_GENTAL] = @Original_SUB_GEN"& _ 
                "TAL)) AND ((@IsNull_SUB_CEFAZOLIN = 1 AND [SUB_CEFAZOLIN] IS NULL) OR ([SUB_CEFA"& _ 
                "ZOLIN] = @Original_SUB_CEFAZOLIN)) AND ((@IsNull_SUB_DEXAMETHASONE = 1 AND [SUB_"& _ 
                "DEXAMETHASONE] IS NULL) OR ([SUB_DEXAMETHASONE] = @Original_SUB_DEXAMETHASONE)) "& _ 
                "AND ((@IsNull_SUB_OTHER = 1 AND [SUB_OTHER] IS NULL) OR ([SUB_OTHER] = @Original"& _ 
                "_SUB_OTHER)) AND ((@IsNull_TOPICAL_MAXITRAL = 1 AND [TOPICAL_MAXITRAL] IS NULL) "& _ 
                "OR ([TOPICAL_MAXITRAL] = @Original_TOPICAL_MAXITRAL)) AND ((@IsNull_TOPICAL_PILO"& _ 
                "CARPINE = 1 AND [TOPICAL_PILOCARPINE] IS NULL) OR ([TOPICAL_PILOCARPINE] = @Orig"& _ 
                "inal_TOPICAL_PILOCARPINE)) AND ((@IsNull_TOPICAL_ATROPINE = 1 AND [TOPICAL_ATROP"& _ 
                "INE] IS NULL) OR ([TOPICAL_ATROPINE] = @Original_TOPICAL_ATROPINE)) AND ((@IsNul"& _ 
                "l_TOPICAL_OTHER = 1 AND [TOPICAL_OTHER] IS NULL) OR ([TOPICAL_OTHER] = @Original"& _ 
                "_TOPICAL_OTHER)) AND ((@IsNull_SURGEON_SIGNATURE = 1 AND [SURGEON_SIGNATURE] IS "& _ 
                "NULL) OR ([SURGEON_SIGNATURE] = @Original_SURGEON_SIGNATURE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GENERAL_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "GENERAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PROCEDURES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_GENTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITRAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITRAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITRAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITRAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[S_OPER_GENERAL_OPERATIVE] ([CREATE_DATE], [OPERA_NO], [PATIENT"& _ 
                "_NO], [PATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], [SC"& _ 
                "RUB], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_AN_GA], [S_AN_NEURO], "& _ 
                "[S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TOPICAL], [S_AN_SUB"& _ 
                "CONJUNCTIVAL], [OTHER_PROCEDURES], [SUB_GENTAL], [SUB_CEFAZOLIN], [SUB_DEXAMETHA"& _ 
                "SONE], [SUB_OTHER], [TOPICAL_MAXITRAL], [TOPICAL_PILOCARPINE], [TOPICAL_ATROPINE"& _ 
                "], [TOPICAL_OTHER], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PATIE"& _ 
                "NT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @SCRUB,"& _ 
                " @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_AN_GA, @S_AN_NEURO, @S_AN_STAN"& _ 
                "DBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @S_AN_SUBCONJUNCTIVAL, "& _ 
                "@OTHER_PROCEDURES, @SUB_GENTAL, @SUB_CEFAZOLIN, @SUB_DEXAMETHASONE, @SUB_OTHER, "& _ 
                "@TOPICAL_MAXITRAL, @TOPICAL_PILOCARPINE, @TOPICAL_ATROPINE, @TOPICAL_OTHER, @SUR"& _ 
                "GEON_SIGNATURE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT GENERAL_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_"& _ 
                "NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHE"& _ 
                "SIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN"& _ 
                "_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, OTHER_PROCEDURES, SUB_GENTAL, S"& _ 
                "UB_CEFAZOLIN, SUB_DEXAMETHASONE, SUB_OTHER, TOPICAL_MAXITRAL, TOPICAL_PILOCARPIN"& _ 
                "E, TOPICAL_ATROPINE, TOPICAL_OTHER, SURGEON_SIGNATURE FROM S_OPER_GENERAL_OPERAT"& _ 
                "IVE WHERE (GENERAL_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITRAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITRAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_OPER_GENERAL_OPERATIVE] SET [CREATE_DATE] = @CREATE_DATE, [OPERA_"& _ 
                "NO] = @OPERA_NO, [PATIENT_NO] = @PATIENT_NO, [PATIENT_NAME] = @PATIENT_NAME, [PA"& _ 
                "TIENT_SEX] = @PATIENT_SEX, [PATIENT_AGE] = @PATIENT_AGE, [START_TIME] = @START_T"& _ 
                "IME, [SURGEON] = @SURGEON, [SCRUB] = @SCRUB, [CIRCULATING] = @CIRCULATING, [ANES"& _ 
                "THESIONLOGIST] = @ANESTHESIONLOGIST, [DIAGNOSIS] = @DIAGNOSIS, [S_AN_GA] = @S_AN"& _ 
                "_GA, [S_AN_NEURO] = @S_AN_NEURO, [S_AN_STANDBY] = @S_AN_STANDBY, [S_AN_RETROBULB"& _ 
                "AR] = @S_AN_RETROBULBAR, [S_AN_PERIBULBAR] = @S_AN_PERIBULBAR, [S_AN_TOPICAL] = "& _ 
                "@S_AN_TOPICAL, [S_AN_SUBCONJUNCTIVAL] = @S_AN_SUBCONJUNCTIVAL, [OTHER_PROCEDURES"& _ 
                "] = @OTHER_PROCEDURES, [SUB_GENTAL] = @SUB_GENTAL, [SUB_CEFAZOLIN] = @SUB_CEFAZO"& _ 
                "LIN, [SUB_DEXAMETHASONE] = @SUB_DEXAMETHASONE, [SUB_OTHER] = @SUB_OTHER, [TOPICA"& _ 
                "L_MAXITRAL] = @TOPICAL_MAXITRAL, [TOPICAL_PILOCARPINE] = @TOPICAL_PILOCARPINE, ["& _ 
                "TOPICAL_ATROPINE] = @TOPICAL_ATROPINE, [TOPICAL_OTHER] = @TOPICAL_OTHER, [SURGEO"& _ 
                "N_SIGNATURE] = @SURGEON_SIGNATURE WHERE (([GENERAL_ID] = @Original_GENERAL_ID) A"& _ 
                "ND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DATE] = @Ori"& _ 
                "ginal_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL) OR ([OPER"& _ 
                "A_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [PATIENT_NO] IS NU"& _ 
                "LL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATIENT_NAME = 1 AND"& _ 
                " [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_NAME)) AND ((@Is"& _ 
                "Null_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX] = @Original_PA"& _ 
                "TIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS NULL) OR ([PATIEN"& _ 
                "T_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AND [START_TIME] I"& _ 
                "S NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_SURGEON = 1 AND "& _ 
                "[SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ((@IsNull_SCRUB = 1 A"& _ 
                "ND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_CIRCULATING = "& _ 
                "1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCULATING)) AND ((@"& _ 
                "IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ([ANESTHESIONLO"& _ 
                "GIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 AND [DIAGNOSIS"& _ 
                "] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_S_AN_GA = 1 AND"& _ 
                " [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AND ((@IsNull_S_AN_NEURO"& _ 
                " = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @Original_S_AN_NEURO)) AND ((@"& _ 
                "IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_AN_STANDBY] = @Origin"& _ 
                "al_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_AN_RETROBULBAR] IS N"& _ 
                "ULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBULBAR)) AND ((@IsNull_S_AN_PE"& _ 
                "RIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBULBAR] = @Original_S_"& _ 
                "AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOPICAL] IS NULL) OR (["& _ 
                "S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNull_S_AN_SUBCONJUNCTIVAL = 1 "& _ 
                "AND [S_AN_SUBCONJUNCTIVAL] IS NULL) OR ([S_AN_SUBCONJUNCTIVAL] = @Original_S_AN_"& _ 
                "SUBCONJUNCTIVAL)) AND ((@IsNull_OTHER_PROCEDURES = 1 AND [OTHER_PROCEDURES] IS N"& _ 
                "ULL) OR ([OTHER_PROCEDURES] = @Original_OTHER_PROCEDURES)) AND ((@IsNull_SUB_GEN"& _ 
                "TAL = 1 AND [SUB_GENTAL] IS NULL) OR ([SUB_GENTAL] = @Original_SUB_GENTAL)) AND "& _ 
                "((@IsNull_SUB_CEFAZOLIN = 1 AND [SUB_CEFAZOLIN] IS NULL) OR ([SUB_CEFAZOLIN] = @"& _ 
                "Original_SUB_CEFAZOLIN)) AND ((@IsNull_SUB_DEXAMETHASONE = 1 AND [SUB_DEXAMETHAS"& _ 
                "ONE] IS NULL) OR ([SUB_DEXAMETHASONE] = @Original_SUB_DEXAMETHASONE)) AND ((@IsN"& _ 
                "ull_SUB_OTHER = 1 AND [SUB_OTHER] IS NULL) OR ([SUB_OTHER] = @Original_SUB_OTHER"& _ 
                ")) AND ((@IsNull_TOPICAL_MAXITRAL = 1 AND [TOPICAL_MAXITRAL] IS NULL) OR ([TOPIC"& _ 
                "AL_MAXITRAL] = @Original_TOPICAL_MAXITRAL)) AND ((@IsNull_TOPICAL_PILOCARPINE = "& _ 
                "1 AND [TOPICAL_PILOCARPINE] IS NULL) OR ([TOPICAL_PILOCARPINE] = @Original_TOPIC"& _ 
                "AL_PILOCARPINE)) AND ((@IsNull_TOPICAL_ATROPINE = 1 AND [TOPICAL_ATROPINE] IS NU"& _ 
                "LL) OR ([TOPICAL_ATROPINE] = @Original_TOPICAL_ATROPINE)) AND ((@IsNull_TOPICAL_"& _ 
                "OTHER = 1 AND [TOPICAL_OTHER] IS NULL) OR ([TOPICAL_OTHER] = @Original_TOPICAL_O"& _ 
                "THER)) AND ((@IsNull_SURGEON_SIGNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ("& _ 
                "[SURGEON_SIGNATURE] = @Original_SURGEON_SIGNATURE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT GENERAL_ID, CREATE"& _ 
                "_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME,"& _ 
                " SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO,"& _ 
                " S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCT"& _ 
                "IVAL, OTHER_PROCEDURES, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAMETHASONE, SUB_OTHER,"& _ 
                " TOPICAL_MAXITRAL, TOPICAL_PILOCARPINE, TOPICAL_ATROPINE, TOPICAL_OTHER, SURGEON"& _ 
                "_SIGNATURE FROM S_OPER_GENERAL_OPERATIVE WHERE (GENERAL_ID = @GENERAL_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITRAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITRAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GENERAL_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "GENERAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PROCEDURES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_GENTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITRAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITRAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITRAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITRAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GENERAL_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "GENERAL_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT GENERAL_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, "& _ 
                "PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOS"& _ 
                "IS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_T"& _ 
                "OPICAL, S_AN_SUBCONJUNCTIVAL, OTHER_PROCEDURES, SUB_GENTAL, SUB_CEFAZOLIN, SUB_D"& _ 
                "EXAMETHASONE, SUB_OTHER, TOPICAL_MAXITRAL, TOPICAL_PILOCARPINE, TOPICAL_ATROPINE"& _ 
                ", TOPICAL_OTHER, SURGEON_SIGNATURE FROM dbo.S_OPER_GENERAL_OPERATIVE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT GENERAL_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, "& _ 
                "PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOS"& _ 
                "IS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_T"& _ 
                "OPICAL, S_AN_SUBCONJUNCTIVAL, OTHER_PROCEDURES, SUB_GENTAL, SUB_CEFAZOLIN, SUB_D"& _ 
                "EXAMETHASONE, SUB_OTHER, TOPICAL_MAXITRAL, TOPICAL_PILOCARPINE, TOPICAL_ATROPINE"& _ 
                ", TOPICAL_OTHER, SURGEON_SIGNATURE FROM dbo.S_OPER_GENERAL_OPERATIVE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE GENE"& _ 
                "RAL_ID=@GENERAL_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GENERAL_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "GENERAL_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [dbo].[S_OPER_GENERAL_OPERATIVE] ([CREATE_DATE], [OPERA_NO], [PATIENT"& _ 
                "_NO], [PATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], [SC"& _ 
                "RUB], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_AN_GA], [S_AN_NEURO], "& _ 
                "[S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TOPICAL], [S_AN_SUB"& _ 
                "CONJUNCTIVAL], [OTHER_PROCEDURES], [SUB_GENTAL], [SUB_CEFAZOLIN], [SUB_DEXAMETHA"& _ 
                "SONE], [SUB_OTHER], [TOPICAL_MAXITRAL], [TOPICAL_PILOCARPINE], [TOPICAL_ATROPINE"& _ 
                "], [TOPICAL_OTHER], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PATIE"& _ 
                "NT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @SCRUB,"& _ 
                " @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_AN_GA, @S_AN_NEURO, @S_AN_STAN"& _ 
                "DBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @S_AN_SUBCONJUNCTIVAL, "& _ 
                "@OTHER_PROCEDURES, @SUB_GENTAL, @SUB_CEFAZOLIN, @SUB_DEXAMETHASONE, @SUB_OTHER, "& _ 
                "@TOPICAL_MAXITRAL, @TOPICAL_PILOCARPINE, @TOPICAL_ATROPINE, @TOPICAL_OTHER, @SUR"& _ 
                "GEON_SIGNATURE);"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITRAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITRAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE [dbo].[S_OPER_GENERAL_OPERATIVE] SET  [START_TIME] = @START_TIME, [SURGEON"& _ 
                "] = @SURGEON, [SCRUB] = @SCRUB, [CIRCULATING] = @CIRCULATING, [ANESTHESIONLOGIST"& _ 
                "] = @ANESTHESIONLOGIST, [DIAGNOSIS] = @DIAGNOSIS, [S_AN_GA] = @S_AN_GA, [S_AN_NE"& _ 
                "URO] = @S_AN_NEURO, [S_AN_STANDBY] = @S_AN_STANDBY, [S_AN_RETROBULBAR] = @S_AN_R"& _ 
                "ETROBULBAR, [S_AN_PERIBULBAR] = @S_AN_PERIBULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL"& _ 
                ", [S_AN_SUBCONJUNCTIVAL] = @S_AN_SUBCONJUNCTIVAL, [OTHER_PROCEDURES] = @OTHER_PR"& _ 
                "OCEDURES, [SUB_GENTAL] = @SUB_GENTAL, [SUB_CEFAZOLIN] = @SUB_CEFAZOLIN, [SUB_DEX"& _ 
                "AMETHASONE] = @SUB_DEXAMETHASONE, [SUB_OTHER] = @SUB_OTHER, [TOPICAL_MAXITRAL] ="& _ 
                " @TOPICAL_MAXITRAL, [TOPICAL_PILOCARPINE] = @TOPICAL_PILOCARPINE, [TOPICAL_ATROP"& _ 
                "INE] = @TOPICAL_ATROPINE, [TOPICAL_OTHER] = @TOPICAL_OTHER, [SURGEON_SIGNATURE] "& _ 
                "= @SURGEON_SIGNATURE WHERE (([GENERAL_ID] = @Original_GENERAL_ID))"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITRAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITRAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GENERAL_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "GENERAL_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable = New DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable, ByVal GENERAL_ID As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(GENERAL_ID,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectOperatID(ByVal GENERAL_ID As Decimal) As DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(GENERAL_ID,Decimal)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable = New DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.S_OPER_GENERAL_OPERATIVEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "S_OPER_GENERAL_OPERATIVE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_GENERAL_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PROCEDURES As String,  _
                    ByVal Original_SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHER As String,  _
                    ByVal Original_TOPICAL_MAXITRAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHER As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_GENERAL_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_OTHER_PROCEDURES,String)
            End If
            If (Original_SUB_GENTAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_SUB_GENTAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_SUB_OTHER,String)
            End If
            If (Original_TOPICAL_MAXITRAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_TOPICAL_MAXITRAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_ATROPINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_TOPICAL_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_TOPICAL_OTHER,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITRAL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(OTHER_PROCEDURES,String)
            End If
            If (SUB_GENTAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(SUB_GENTAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(SUB_OTHER,String)
            End If
            If (TOPICAL_MAXITRAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TOPICAL_MAXITRAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ATROPINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(TOPICAL_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(TOPICAL_OTHER,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITRAL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_GENERAL_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PROCEDURES As String,  _
                    ByVal Original_SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHER As String,  _
                    ByVal Original_TOPICAL_MAXITRAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHER As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String,  _
                    ByVal GENERAL_ID As Decimal) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(OTHER_PROCEDURES,String)
            End If
            If (SUB_GENTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(SUB_GENTAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(SUB_OTHER,String)
            End If
            If (TOPICAL_MAXITRAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(TOPICAL_MAXITRAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ATROPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(TOPICAL_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(TOPICAL_OTHER,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_GENERAL_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_OTHER_PROCEDURES,String)
            End If
            If (Original_SUB_GENTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_SUB_GENTAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_SUB_OTHER,String)
            End If
            If (Original_TOPICAL_MAXITRAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_TOPICAL_MAXITRAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_ATROPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_TOPICAL_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_TOPICAL_OTHER,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(88).Value = CType(GENERAL_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITRAL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_GENERAL_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PROCEDURES As String,  _
                    ByVal Original_SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHER As String,  _
                    ByVal Original_TOPICAL_MAXITRAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHER As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Return Me.Update(CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, OTHER_PROCEDURES, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAMETHASONE, SUB_OTHER, TOPICAL_MAXITRAL, TOPICAL_PILOCARPINE, TOPICAL_ATROPINE, TOPICAL_OTHER, SURGEON_SIGNATURE, Original_GENERAL_ID, Original_CREATE_DATE, Original_OPERA_NO, Original_PATIENT_NO, Original_PATIENT_NAME, Original_PATIENT_SEX, Original_PATIENT_AGE, Original_START_TIME, Original_SURGEON, Original_SCRUB, Original_CIRCULATING, Original_ANESTHESIONLOGIST, Original_DIAGNOSIS, Original_S_AN_GA, Original_S_AN_NEURO, Original_S_AN_STANDBY, Original_S_AN_RETROBULBAR, Original_S_AN_PERIBULBAR, Original_S_AN_TOPICAL, Original_S_AN_SUBCONJUNCTIVAL, Original_OTHER_PROCEDURES, Original_SUB_GENTAL, Original_SUB_CEFAZOLIN, Original_SUB_DEXAMETHASONE, Original_SUB_OTHER, Original_TOPICAL_MAXITRAL, Original_TOPICAL_PILOCARPINE, Original_TOPICAL_ATROPINE, Original_TOPICAL_OTHER, Original_SURGEON_SIGNATURE, Original_GENERAL_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertGenOperative( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITRAL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(13).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(15).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(16).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(17).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                command.Parameters(18).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PROCEDURES Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(OTHER_PROCEDURES,String)
            End If
            If (SUB_GENTAL.HasValue = true) Then
                command.Parameters(20).Value = CType(SUB_GENTAL.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN.HasValue = true) Then
                command.Parameters(21).Value = CType(SUB_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(22).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHER Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(SUB_OTHER,String)
            End If
            If (TOPICAL_MAXITRAL.HasValue = true) Then
                command.Parameters(24).Value = CType(TOPICAL_MAXITRAL.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                command.Parameters(25).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ATROPINE.HasValue = true) Then
                command.Parameters(26).Value = CType(TOPICAL_ATROPINE.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHER Is Nothing) Then
                command.Parameters(27).Value = Global.System.DBNull.Value
            Else
                command.Parameters(27).Value = CType(TOPICAL_OTHER,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateGenOperative( _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITRAL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_GENERAL_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (START_TIME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(6).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(7).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(8).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(9).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(10).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(11).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PROCEDURES Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(OTHER_PROCEDURES,String)
            End If
            If (SUB_GENTAL.HasValue = true) Then
                command.Parameters(14).Value = CType(SUB_GENTAL.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN.HasValue = true) Then
                command.Parameters(15).Value = CType(SUB_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(16).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHER Is Nothing) Then
                command.Parameters(17).Value = Global.System.DBNull.Value
            Else
                command.Parameters(17).Value = CType(SUB_OTHER,String)
            End If
            If (TOPICAL_MAXITRAL.HasValue = true) Then
                command.Parameters(18).Value = CType(TOPICAL_MAXITRAL.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                command.Parameters(19).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ATROPINE.HasValue = true) Then
                command.Parameters(20).Value = CType(TOPICAL_ATROPINE.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHER Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(TOPICAL_OTHER,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(SURGEON_SIGNATURE,String)
            End If
            command.Parameters(23).Value = CType(Original_GENERAL_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_OPER_PHACOEMULSIFICATIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_OPER_PHACOEMULSIFICATION"
            tableMapping.ColumnMappings.Add("PHACOEMULSIF_ID", "PHACOEMULSIF_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("OPERA_NO", "OPERA_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NO", "PATIENT_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NAME", "PATIENT_NAME")
            tableMapping.ColumnMappings.Add("PATIENT_SEX", "PATIENT_SEX")
            tableMapping.ColumnMappings.Add("PATIENT_AGE", "PATIENT_AGE")
            tableMapping.ColumnMappings.Add("START_TIME", "START_TIME")
            tableMapping.ColumnMappings.Add("SURGEON", "SURGEON")
            tableMapping.ColumnMappings.Add("SCRUB", "SCRUB")
            tableMapping.ColumnMappings.Add("CIRCULATING", "CIRCULATING")
            tableMapping.ColumnMappings.Add("ANESTHESIONLOGIST", "ANESTHESIONLOGIST")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("S_AN_GA", "S_AN_GA")
            tableMapping.ColumnMappings.Add("S_AN_NEURO", "S_AN_NEURO")
            tableMapping.ColumnMappings.Add("S_AN_STANDBY", "S_AN_STANDBY")
            tableMapping.ColumnMappings.Add("S_AN_RETROBULBAR", "S_AN_RETROBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_PERIBULBAR", "S_AN_PERIBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_TOPICAL", "S_AN_TOPICAL")
            tableMapping.ColumnMappings.Add("VIS_HEALON_GV", "VIS_HEALON_GV")
            tableMapping.ColumnMappings.Add("VIS_IALF", "VIS_IALF")
            tableMapping.ColumnMappings.Add("VIS_VISSOAT", "VIS_VISSOAT")
            tableMapping.ColumnMappings.Add("VIS_DUOVISE", "VIS_DUOVISE")
            tableMapping.ColumnMappings.Add("VIS_HEALON5", "VIS_HEALON5")
            tableMapping.ColumnMappings.Add("VIS_OPHTHALINE", "VIS_OPHTHALINE")
            tableMapping.ColumnMappings.Add("VIS_PROVISE", "VIS_PROVISE")
            tableMapping.ColumnMappings.Add("BSS_PLUS", "BSS_PLUS")
            tableMapping.ColumnMappings.Add("POWER", "POWER")
            tableMapping.ColumnMappings.Add("FLOW_RATE", "FLOW_RATE")
            tableMapping.ColumnMappings.Add("VAC", "VAC")
            tableMapping.ColumnMappings.Add("PHACO_TIME", "PHACO_TIME")
            tableMapping.ColumnMappings.Add("IA_FLOW_RATE", "IA_FLOW_RATE")
            tableMapping.ColumnMappings.Add("IA_VAC", "IA_VAC")
            tableMapping.ColumnMappings.Add("NOT_DONE", "NOT_DONE")
            tableMapping.ColumnMappings.Add("DONE", "DONE")
            tableMapping.ColumnMappings.Add("DONE_NOTE", "DONE_NOTE")
            tableMapping.ColumnMappings.Add("CORNEAL", "CORNEAL")
            tableMapping.ColumnMappings.Add("SCLERAL", "SCLERAL")
            tableMapping.ColumnMappings.Add("FINAL_SIZE", "FINAL_SIZE")
            tableMapping.ColumnMappings.Add("FINAL_SIZE_NOTE", "FINAL_SIZE_NOTE")
            tableMapping.ColumnMappings.Add("CAPSULORHEXIS", "CAPSULORHEXIS")
            tableMapping.ColumnMappings.Add("HEYDRODISSECTION_YES", "HEYDRODISSECTION_YES")
            tableMapping.ColumnMappings.Add("HEYDRODISSECTION_NO", "HEYDRODISSECTION_NO")
            tableMapping.ColumnMappings.Add("PHACO_DIVIDE", "PHACO_DIVIDE")
            tableMapping.ColumnMappings.Add("PHACO_CHOP", "PHACO_CHOP")
            tableMapping.ColumnMappings.Add("PHACO_STOP_CHOP", "PHACO_STOP_CHOP")
            tableMapping.ColumnMappings.Add("PHACO_SCULPTING", "PHACO_SCULPTING")
            tableMapping.ColumnMappings.Add("PHACO_CRACKING", "PHACO_CRACKING")
            tableMapping.ColumnMappings.Add("PHACO_OTHERS", "PHACO_OTHERS")
            tableMapping.ColumnMappings.Add("IA_TIP", "IA_TIP")
            tableMapping.ColumnMappings.Add("IA_OTHER", "IA_OTHER")
            tableMapping.ColumnMappings.Add("CAPSULAR_YES", "CAPSULAR_YES")
            tableMapping.ColumnMappings.Add("CAPSULAR_NO", "CAPSULAR_NO")
            tableMapping.ColumnMappings.Add("IOL_YES", "IOL_YES")
            tableMapping.ColumnMappings.Add("IOL_NO", "IOL_NO")
            tableMapping.ColumnMappings.Add("IOL_IN_CAPSULAR", "IOL_IN_CAPSULAR")
            tableMapping.ColumnMappings.Add("IOL_IN_SULCUS", "IOL_IN_SULCUS")
            tableMapping.ColumnMappings.Add("IOL_IN_AC", "IOL_IN_AC")
            tableMapping.ColumnMappings.Add("SUTURE_YES", "SUTURE_YES")
            tableMapping.ColumnMappings.Add("SUTURE_NO", "SUTURE_NO")
            tableMapping.ColumnMappings.Add("SUB_GENTAL", "SUB_GENTAL")
            tableMapping.ColumnMappings.Add("SUB_CEFAZOLIN", "SUB_CEFAZOLIN")
            tableMapping.ColumnMappings.Add("SUB_DEXAMETHASONE", "SUB_DEXAMETHASONE")
            tableMapping.ColumnMappings.Add("SUB_OTHERS", "SUB_OTHERS")
            tableMapping.ColumnMappings.Add("TOPICAL_PILOCARPINE", "TOPICAL_PILOCARPINE")
            tableMapping.ColumnMappings.Add("TOPICAL_MAXITROL", "TOPICAL_MAXITROL")
            tableMapping.ColumnMappings.Add("TOPICAL_OTHERS", "TOPICAL_OTHERS")
            tableMapping.ColumnMappings.Add("COMPLICATION_YES", "COMPLICATION_YES")
            tableMapping.ColumnMappings.Add("COMPLICATION_NO", "COMPLICATION_NO")
            tableMapping.ColumnMappings.Add("COMPLICATION_NOTE", "COMPLICATION_NOTE")
            tableMapping.ColumnMappings.Add("OTHER_PRO_ANTERIOR", "OTHER_PRO_ANTERIOR")
            tableMapping.ColumnMappings.Add("OTHER_PRO_PI", "OTHER_PRO_PI")
            tableMapping.ColumnMappings.Add("OTHER_PRO_AT", "OTHER_PRO_AT")
            tableMapping.ColumnMappings.Add("SURGEON_SIGNATURE", "SURGEON_SIGNATURE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[S_OPER_PHACOEMULSIFICATION] WHERE (([PHACOEMULSIF_ID] = @Origi"& _ 
                "nal_PHACOEMULSIF_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR"& _ 
                " ([CREATE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_"& _ 
                "NO] IS NULL) OR ([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 "& _ 
                "AND [PATIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNul"& _ 
                "l_PATIENT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PA"& _ 
                "TIENT_NAME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIE"& _ 
                "NT_SEX] = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE"& _ 
                "] IS NULL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME "& _ 
                "= 1 AND [START_TIME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@I"& _ 
                "sNull_SURGEON = 1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND"& _ 
                " ((@IsNull_SCRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND (("& _ 
                "@IsNull_CIRCULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original"& _ 
                "_CIRCULATING)) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NU"& _ 
                "LL) OR ([ANESTHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNO"& _ 
                "SIS = 1 AND [DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@"& _ 
                "IsNull_S_AN_GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AN"& _ 
                "D ((@IsNull_S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @Origina"& _ 
                "l_S_AN_NEURO)) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S"& _ 
                "_AN_STANDBY] = @Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND ["& _ 
                "S_AN_RETROBULBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBULBAR))"& _ 
                " AND ((@IsNull_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERI"& _ 
                "BULBAR] = @Original_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_T"& _ 
                "OPICAL] IS NULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNull_VIS"& _ 
                "_HEALON_GV = 1 AND [VIS_HEALON_GV] IS NULL) OR ([VIS_HEALON_GV] = @Original_VIS_"& _ 
                "HEALON_GV)) AND ((@IsNull_VIS_IALF = 1 AND [VIS_IALF] IS NULL) OR ([VIS_IALF] = "& _ 
                "@Original_VIS_IALF)) AND ((@IsNull_VIS_VISSOAT = 1 AND [VIS_VISSOAT] IS NULL) OR"& _ 
                " ([VIS_VISSOAT] = @Original_VIS_VISSOAT)) AND ((@IsNull_VIS_DUOVISE = 1 AND [VIS"& _ 
                "_DUOVISE] IS NULL) OR ([VIS_DUOVISE] = @Original_VIS_DUOVISE)) AND ((@IsNull_VIS"& _ 
                "_HEALON5 = 1 AND [VIS_HEALON5] IS NULL) OR ([VIS_HEALON5] = @Original_VIS_HEALON"& _ 
                "5)) AND ((@IsNull_VIS_OPHTHALINE = 1 AND [VIS_OPHTHALINE] IS NULL) OR ([VIS_OPHT"& _ 
                "HALINE] = @Original_VIS_OPHTHALINE)) AND ((@IsNull_VIS_PROVISE = 1 AND [VIS_PROV"& _ 
                "ISE] IS NULL) OR ([VIS_PROVISE] = @Original_VIS_PROVISE)) AND ((@IsNull_BSS_PLUS"& _ 
                " = 1 AND [BSS_PLUS] IS NULL) OR ([BSS_PLUS] = @Original_BSS_PLUS)) AND ((@IsNull"& _ 
                "_POWER = 1 AND [POWER] IS NULL) OR ([POWER] = @Original_POWER)) AND ((@IsNull_FL"& _ 
                "OW_RATE = 1 AND [FLOW_RATE] IS NULL) OR ([FLOW_RATE] = @Original_FLOW_RATE)) AND"& _ 
                " ((@IsNull_VAC = 1 AND [VAC] IS NULL) OR ([VAC] = @Original_VAC)) AND ((@IsNull_"& _ 
                "PHACO_TIME = 1 AND [PHACO_TIME] IS NULL) OR ([PHACO_TIME] = @Original_PHACO_TIME"& _ 
                ")) AND ((@IsNull_IA_FLOW_RATE = 1 AND [IA_FLOW_RATE] IS NULL) OR ([IA_FLOW_RATE]"& _ 
                " = @Original_IA_FLOW_RATE)) AND ((@IsNull_IA_VAC = 1 AND [IA_VAC] IS NULL) OR (["& _ 
                "IA_VAC] = @Original_IA_VAC)) AND ((@IsNull_NOT_DONE = 1 AND [NOT_DONE] IS NULL) "& _ 
                "OR ([NOT_DONE] = @Original_NOT_DONE)) AND ((@IsNull_DONE = 1 AND [DONE] IS NULL)"& _ 
                " OR ([DONE] = @Original_DONE)) AND ((@IsNull_DONE_NOTE = 1 AND [DONE_NOTE] IS NU"& _ 
                "LL) OR ([DONE_NOTE] = @Original_DONE_NOTE)) AND ((@IsNull_CORNEAL = 1 AND [CORNE"& _ 
                "AL] IS NULL) OR ([CORNEAL] = @Original_CORNEAL)) AND ((@IsNull_SCLERAL = 1 AND ["& _ 
                "SCLERAL] IS NULL) OR ([SCLERAL] = @Original_SCLERAL)) AND ((@IsNull_FINAL_SIZE ="& _ 
                " 1 AND [FINAL_SIZE] IS NULL) OR ([FINAL_SIZE] = @Original_FINAL_SIZE)) AND ((@Is"& _ 
                "Null_FINAL_SIZE_NOTE = 1 AND [FINAL_SIZE_NOTE] IS NULL) OR ([FINAL_SIZE_NOTE] = "& _ 
                "@Original_FINAL_SIZE_NOTE)) AND ((@IsNull_CAPSULORHEXIS = 1 AND [CAPSULORHEXIS] "& _ 
                "IS NULL) OR ([CAPSULORHEXIS] = @Original_CAPSULORHEXIS)) AND ((@IsNull_HEYDRODIS"& _ 
                "SECTION_YES = 1 AND [HEYDRODISSECTION_YES] IS NULL) OR ([HEYDRODISSECTION_YES] ="& _ 
                " @Original_HEYDRODISSECTION_YES)) AND ((@IsNull_HEYDRODISSECTION_NO = 1 AND [HEY"& _ 
                "DRODISSECTION_NO] IS NULL) OR ([HEYDRODISSECTION_NO] = @Original_HEYDRODISSECTIO"& _ 
                "N_NO)) AND ((@IsNull_PHACO_DIVIDE = 1 AND [PHACO_DIVIDE] IS NULL) OR ([PHACO_DIV"& _ 
                "IDE] = @Original_PHACO_DIVIDE)) AND ((@IsNull_PHACO_CHOP = 1 AND [PHACO_CHOP] IS"& _ 
                " NULL) OR ([PHACO_CHOP] = @Original_PHACO_CHOP)) AND ((@IsNull_PHACO_STOP_CHOP ="& _ 
                " 1 AND [PHACO_STOP_CHOP] IS NULL) OR ([PHACO_STOP_CHOP] = @Original_PHACO_STOP_C"& _ 
                "HOP)) AND ((@IsNull_PHACO_SCULPTING = 1 AND [PHACO_SCULPTING] IS NULL) OR ([PHAC"& _ 
                "O_SCULPTING] = @Original_PHACO_SCULPTING)) AND ((@IsNull_PHACO_CRACKING = 1 AND "& _ 
                "[PHACO_CRACKING] IS NULL) OR ([PHACO_CRACKING] = @Original_PHACO_CRACKING)) AND "& _ 
                "((@IsNull_PHACO_OTHERS = 1 AND [PHACO_OTHERS] IS NULL) OR ([PHACO_OTHERS] = @Ori"& _ 
                "ginal_PHACO_OTHERS)) AND ((@IsNull_IA_TIP = 1 AND [IA_TIP] IS NULL) OR ([IA_TIP]"& _ 
                " = @Original_IA_TIP)) AND ((@IsNull_IA_OTHER = 1 AND [IA_OTHER] IS NULL) OR ([IA"& _ 
                "_OTHER] = @Original_IA_OTHER)) AND ((@IsNull_CAPSULAR_YES = 1 AND [CAPSULAR_YES]"& _ 
                " IS NULL) OR ([CAPSULAR_YES] = @Original_CAPSULAR_YES)) AND ((@IsNull_CAPSULAR_N"& _ 
                "O = 1 AND [CAPSULAR_NO] IS NULL) OR ([CAPSULAR_NO] = @Original_CAPSULAR_NO)) AND"& _ 
                " ((@IsNull_IOL_YES = 1 AND [IOL_YES] IS NULL) OR ([IOL_YES] = @Original_IOL_YES)"& _ 
                ") AND ((@IsNull_IOL_NO = 1 AND [IOL_NO] IS NULL) OR ([IOL_NO] = @Original_IOL_NO"& _ 
                ")) AND ((@IsNull_IOL_IN_CAPSULAR = 1 AND [IOL_IN_CAPSULAR] IS NULL) OR ([IOL_IN_"& _ 
                "CAPSULAR] = @Original_IOL_IN_CAPSULAR)) AND ((@IsNull_IOL_IN_SULCUS = 1 AND [IOL"& _ 
                "_IN_SULCUS] IS NULL) OR ([IOL_IN_SULCUS] = @Original_IOL_IN_SULCUS)) AND ((@IsNu"& _ 
                "ll_IOL_IN_AC = 1 AND [IOL_IN_AC] IS NULL) OR ([IOL_IN_AC] = @Original_IOL_IN_AC)"& _ 
                ") AND ((@IsNull_SUTURE_YES = 1 AND [SUTURE_YES] IS NULL) OR ([SUTURE_YES] = @Ori"& _ 
                "ginal_SUTURE_YES)) AND ((@IsNull_SUTURE_NO = 1 AND [SUTURE_NO] IS NULL) OR ([SUT"& _ 
                "URE_NO] = @Original_SUTURE_NO)) AND ((@IsNull_SUB_GENTAL = 1 AND [SUB_GENTAL] IS"& _ 
                " NULL) OR ([SUB_GENTAL] = @Original_SUB_GENTAL)) AND ((@IsNull_SUB_CEFAZOLIN = 1"& _ 
                " AND [SUB_CEFAZOLIN] IS NULL) OR ([SUB_CEFAZOLIN] = @Original_SUB_CEFAZOLIN)) AN"& _ 
                "D ((@IsNull_SUB_DEXAMETHASONE = 1 AND [SUB_DEXAMETHASONE] IS NULL) OR ([SUB_DEXA"& _ 
                "METHASONE] = @Original_SUB_DEXAMETHASONE)) AND ((@IsNull_SUB_OTHERS = 1 AND [SUB"& _ 
                "_OTHERS] IS NULL) OR ([SUB_OTHERS] = @Original_SUB_OTHERS)) AND ((@IsNull_TOPICA"& _ 
                "L_PILOCARPINE = 1 AND [TOPICAL_PILOCARPINE] IS NULL) OR ([TOPICAL_PILOCARPINE] ="& _ 
                " @Original_TOPICAL_PILOCARPINE)) AND ((@IsNull_TOPICAL_MAXITROL = 1 AND [TOPICAL"& _ 
                "_MAXITROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Original_TOPICAL_MAXITROL)) AND (("& _ 
                "@IsNull_TOPICAL_OTHERS = 1 AND [TOPICAL_OTHERS] IS NULL) OR ([TOPICAL_OTHERS] = "& _ 
                "@Original_TOPICAL_OTHERS)) AND ((@IsNull_COMPLICATION_YES = 1 AND [COMPLICATION_"& _ 
                "YES] IS NULL) OR ([COMPLICATION_YES] = @Original_COMPLICATION_YES)) AND ((@IsNul"& _ 
                "l_COMPLICATION_NO = 1 AND [COMPLICATION_NO] IS NULL) OR ([COMPLICATION_NO] = @Or"& _ 
                "iginal_COMPLICATION_NO)) AND ((@IsNull_COMPLICATION_NOTE = 1 AND [COMPLICATION_N"& _ 
                "OTE] IS NULL) OR ([COMPLICATION_NOTE] = @Original_COMPLICATION_NOTE)) AND ((@IsN"& _ 
                "ull_OTHER_PRO_ANTERIOR = 1 AND [OTHER_PRO_ANTERIOR] IS NULL) OR ([OTHER_PRO_ANTE"& _ 
                "RIOR] = @Original_OTHER_PRO_ANTERIOR)) AND ((@IsNull_OTHER_PRO_PI = 1 AND [OTHER"& _ 
                "_PRO_PI] IS NULL) OR ([OTHER_PRO_PI] = @Original_OTHER_PRO_PI)) AND ((@IsNull_OT"& _ 
                "HER_PRO_AT = 1 AND [OTHER_PRO_AT] IS NULL) OR ([OTHER_PRO_AT] = @Original_OTHER_"& _ 
                "PRO_AT)) AND ((@IsNull_SURGEON_SIGNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR"& _ 
                " ([SURGEON_SIGNATURE] = @Original_SURGEON_SIGNATURE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACOEMULSIF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PHACOEMULSIF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_HEALON_GV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_IALF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_IALF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_VISSOAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_DUOVISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_HEALON5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_OPHTHALINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_PROVISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BSS_PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BSS_PLUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_POWER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POWER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_POWER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POWER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FLOW_RATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FLOW_RATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FLOW_RATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VAC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VAC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VAC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VAC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IA_FLOW_RATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_FLOW_RATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IA_FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_FLOW_RATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IA_VAC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_VAC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IA_VAC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_VAC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOT_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOT_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOT_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DONE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORNEAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORNEAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORNEAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORNEAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FINAL_SIZE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FINAL_SIZE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FINAL_SIZE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FINAL_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULORHEXIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULORHEXIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULORHEXIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULORHEXIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HEYDRODISSECTION_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HEYDRODISSECTION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HEYDRODISSECTION_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HEYDRODISSECTION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_DIVIDE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_DIVIDE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_DIVIDE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_DIVIDE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_CHOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CHOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_CHOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CHOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_STOP_CHOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_STOP_CHOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_STOP_CHOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_STOP_CHOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_SCULPTING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_SCULPTING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_SCULPTING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_SCULPTING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_CRACKING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CRACKING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_CRACKING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CRACKING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IA_TIP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_TIP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IA_TIP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_TIP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IA_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IA_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULAR_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULAR_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULAR_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULAR_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_SULCUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_AC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_GENTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMPLICATION_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMPLICATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMPLICATION_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMPLICATION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMPLICATION_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMPLICATION_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PRO_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PRO_ANTERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PRO_PI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_PI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PRO_PI", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_PI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PRO_AT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_AT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PRO_AT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_AT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[S_OPER_PHACOEMULSIFICATION] ([CREATE_DATE], [OPERA_NO], [PATIE"& _ 
                "NT_NO], [PATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], ["& _ 
                "SCRUB], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_AN_GA], [S_AN_NEURO]"& _ 
                ", [S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TOPICAL], [VIS_HE"& _ 
                "ALON_GV], [VIS_IALF], [VIS_VISSOAT], [VIS_DUOVISE], [VIS_HEALON5], [VIS_OPHTHALI"& _ 
                "NE], [VIS_PROVISE], [BSS_PLUS], [POWER], [FLOW_RATE], [VAC], [PHACO_TIME], [IA_F"& _ 
                "LOW_RATE], [IA_VAC], [NOT_DONE], [DONE], [DONE_NOTE], [CORNEAL], [SCLERAL], [FIN"& _ 
                "AL_SIZE], [FINAL_SIZE_NOTE], [CAPSULORHEXIS], [HEYDRODISSECTION_YES], [HEYDRODIS"& _ 
                "SECTION_NO], [PHACO_DIVIDE], [PHACO_CHOP], [PHACO_STOP_CHOP], [PHACO_SCULPTING],"& _ 
                " [PHACO_CRACKING], [PHACO_OTHERS], [IA_TIP], [IA_OTHER], [CAPSULAR_YES], [CAPSUL"& _ 
                "AR_NO], [IOL_YES], [IOL_NO], [IOL_IN_CAPSULAR], [IOL_IN_SULCUS], [IOL_IN_AC], [S"& _ 
                "UTURE_YES], [SUTURE_NO], [SUB_GENTAL], [SUB_CEFAZOLIN], [SUB_DEXAMETHASONE], [SU"& _ 
                "B_OTHERS], [TOPICAL_PILOCARPINE], [TOPICAL_MAXITROL], [TOPICAL_OTHERS], [COMPLIC"& _ 
                "ATION_YES], [COMPLICATION_NO], [COMPLICATION_NOTE], [OTHER_PRO_ANTERIOR], [OTHER"& _ 
                "_PRO_PI], [OTHER_PRO_AT], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, "& _ 
                "@PATIENT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @"& _ 
                "SCRUB, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_AN_GA, @S_AN_NEURO, @S_A"& _ 
                "N_STANDBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @VIS_HEALON_GV, @"& _ 
                "VIS_IALF, @VIS_VISSOAT, @VIS_DUOVISE, @VIS_HEALON5, @VIS_OPHTHALINE, @VIS_PROVIS"& _ 
                "E, @BSS_PLUS, @POWER, @FLOW_RATE, @VAC, @PHACO_TIME, @IA_FLOW_RATE, @IA_VAC, @NO"& _ 
                "T_DONE, @DONE, @DONE_NOTE, @CORNEAL, @SCLERAL, @FINAL_SIZE, @FINAL_SIZE_NOTE, @C"& _ 
                "APSULORHEXIS, @HEYDRODISSECTION_YES, @HEYDRODISSECTION_NO, @PHACO_DIVIDE, @PHACO"& _ 
                "_CHOP, @PHACO_STOP_CHOP, @PHACO_SCULPTING, @PHACO_CRACKING, @PHACO_OTHERS, @IA_T"& _ 
                "IP, @IA_OTHER, @CAPSULAR_YES, @CAPSULAR_NO, @IOL_YES, @IOL_NO, @IOL_IN_CAPSULAR,"& _ 
                " @IOL_IN_SULCUS, @IOL_IN_AC, @SUTURE_YES, @SUTURE_NO, @SUB_GENTAL, @SUB_CEFAZOLI"& _ 
                "N, @SUB_DEXAMETHASONE, @SUB_OTHERS, @TOPICAL_PILOCARPINE, @TOPICAL_MAXITROL, @TO"& _ 
                "PICAL_OTHERS, @COMPLICATION_YES, @COMPLICATION_NO, @COMPLICATION_NOTE, @OTHER_PR"& _ 
                "O_ANTERIOR, @OTHER_PRO_PI, @OTHER_PRO_AT, @SURGEON_SIGNATURE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PHACOEMUL"& _ 
                "SIF_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AG"& _ 
                "E, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_G"& _ 
                "A, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, VI"& _ 
                "S_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS_OPHTHALINE, VI"& _ 
                "S_PROVISE, BSS_PLUS, POWER, FLOW_RATE, VAC, PHACO_TIME, IA_FLOW_RATE, IA_VAC, NO"& _ 
                "T_DONE, DONE, DONE_NOTE, CORNEAL, SCLERAL, FINAL_SIZE, FINAL_SIZE_NOTE, CAPSULOR"& _ 
                "HEXIS, HEYDRODISSECTION_YES, HEYDRODISSECTION_NO, PHACO_DIVIDE, PHACO_CHOP, PHAC"& _ 
                "O_STOP_CHOP, PHACO_SCULPTING, PHACO_CRACKING, PHACO_OTHERS, IA_TIP, IA_OTHER, CA"& _ 
                "PSULAR_YES, CAPSULAR_NO, IOL_YES, IOL_NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN"& _ 
                "_AC, SUTURE_YES, SUTURE_NO, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAMETHASONE, SUB_OT"& _ 
                "HERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, COMPLICATION_YES, C"& _ 
                "OMPLICATION_NO, COMPLICATION_NOTE, OTHER_PRO_ANTERIOR, OTHER_PRO_PI, OTHER_PRO_A"& _ 
                "T, SURGEON_SIGNATURE FROM S_OPER_PHACOEMULSIFICATION WHERE (PHACOEMULSIF_ID = SC"& _ 
                "OPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_IALF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS_PLUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POWER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POWER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FLOW_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VAC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_FLOW_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_VAC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_VAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORNEAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORNEAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FINAL_SIZE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FINAL_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULORHEXIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULORHEXIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HEYDRODISSECTION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HEYDRODISSECTION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_DIVIDE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_DIVIDE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_CHOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CHOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_STOP_CHOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_STOP_CHOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_SCULPTING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_SCULPTING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_CRACKING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CRACKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_TIP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_TIP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULAR_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULAR_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_ANTERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_PI", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_PI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_AT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_AT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_OPER_PHACOEMULSIFICATION] SET [CREATE_DATE] = @CREATE_DATE, [OPER"& _ 
                "A_NO] = @OPERA_NO, [PATIENT_NO] = @PATIENT_NO, [PATIENT_NAME] = @PATIENT_NAME, ["& _ 
                "PATIENT_SEX] = @PATIENT_SEX, [PATIENT_AGE] = @PATIENT_AGE, [START_TIME] = @START"& _ 
                "_TIME, [SURGEON] = @SURGEON, [SCRUB] = @SCRUB, [CIRCULATING] = @CIRCULATING, [AN"& _ 
                "ESTHESIONLOGIST] = @ANESTHESIONLOGIST, [DIAGNOSIS] = @DIAGNOSIS, [S_AN_GA] = @S_"& _ 
                "AN_GA, [S_AN_NEURO] = @S_AN_NEURO, [S_AN_STANDBY] = @S_AN_STANDBY, [S_AN_RETROBU"& _ 
                "LBAR] = @S_AN_RETROBULBAR, [S_AN_PERIBULBAR] = @S_AN_PERIBULBAR, [S_AN_TOPICAL] "& _ 
                "= @S_AN_TOPICAL, [VIS_HEALON_GV] = @VIS_HEALON_GV, [VIS_IALF] = @VIS_IALF, [VIS_"& _ 
                "VISSOAT] = @VIS_VISSOAT, [VIS_DUOVISE] = @VIS_DUOVISE, [VIS_HEALON5] = @VIS_HEAL"& _ 
                "ON5, [VIS_OPHTHALINE] = @VIS_OPHTHALINE, [VIS_PROVISE] = @VIS_PROVISE, [BSS_PLUS"& _ 
                "] = @BSS_PLUS, [POWER] = @POWER, [FLOW_RATE] = @FLOW_RATE, [VAC] = @VAC, [PHACO_"& _ 
                "TIME] = @PHACO_TIME, [IA_FLOW_RATE] = @IA_FLOW_RATE, [IA_VAC] = @IA_VAC, [NOT_DO"& _ 
                "NE] = @NOT_DONE, [DONE] = @DONE, [DONE_NOTE] = @DONE_NOTE, [CORNEAL] = @CORNEAL,"& _ 
                " [SCLERAL] = @SCLERAL, [FINAL_SIZE] = @FINAL_SIZE, [FINAL_SIZE_NOTE] = @FINAL_SI"& _ 
                "ZE_NOTE, [CAPSULORHEXIS] = @CAPSULORHEXIS, [HEYDRODISSECTION_YES] = @HEYDRODISSE"& _ 
                "CTION_YES, [HEYDRODISSECTION_NO] = @HEYDRODISSECTION_NO, [PHACO_DIVIDE] = @PHACO"& _ 
                "_DIVIDE, [PHACO_CHOP] = @PHACO_CHOP, [PHACO_STOP_CHOP] = @PHACO_STOP_CHOP, [PHAC"& _ 
                "O_SCULPTING] = @PHACO_SCULPTING, [PHACO_CRACKING] = @PHACO_CRACKING, [PHACO_OTHE"& _ 
                "RS] = @PHACO_OTHERS, [IA_TIP] = @IA_TIP, [IA_OTHER] = @IA_OTHER, [CAPSULAR_YES] "& _ 
                "= @CAPSULAR_YES, [CAPSULAR_NO] = @CAPSULAR_NO, [IOL_YES] = @IOL_YES, [IOL_NO] = "& _ 
                "@IOL_NO, [IOL_IN_CAPSULAR] = @IOL_IN_CAPSULAR, [IOL_IN_SULCUS] = @IOL_IN_SULCUS,"& _ 
                " [IOL_IN_AC] = @IOL_IN_AC, [SUTURE_YES] = @SUTURE_YES, [SUTURE_NO] = @SUTURE_NO,"& _ 
                " [SUB_GENTAL] = @SUB_GENTAL, [SUB_CEFAZOLIN] = @SUB_CEFAZOLIN, [SUB_DEXAMETHASON"& _ 
                "E] = @SUB_DEXAMETHASONE, [SUB_OTHERS] = @SUB_OTHERS, [TOPICAL_PILOCARPINE] = @TO"& _ 
                "PICAL_PILOCARPINE, [TOPICAL_MAXITROL] = @TOPICAL_MAXITROL, [TOPICAL_OTHERS] = @T"& _ 
                "OPICAL_OTHERS, [COMPLICATION_YES] = @COMPLICATION_YES, [COMPLICATION_NO] = @COMP"& _ 
                "LICATION_NO, [COMPLICATION_NOTE] = @COMPLICATION_NOTE, [OTHER_PRO_ANTERIOR] = @O"& _ 
                "THER_PRO_ANTERIOR, [OTHER_PRO_PI] = @OTHER_PRO_PI, [OTHER_PRO_AT] = @OTHER_PRO_A"& _ 
                "T, [SURGEON_SIGNATURE] = @SURGEON_SIGNATURE WHERE (([PHACOEMULSIF_ID] = @Origina"& _ 
                "l_PHACOEMULSIF_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ("& _ 
                "[CREATE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO"& _ 
                "] IS NULL) OR ([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AN"& _ 
                "D [PATIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_"& _ 
                "PATIENT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATI"& _ 
                "ENT_NAME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT"& _ 
                "_SEX] = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] "& _ 
                "IS NULL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = "& _ 
                "1 AND [START_TIME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsN"& _ 
                "ull_SURGEON = 1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ("& _ 
                "(@IsNull_SCRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@I"& _ 
                "sNull_CIRCULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_C"& _ 
                "IRCULATING)) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL"& _ 
                ") OR ([ANESTHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSI"& _ 
                "S = 1 AND [DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@Is"& _ 
                "Null_S_AN_GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AND "& _ 
                "((@IsNull_S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @Original_"& _ 
                "S_AN_NEURO)) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_A"& _ 
                "N_STANDBY] = @Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_"& _ 
                "AN_RETROBULBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBULBAR)) A"& _ 
                "ND ((@IsNull_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBU"& _ 
                "LBAR] = @Original_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOP"& _ 
                "ICAL] IS NULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNull_VIS_H"& _ 
                "EALON_GV = 1 AND [VIS_HEALON_GV] IS NULL) OR ([VIS_HEALON_GV] = @Original_VIS_HE"& _ 
                "ALON_GV)) AND ((@IsNull_VIS_IALF = 1 AND [VIS_IALF] IS NULL) OR ([VIS_IALF] = @O"& _ 
                "riginal_VIS_IALF)) AND ((@IsNull_VIS_VISSOAT = 1 AND [VIS_VISSOAT] IS NULL) OR ("& _ 
                "[VIS_VISSOAT] = @Original_VIS_VISSOAT)) AND ((@IsNull_VIS_DUOVISE = 1 AND [VIS_D"& _ 
                "UOVISE] IS NULL) OR ([VIS_DUOVISE] = @Original_VIS_DUOVISE)) AND ((@IsNull_VIS_H"& _ 
                "EALON5 = 1 AND [VIS_HEALON5] IS NULL) OR ([VIS_HEALON5] = @Original_VIS_HEALON5)"& _ 
                ") AND ((@IsNull_VIS_OPHTHALINE = 1 AND [VIS_OPHTHALINE] IS NULL) OR ([VIS_OPHTHA"& _ 
                "LINE] = @Original_VIS_OPHTHALINE)) AND ((@IsNull_VIS_PROVISE = 1 AND [VIS_PROVIS"& _ 
                "E] IS NULL) OR ([VIS_PROVISE] = @Original_VIS_PROVISE)) AND ((@IsNull_BSS_PLUS ="& _ 
                " 1 AND [BSS_PLUS] IS NULL) OR ([BSS_PLUS] = @Original_BSS_PLUS)) AND ((@IsNull_P"& _ 
                "OWER = 1 AND [POWER] IS NULL) OR ([POWER] = @Original_POWER)) AND ((@IsNull_FLOW"& _ 
                "_RATE = 1 AND [FLOW_RATE] IS NULL) OR ([FLOW_RATE] = @Original_FLOW_RATE)) AND ("& _ 
                "(@IsNull_VAC = 1 AND [VAC] IS NULL) OR ([VAC] = @Original_VAC)) AND ((@IsNull_PH"& _ 
                "ACO_TIME = 1 AND [PHACO_TIME] IS NULL) OR ([PHACO_TIME] = @Original_PHACO_TIME))"& _ 
                " AND ((@IsNull_IA_FLOW_RATE = 1 AND [IA_FLOW_RATE] IS NULL) OR ([IA_FLOW_RATE] ="& _ 
                " @Original_IA_FLOW_RATE)) AND ((@IsNull_IA_VAC = 1 AND [IA_VAC] IS NULL) OR ([IA"& _ 
                "_VAC] = @Original_IA_VAC)) AND ((@IsNull_NOT_DONE = 1 AND [NOT_DONE] IS NULL) OR"& _ 
                " ([NOT_DONE] = @Original_NOT_DONE)) AND ((@IsNull_DONE = 1 AND [DONE] IS NULL) O"& _ 
                "R ([DONE] = @Original_DONE)) AND ((@IsNull_DONE_NOTE = 1 AND [DONE_NOTE] IS NULL"& _ 
                ") OR ([DONE_NOTE] = @Original_DONE_NOTE)) AND ((@IsNull_CORNEAL = 1 AND [CORNEAL"& _ 
                "] IS NULL) OR ([CORNEAL] = @Original_CORNEAL)) AND ((@IsNull_SCLERAL = 1 AND [SC"& _ 
                "LERAL] IS NULL) OR ([SCLERAL] = @Original_SCLERAL)) AND ((@IsNull_FINAL_SIZE = 1"& _ 
                " AND [FINAL_SIZE] IS NULL) OR ([FINAL_SIZE] = @Original_FINAL_SIZE)) AND ((@IsNu"& _ 
                "ll_FINAL_SIZE_NOTE = 1 AND [FINAL_SIZE_NOTE] IS NULL) OR ([FINAL_SIZE_NOTE] = @O"& _ 
                "riginal_FINAL_SIZE_NOTE)) AND ((@IsNull_CAPSULORHEXIS = 1 AND [CAPSULORHEXIS] IS"& _ 
                " NULL) OR ([CAPSULORHEXIS] = @Original_CAPSULORHEXIS)) AND ((@IsNull_HEYDRODISSE"& _ 
                "CTION_YES = 1 AND [HEYDRODISSECTION_YES] IS NULL) OR ([HEYDRODISSECTION_YES] = @"& _ 
                "Original_HEYDRODISSECTION_YES)) AND ((@IsNull_HEYDRODISSECTION_NO = 1 AND [HEYDR"& _ 
                "ODISSECTION_NO] IS NULL) OR ([HEYDRODISSECTION_NO] = @Original_HEYDRODISSECTION_"& _ 
                "NO)) AND ((@IsNull_PHACO_DIVIDE = 1 AND [PHACO_DIVIDE] IS NULL) OR ([PHACO_DIVID"& _ 
                "E] = @Original_PHACO_DIVIDE)) AND ((@IsNull_PHACO_CHOP = 1 AND [PHACO_CHOP] IS N"& _ 
                "ULL) OR ([PHACO_CHOP] = @Original_PHACO_CHOP)) AND ((@IsNull_PHACO_STOP_CHOP = 1"& _ 
                " AND [PHACO_STOP_CHOP] IS NULL) OR ([PHACO_STOP_CHOP] = @Original_PHACO_STOP_CHO"& _ 
                "P)) AND ((@IsNull_PHACO_SCULPTING = 1 AND [PHACO_SCULPTING] IS NULL) OR ([PHACO_"& _ 
                "SCULPTING] = @Original_PHACO_SCULPTING)) AND ((@IsNull_PHACO_CRACKING = 1 AND [P"& _ 
                "HACO_CRACKING] IS NULL) OR ([PHACO_CRACKING] = @Original_PHACO_CRACKING)) AND (("& _ 
                "@IsNull_PHACO_OTHERS = 1 AND [PHACO_OTHERS] IS NULL) OR ([PHACO_OTHERS] = @Origi"& _ 
                "nal_PHACO_OTHERS)) AND ((@IsNull_IA_TIP = 1 AND [IA_TIP] IS NULL) OR ([IA_TIP] ="& _ 
                " @Original_IA_TIP)) AND ((@IsNull_IA_OTHER = 1 AND [IA_OTHER] IS NULL) OR ([IA_O"& _ 
                "THER] = @Original_IA_OTHER)) AND ((@IsNull_CAPSULAR_YES = 1 AND [CAPSULAR_YES] I"& _ 
                "S NULL) OR ([CAPSULAR_YES] = @Original_CAPSULAR_YES)) AND ((@IsNull_CAPSULAR_NO "& _ 
                "= 1 AND [CAPSULAR_NO] IS NULL) OR ([CAPSULAR_NO] = @Original_CAPSULAR_NO)) AND ("& _ 
                "(@IsNull_IOL_YES = 1 AND [IOL_YES] IS NULL) OR ([IOL_YES] = @Original_IOL_YES)) "& _ 
                "AND ((@IsNull_IOL_NO = 1 AND [IOL_NO] IS NULL) OR ([IOL_NO] = @Original_IOL_NO))"& _ 
                " AND ((@IsNull_IOL_IN_CAPSULAR = 1 AND [IOL_IN_CAPSULAR] IS NULL) OR ([IOL_IN_CA"& _ 
                "PSULAR] = @Original_IOL_IN_CAPSULAR)) AND ((@IsNull_IOL_IN_SULCUS = 1 AND [IOL_I"& _ 
                "N_SULCUS] IS NULL) OR ([IOL_IN_SULCUS] = @Original_IOL_IN_SULCUS)) AND ((@IsNull"& _ 
                "_IOL_IN_AC = 1 AND [IOL_IN_AC] IS NULL) OR ([IOL_IN_AC] = @Original_IOL_IN_AC)) "& _ 
                "AND ((@IsNull_SUTURE_YES = 1 AND [SUTURE_YES] IS NULL) OR ([SUTURE_YES] = @Origi"& _ 
                "nal_SUTURE_YES)) AND ((@IsNull_SUTURE_NO = 1 AND [SUTURE_NO] IS NULL) OR ([SUTUR"& _ 
                "E_NO] = @Original_SUTURE_NO)) AND ((@IsNull_SUB_GENTAL = 1 AND [SUB_GENTAL] IS N"& _ 
                "ULL) OR ([SUB_GENTAL] = @Original_SUB_GENTAL)) AND ((@IsNull_SUB_CEFAZOLIN = 1 A"& _ 
                "ND [SUB_CEFAZOLIN] IS NULL) OR ([SUB_CEFAZOLIN] = @Original_SUB_CEFAZOLIN)) AND "& _ 
                "((@IsNull_SUB_DEXAMETHASONE = 1 AND [SUB_DEXAMETHASONE] IS NULL) OR ([SUB_DEXAME"& _ 
                "THASONE] = @Original_SUB_DEXAMETHASONE)) AND ((@IsNull_SUB_OTHERS = 1 AND [SUB_O"& _ 
                "THERS] IS NULL) OR ([SUB_OTHERS] = @Original_SUB_OTHERS)) AND ((@IsNull_TOPICAL_"& _ 
                "PILOCARPINE = 1 AND [TOPICAL_PILOCARPINE] IS NULL) OR ([TOPICAL_PILOCARPINE] = @"& _ 
                "Original_TOPICAL_PILOCARPINE)) AND ((@IsNull_TOPICAL_MAXITROL = 1 AND [TOPICAL_M"& _ 
                "AXITROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Original_TOPICAL_MAXITROL)) AND ((@I"& _ 
                "sNull_TOPICAL_OTHERS = 1 AND [TOPICAL_OTHERS] IS NULL) OR ([TOPICAL_OTHERS] = @O"& _ 
                "riginal_TOPICAL_OTHERS)) AND ((@IsNull_COMPLICATION_YES = 1 AND [COMPLICATION_YE"& _ 
                "S] IS NULL) OR ([COMPLICATION_YES] = @Original_COMPLICATION_YES)) AND ((@IsNull_"& _ 
                "COMPLICATION_NO = 1 AND [COMPLICATION_NO] IS NULL) OR ([COMPLICATION_NO] = @Orig"& _ 
                "inal_COMPLICATION_NO)) AND ((@IsNull_COMPLICATION_NOTE = 1 AND [COMPLICATION_NOT"& _ 
                "E] IS NULL) OR ([COMPLICATION_NOTE] = @Original_COMPLICATION_NOTE)) AND ((@IsNul"& _ 
                "l_OTHER_PRO_ANTERIOR = 1 AND [OTHER_PRO_ANTERIOR] IS NULL) OR ([OTHER_PRO_ANTERI"& _ 
                "OR] = @Original_OTHER_PRO_ANTERIOR)) AND ((@IsNull_OTHER_PRO_PI = 1 AND [OTHER_P"& _ 
                "RO_PI] IS NULL) OR ([OTHER_PRO_PI] = @Original_OTHER_PRO_PI)) AND ((@IsNull_OTHE"& _ 
                "R_PRO_AT = 1 AND [OTHER_PRO_AT] IS NULL) OR ([OTHER_PRO_AT] = @Original_OTHER_PR"& _ 
                "O_AT)) AND ((@IsNull_SURGEON_SIGNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ("& _ 
                "[SURGEON_SIGNATURE] = @Original_SURGEON_SIGNATURE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PHACOEMULSIF_ID, C"& _ 
                "REATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_"& _ 
                "TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_N"& _ 
                "EURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, VIS_HEALON_"& _ 
                "GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS_OPHTHALINE, VIS_PROVISE"& _ 
                ", BSS_PLUS, POWER, FLOW_RATE, VAC, PHACO_TIME, IA_FLOW_RATE, IA_VAC, NOT_DONE, D"& _ 
                "ONE, DONE_NOTE, CORNEAL, SCLERAL, FINAL_SIZE, FINAL_SIZE_NOTE, CAPSULORHEXIS, HE"& _ 
                "YDRODISSECTION_YES, HEYDRODISSECTION_NO, PHACO_DIVIDE, PHACO_CHOP, PHACO_STOP_CH"& _ 
                "OP, PHACO_SCULPTING, PHACO_CRACKING, PHACO_OTHERS, IA_TIP, IA_OTHER, CAPSULAR_YE"& _ 
                "S, CAPSULAR_NO, IOL_YES, IOL_NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTU"& _ 
                "RE_YES, SUTURE_NO, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAMETHASONE, SUB_OTHERS, TOP"& _ 
                "ICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, COMPLICATION_YES, COMPLICATI"& _ 
                "ON_NO, COMPLICATION_NOTE, OTHER_PRO_ANTERIOR, OTHER_PRO_PI, OTHER_PRO_AT, SURGEO"& _ 
                "N_SIGNATURE FROM S_OPER_PHACOEMULSIFICATION WHERE (PHACOEMULSIF_ID = @PHACOEMULS"& _ 
                "IF_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_IALF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS_PLUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POWER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POWER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FLOW_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VAC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_FLOW_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_VAC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_VAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORNEAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORNEAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FINAL_SIZE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FINAL_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULORHEXIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULORHEXIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HEYDRODISSECTION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HEYDRODISSECTION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_DIVIDE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_DIVIDE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_CHOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CHOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_STOP_CHOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_STOP_CHOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_SCULPTING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_SCULPTING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_CRACKING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CRACKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_TIP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_TIP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULAR_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULAR_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_ANTERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_PI", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_PI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_AT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_AT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACOEMULSIF_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PHACOEMULSIF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_HEALON_GV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_IALF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_IALF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_VISSOAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_DUOVISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_HEALON5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_OPHTHALINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_PROVISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BSS_PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BSS_PLUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_POWER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POWER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_POWER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "POWER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FLOW_RATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FLOW_RATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FLOW_RATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VAC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VAC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VAC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VAC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IA_FLOW_RATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_FLOW_RATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IA_FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_FLOW_RATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IA_VAC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_VAC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IA_VAC", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_VAC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOT_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOT_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOT_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DONE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORNEAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORNEAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORNEAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORNEAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FINAL_SIZE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FINAL_SIZE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FINAL_SIZE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FINAL_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULORHEXIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULORHEXIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULORHEXIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULORHEXIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HEYDRODISSECTION_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HEYDRODISSECTION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_HEYDRODISSECTION_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_HEYDRODISSECTION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_DIVIDE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_DIVIDE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_DIVIDE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_DIVIDE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_CHOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CHOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_CHOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CHOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_STOP_CHOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_STOP_CHOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_STOP_CHOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_STOP_CHOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_SCULPTING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_SCULPTING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_SCULPTING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_SCULPTING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_CRACKING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CRACKING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_CRACKING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CRACKING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PHACO_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACO_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IA_TIP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_TIP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IA_TIP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_TIP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IA_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IA_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULAR_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULAR_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULAR_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULAR_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_SULCUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_AC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_GENTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMPLICATION_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMPLICATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMPLICATION_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMPLICATION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMPLICATION_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMPLICATION_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PRO_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PRO_ANTERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PRO_PI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_PI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PRO_PI", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_PI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PRO_AT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_AT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PRO_AT", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_AT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACOEMULSIF_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PHACOEMULSIF_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PHACOEMULSIF_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_"& _ 
                "SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DI"& _ 
                "AGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S"& _ 
                "_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS"& _ 
                "_OPHTHALINE, VIS_PROVISE, BSS_PLUS, POWER, FLOW_RATE, VAC, PHACO_TIME, IA_FLOW_R"& _ 
                "ATE, IA_VAC, NOT_DONE, DONE, DONE_NOTE, CORNEAL, SCLERAL, FINAL_SIZE, FINAL_SIZE"& _ 
                "_NOTE, CAPSULORHEXIS, HEYDRODISSECTION_YES, HEYDRODISSECTION_NO, PHACO_DIVIDE, P"& _ 
                "HACO_CHOP, PHACO_STOP_CHOP, PHACO_SCULPTING, PHACO_CRACKING, PHACO_OTHERS, IA_TI"& _ 
                "P, IA_OTHER, CAPSULAR_YES, CAPSULAR_NO, IOL_YES, IOL_NO, IOL_IN_CAPSULAR, IOL_IN"& _ 
                "_SULCUS, IOL_IN_AC, SUTURE_YES, SUTURE_NO, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAME"& _ 
                "THASONE, SUB_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, COMP"& _ 
                "LICATION_YES, COMPLICATION_NO, COMPLICATION_NOTE, OTHER_PRO_ANTERIOR, OTHER_PRO_"& _ 
                "PI, OTHER_PRO_AT, SURGEON_SIGNATURE FROM dbo.S_OPER_PHACOEMULSIFICATION"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT PHACOEMULSIF_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_"& _ 
                "SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DI"& _ 
                "AGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S"& _ 
                "_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS"& _ 
                "_OPHTHALINE, VIS_PROVISE, BSS_PLUS, POWER, FLOW_RATE, VAC, PHACO_TIME, IA_FLOW_R"& _ 
                "ATE, IA_VAC, NOT_DONE, DONE, DONE_NOTE, CORNEAL, SCLERAL, FINAL_SIZE, FINAL_SIZE"& _ 
                "_NOTE, CAPSULORHEXIS, HEYDRODISSECTION_YES, HEYDRODISSECTION_NO, PHACO_DIVIDE, P"& _ 
                "HACO_CHOP, PHACO_STOP_CHOP, PHACO_SCULPTING, PHACO_CRACKING, PHACO_OTHERS, IA_TI"& _ 
                "P, IA_OTHER, CAPSULAR_YES, CAPSULAR_NO, IOL_YES, IOL_NO, IOL_IN_CAPSULAR, IOL_IN"& _ 
                "_SULCUS, IOL_IN_AC, SUTURE_YES, SUTURE_NO, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAME"& _ 
                "THASONE, SUB_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, COMP"& _ 
                "LICATION_YES, COMPLICATION_NO, COMPLICATION_NOTE, OTHER_PRO_ANTERIOR, OTHER_PRO_"& _ 
                "PI, OTHER_PRO_AT, SURGEON_SIGNATURE FROM dbo.S_OPER_PHACOEMULSIFICATION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE P"& _ 
                "HACOEMULSIF_ID=@PHACOEMULSIF_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACOEMULSIF_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PHACOEMULSIF_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [dbo].[S_OPER_PHACOEMULSIFICATION] ([CREATE_DATE], [OPERA_NO], [PATIE"& _ 
                "NT_NO], [PATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], ["& _ 
                "SCRUB], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_AN_GA], [S_AN_NEURO]"& _ 
                ", [S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TOPICAL], [VIS_HE"& _ 
                "ALON_GV], [VIS_IALF], [VIS_VISSOAT], [VIS_DUOVISE], [VIS_HEALON5], [VIS_OPHTHALI"& _ 
                "NE], [VIS_PROVISE], [BSS_PLUS], [POWER], [FLOW_RATE], [VAC], [PHACO_TIME], [IA_F"& _ 
                "LOW_RATE], [IA_VAC], [NOT_DONE], [DONE], [DONE_NOTE], [CORNEAL], [SCLERAL], [FIN"& _ 
                "AL_SIZE], [FINAL_SIZE_NOTE], [CAPSULORHEXIS], [HEYDRODISSECTION_YES], [HEYDRODIS"& _ 
                "SECTION_NO], [PHACO_DIVIDE], [PHACO_CHOP], [PHACO_STOP_CHOP], [PHACO_SCULPTING],"& _ 
                " [PHACO_CRACKING], [PHACO_OTHERS], [IA_TIP], [IA_OTHER], [CAPSULAR_YES], [CAPSUL"& _ 
                "AR_NO], [IOL_YES], [IOL_NO], [IOL_IN_CAPSULAR], [IOL_IN_SULCUS], [IOL_IN_AC], [S"& _ 
                "UTURE_YES], [SUTURE_NO], [SUB_GENTAL], [SUB_CEFAZOLIN], [SUB_DEXAMETHASONE], [SU"& _ 
                "B_OTHERS], [TOPICAL_PILOCARPINE], [TOPICAL_MAXITROL], [TOPICAL_OTHERS], [COMPLIC"& _ 
                "ATION_YES], [COMPLICATION_NO], [COMPLICATION_NOTE], [OTHER_PRO_ANTERIOR], [OTHER"& _ 
                "_PRO_PI], [OTHER_PRO_AT], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, "& _ 
                "@PATIENT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @"& _ 
                "SCRUB, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_AN_GA, @S_AN_NEURO, @S_A"& _ 
                "N_STANDBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @VIS_HEALON_GV, @"& _ 
                "VIS_IALF, @VIS_VISSOAT, @VIS_DUOVISE, @VIS_HEALON5, @VIS_OPHTHALINE, @VIS_PROVIS"& _ 
                "E, @BSS_PLUS, @POWER, @FLOW_RATE, @VAC, @PHACO_TIME, @IA_FLOW_RATE, @IA_VAC, @NO"& _ 
                "T_DONE, @DONE, @DONE_NOTE, @CORNEAL, @SCLERAL, @FINAL_SIZE, @FINAL_SIZE_NOTE, @C"& _ 
                "APSULORHEXIS, @HEYDRODISSECTION_YES, @HEYDRODISSECTION_NO, @PHACO_DIVIDE, @PHACO"& _ 
                "_CHOP, @PHACO_STOP_CHOP, @PHACO_SCULPTING, @PHACO_CRACKING, @PHACO_OTHERS, @IA_T"& _ 
                "IP, @IA_OTHER, @CAPSULAR_YES, @CAPSULAR_NO, @IOL_YES, @IOL_NO, @IOL_IN_CAPSULAR,"& _ 
                " @IOL_IN_SULCUS, @IOL_IN_AC, @SUTURE_YES, @SUTURE_NO, @SUB_GENTAL, @SUB_CEFAZOLI"& _ 
                "N, @SUB_DEXAMETHASONE, @SUB_OTHERS, @TOPICAL_PILOCARPINE, @TOPICAL_MAXITROL, @TO"& _ 
                "PICAL_OTHERS, @COMPLICATION_YES, @COMPLICATION_NO, @COMPLICATION_NOTE, @OTHER_PR"& _ 
                "O_ANTERIOR, @OTHER_PRO_PI, @OTHER_PRO_AT, @SURGEON_SIGNATURE)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_IALF", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS_PLUS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POWER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "POWER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FLOW_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VAC", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "VAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_FLOW_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_VAC", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_VAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOT_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORNEAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CORNEAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FINAL_SIZE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FINAL_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULORHEXIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULORHEXIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HEYDRODISSECTION_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HEYDRODISSECTION_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_DIVIDE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_DIVIDE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_CHOP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CHOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_STOP_CHOP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_STOP_CHOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_SCULPTING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_SCULPTING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_CRACKING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CRACKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_TIP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_TIP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULAR_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULAR_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_ANTERIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_PI", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_PI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_AT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_AT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE       S_OPER_PHACOEMULSIFICATION"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                START_TIME =@START_TI"& _ 
                "ME, SURGEON = @SURGEON, SCRUB = @SCRUB, CIRCULATING = @CIRCULATING, ANESTHESIONL"& _ 
                "OGIST = @ANESTHESIONLOGIST, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DIAGNOSIS = @DIAGNOSIS, S"& _ 
                "_AN_GA = @S_AN_GA, S_AN_NEURO = @S_AN_NEURO, S_AN_STANDBY = @S_AN_STANDBY, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      S_AN_RETROBULBAR = @S_AN_RETROBULBAR, S_AN_PERIBULBAR = @S"& _ 
                "_AN_PERIBULBAR, S_AN_TOPICAL = @S_AN_TOPICAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VIS_HEA"& _ 
                "LON_GV = @VIS_HEALON_GV, VIS_IALF = @VIS_IALF, VIS_VISSOAT = @VIS_VISSOAT, VIS_D"& _ 
                "UOVISE = @VIS_DUOVISE, VIS_HEALON5 = @VIS_HEALON5, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VI"& _ 
                "S_OPHTHALINE = @VIS_OPHTHALINE, VIS_PROVISE = @VIS_PROVISE, BSS_PLUS = @BSS_PLUS"& _ 
                ", POWER = @POWER, FLOW_RATE = @FLOW_RATE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VAC = @VAC,"& _ 
                " PHACO_TIME = @PHACO_TIME, IA_FLOW_RATE = @IA_FLOW_RATE, IA_VAC = @IA_VAC, NOT_D"& _ 
                "ONE = @NOT_DONE, DONE = @DONE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DONE_NOTE = @DONE_NOTE"& _ 
                ", CORNEAL = @CORNEAL, SCLERAL = @SCLERAL, FINAL_SIZE = @FINAL_SIZE, FINAL_SIZE_N"& _ 
                "OTE = @FINAL_SIZE_NOTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAPSULORHEXIS = @CAPSULORHEXI"& _ 
                "S, HEYDRODISSECTION_YES = @HEYDRODISSECTION_YES, HEYDRODISSECTION_NO = @HEYDRODI"& _ 
                "SSECTION_NO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PHACO_DIVIDE = @PHACO_DIVIDE, PHACO_CHOP"& _ 
                " = @PHACO_CHOP, PHACO_STOP_CHOP = @PHACO_STOP_CHOP, PHACO_SCULPTING = @PHACO_SCU"& _ 
                "LPTING, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PHACO_CRACKING = @PHACO_CRACKING, PHACO_OTHER"& _ 
                "S = @PHACO_OTHERS, IA_TIP = @IA_TIP, IA_OTHER = @IA_OTHER, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      CAPSULAR_YES = @CAPSULAR_YES, CAPSULAR_NO = @CAPSULAR_NO, IOL_YES = @IOL_Y"& _ 
                "ES, IOL_NO = @IOL_NO, IOL_IN_CAPSULAR = @IOL_IN_CAPSULAR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     IOL_IN_SULCUS = @IOL_IN_SULCUS, IOL_IN_AC = @IOL_IN_AC, SUTURE_YES = @SUTUR"& _ 
                "E_YES, SUTURE_NO = @SUTURE_NO, SUB_GENTAL = @SUB_GENTAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUB_CEFAZOLIN = @SUB_CEFAZOLIN, SUB_DEXAMETHASONE = @SUB_DEXAMETHASONE, SUB_"& _ 
                "OTHERS = @SUB_OTHERS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TOPICAL_PILOCARPINE = @TOPICAL_"& _ 
                "PILOCARPINE, TOPICAL_MAXITROL = @TOPICAL_MAXITROL, TOPICAL_OTHERS = @TOPICAL_OTH"& _ 
                "ERS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         COMPLICATION_YES = @COMPLICATION_YES, COMPLICATI"& _ 
                "ON_NO = @COMPLICATION_NO, COMPLICATION_NOTE = @COMPLICATION_NOTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             OTHER_PRO_ANTERIOR = @OTHER_PRO_ANTERIOR, OTHER_PRO_PI = @OTHER_PRO"& _ 
                "_PI, OTHER_PRO_AT = @OTHER_PRO_AT, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SURGEON_SIGNATURE "& _ 
                "= @SURGEON_SIGNATURE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PHACOEMULSIF_ID = @Original_PHACOEMULSIF_ID)"& _ 
                ""
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_IALF", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS_PLUS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@POWER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "POWER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FLOW_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VAC", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "VAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_FLOW_RATE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_FLOW_RATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_VAC", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_VAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOT_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORNEAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CORNEAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FINAL_SIZE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FINAL_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "FINAL_SIZE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULORHEXIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULORHEXIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HEYDRODISSECTION_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@HEYDRODISSECTION_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "HEYDRODISSECTION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_DIVIDE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_DIVIDE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_CHOP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CHOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_STOP_CHOP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_STOP_CHOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_SCULPTING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_SCULPTING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_CRACKING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_CRACKING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PHACO_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "PHACO_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_TIP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_TIP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IA_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "IA_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULAR_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULAR_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULAR_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPLICATION_NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPLICATION_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_ANTERIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_PI", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_PI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PRO_AT", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PRO_AT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PHACOEMULSIF_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PHACOEMULSIF_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable = New DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable, ByVal PHACOEMULSIF_ID As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PHACOEMULSIF_ID,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectPhacoemulsification(ByVal PHACOEMULSIF_ID As Decimal) As DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PHACOEMULSIF_ID,Decimal)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable = New DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PHACOEMULSIFICATIONDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "S_OPER_PHACOEMULSIFICATION")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PHACOEMULSIF_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_POWER As String,  _
                    ByVal Original_FLOW_RATE As String,  _
                    ByVal Original_VAC As String,  _
                    ByVal Original_PHACO_TIME As String,  _
                    ByVal Original_IA_FLOW_RATE As String,  _
                    ByVal Original_IA_VAC As String,  _
                    ByVal Original_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DONE_NOTE As String,  _
                    ByVal Original_CORNEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FINAL_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FINAL_SIZE_NOTE As String,  _
                    ByVal Original_CAPSULORHEXIS As String,  _
                    ByVal Original_HEYDRODISSECTION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HEYDRODISSECTION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_DIVIDE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_STOP_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_SCULPTING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_CRACKING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_OTHERS As String,  _
                    ByVal Original_IA_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IA_OTHER As String,  _
                    ByVal Original_CAPSULAR_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULAR_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHERS As String,  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_COMPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COMPLICATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COMPLICATION_NOTE As String,  _
                    ByVal Original_OTHER_PRO_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PRO_PI As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PRO_AT As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PHACOEMULSIF_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_HEALON_GV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_VIS_HEALON_GV.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_IALF.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_VIS_IALF.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_VISSOAT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_VIS_VISSOAT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_DUOVISE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_VIS_DUOVISE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_HEALON5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_VIS_HEALON5.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_OPHTHALINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_VIS_OPHTHALINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_PROVISE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_VIS_PROVISE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_BSS_PLUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_BSS_PLUS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_POWER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_POWER,String)
            End If
            If (Original_FLOW_RATE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_FLOW_RATE,String)
            End If
            If (Original_VAC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_VAC,String)
            End If
            If (Original_PHACO_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_PHACO_TIME,String)
            End If
            If (Original_IA_FLOW_RATE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_IA_FLOW_RATE,String)
            End If
            If (Original_IA_VAC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_IA_VAC,String)
            End If
            If (Original_NOT_DONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_DONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_DONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_DONE_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_DONE_NOTE,String)
            End If
            If (Original_CORNEAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_CORNEAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLERAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_SCLERAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_FINAL_SIZE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_FINAL_SIZE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_FINAL_SIZE_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_FINAL_SIZE_NOTE,String)
            End If
            If (Original_CAPSULORHEXIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_CAPSULORHEXIS,String)
            End If
            If (Original_HEYDRODISSECTION_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_HEYDRODISSECTION_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_HEYDRODISSECTION_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_HEYDRODISSECTION_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_DIVIDE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_PHACO_DIVIDE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_CHOP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_PHACO_CHOP.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_STOP_CHOP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_PHACO_STOP_CHOP.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_SCULPTING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_PHACO_SCULPTING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_CRACKING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_PHACO_CRACKING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_PHACO_OTHERS,String)
            End If
            If (Original_IA_TIP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_IA_TIP.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_IA_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_IA_OTHER,String)
            End If
            If (Original_CAPSULAR_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_CAPSULAR_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPSULAR_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_CAPSULAR_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_IOL_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_IOL_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_CAPSULAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_IOL_IN_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_SULCUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_IOL_IN_SULCUS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_AC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_IOL_IN_AC.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_SUTURE_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_SUTURE_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_SUTURE_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_SUTURE_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_GENTAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_SUB_GENTAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_SUB_OTHERS,String)
            End If
            If (Original_TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_TOPICAL_OTHERS,String)
            End If
            If (Original_COMPLICATION_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_COMPLICATION_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_COMPLICATION_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_COMPLICATION_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_COMPLICATION_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_COMPLICATION_NOTE,String)
            End If
            If (Original_OTHER_PRO_ANTERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_OTHER_PRO_ANTERIOR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_OTHER_PRO_PI.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_OTHER_PRO_PI.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_OTHER_PRO_AT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_OTHER_PRO_AT,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal POWER As String,  _
                    ByVal FLOW_RATE As String,  _
                    ByVal VAC As String,  _
                    ByVal PHACO_TIME As String,  _
                    ByVal IA_FLOW_RATE As String,  _
                    ByVal IA_VAC As String,  _
                    ByVal NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE_NOTE As String,  _
                    ByVal CORNEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE_NOTE As String,  _
                    ByVal CAPSULORHEXIS As String,  _
                    ByVal HEYDRODISSECTION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal HEYDRODISSECTION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_DIVIDE As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_STOP_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_SCULPTING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CRACKING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_OTHERS As String,  _
                    ByVal IA_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal IA_OTHER As String,  _
                    ByVal CAPSULAR_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULAR_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal COMPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NOTE As String,  _
                    ByVal OTHER_PRO_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_PI As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_AT As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON_GV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(VIS_HEALON_GV.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (VIS_IALF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(VIS_IALF.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (VIS_VISSOAT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(VIS_VISSOAT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (VIS_DUOVISE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(VIS_DUOVISE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(VIS_HEALON5.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VIS_OPHTHALINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(VIS_OPHTHALINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (VIS_PROVISE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(VIS_PROVISE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (BSS_PLUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(BSS_PLUS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (POWER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(POWER,String)
            End If
            If (FLOW_RATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(FLOW_RATE,String)
            End If
            If (VAC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(VAC,String)
            End If
            If (PHACO_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(PHACO_TIME,String)
            End If
            If (IA_FLOW_RATE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(IA_FLOW_RATE,String)
            End If
            If (IA_VAC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(IA_VAC,String)
            End If
            If (NOT_DONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (DONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(DONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (DONE_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(DONE_NOTE,String)
            End If
            If (CORNEAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(CORNEAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(SCLERAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (FINAL_SIZE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(FINAL_SIZE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (FINAL_SIZE_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(FINAL_SIZE_NOTE,String)
            End If
            If (CAPSULORHEXIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CAPSULORHEXIS,String)
            End If
            If (HEYDRODISSECTION_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(HEYDRODISSECTION_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (HEYDRODISSECTION_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(HEYDRODISSECTION_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (PHACO_DIVIDE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(PHACO_DIVIDE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (PHACO_CHOP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(PHACO_CHOP.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (PHACO_STOP_CHOP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(PHACO_STOP_CHOP.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (PHACO_SCULPTING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(PHACO_SCULPTING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (PHACO_CRACKING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(PHACO_CRACKING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (PHACO_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(PHACO_OTHERS,String)
            End If
            If (IA_TIP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(IA_TIP.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IA_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(IA_OTHER,String)
            End If
            If (CAPSULAR_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(CAPSULAR_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (CAPSULAR_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(CAPSULAR_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (IOL_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(IOL_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (IOL_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(IOL_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_CAPSULAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(IOL_IN_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_SULCUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(IOL_IN_SULCUS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_AC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(IOL_IN_AC.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(SUTURE_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(SUTURE_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (SUB_GENTAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(SUB_GENTAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(SUB_OTHERS,String)
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (COMPLICATION_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(COMPLICATION_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (COMPLICATION_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(COMPLICATION_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (COMPLICATION_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(COMPLICATION_NOTE,String)
            End If
            If (OTHER_PRO_ANTERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(OTHER_PRO_ANTERIOR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PRO_PI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(OTHER_PRO_PI.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PRO_AT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(OTHER_PRO_AT,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal POWER As String,  _
                    ByVal FLOW_RATE As String,  _
                    ByVal VAC As String,  _
                    ByVal PHACO_TIME As String,  _
                    ByVal IA_FLOW_RATE As String,  _
                    ByVal IA_VAC As String,  _
                    ByVal NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE_NOTE As String,  _
                    ByVal CORNEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE_NOTE As String,  _
                    ByVal CAPSULORHEXIS As String,  _
                    ByVal HEYDRODISSECTION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal HEYDRODISSECTION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_DIVIDE As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_STOP_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_SCULPTING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CRACKING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_OTHERS As String,  _
                    ByVal IA_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal IA_OTHER As String,  _
                    ByVal CAPSULAR_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULAR_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal COMPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NOTE As String,  _
                    ByVal OTHER_PRO_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_PI As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_AT As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PHACOEMULSIF_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_POWER As String,  _
                    ByVal Original_FLOW_RATE As String,  _
                    ByVal Original_VAC As String,  _
                    ByVal Original_PHACO_TIME As String,  _
                    ByVal Original_IA_FLOW_RATE As String,  _
                    ByVal Original_IA_VAC As String,  _
                    ByVal Original_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DONE_NOTE As String,  _
                    ByVal Original_CORNEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FINAL_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FINAL_SIZE_NOTE As String,  _
                    ByVal Original_CAPSULORHEXIS As String,  _
                    ByVal Original_HEYDRODISSECTION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HEYDRODISSECTION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_DIVIDE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_STOP_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_SCULPTING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_CRACKING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_OTHERS As String,  _
                    ByVal Original_IA_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IA_OTHER As String,  _
                    ByVal Original_CAPSULAR_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULAR_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHERS As String,  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_COMPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COMPLICATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COMPLICATION_NOTE As String,  _
                    ByVal Original_OTHER_PRO_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PRO_PI As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PRO_AT As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String,  _
                    ByVal PHACOEMULSIF_ID As Decimal) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON_GV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(VIS_HEALON_GV.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (VIS_IALF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(VIS_IALF.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (VIS_VISSOAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(VIS_VISSOAT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (VIS_DUOVISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(VIS_DUOVISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(VIS_HEALON5.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VIS_OPHTHALINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(VIS_OPHTHALINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (VIS_PROVISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(VIS_PROVISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (BSS_PLUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(BSS_PLUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (POWER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(POWER,String)
            End If
            If (FLOW_RATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(FLOW_RATE,String)
            End If
            If (VAC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(VAC,String)
            End If
            If (PHACO_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(PHACO_TIME,String)
            End If
            If (IA_FLOW_RATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(IA_FLOW_RATE,String)
            End If
            If (IA_VAC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(IA_VAC,String)
            End If
            If (NOT_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (DONE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(DONE_NOTE,String)
            End If
            If (CORNEAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(CORNEAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(SCLERAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (FINAL_SIZE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(FINAL_SIZE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (FINAL_SIZE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(FINAL_SIZE_NOTE,String)
            End If
            If (CAPSULORHEXIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(CAPSULORHEXIS,String)
            End If
            If (HEYDRODISSECTION_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(HEYDRODISSECTION_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (HEYDRODISSECTION_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(HEYDRODISSECTION_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (PHACO_DIVIDE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(PHACO_DIVIDE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (PHACO_CHOP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(PHACO_CHOP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (PHACO_STOP_CHOP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(PHACO_STOP_CHOP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (PHACO_SCULPTING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(PHACO_SCULPTING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (PHACO_CRACKING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(PHACO_CRACKING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (PHACO_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(PHACO_OTHERS,String)
            End If
            If (IA_TIP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(IA_TIP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IA_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(IA_OTHER,String)
            End If
            If (CAPSULAR_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(CAPSULAR_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (CAPSULAR_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(CAPSULAR_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (IOL_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(IOL_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (IOL_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(IOL_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_CAPSULAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(IOL_IN_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_SULCUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(IOL_IN_SULCUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_AC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(IOL_IN_AC.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(SUTURE_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(SUTURE_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (SUB_GENTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(SUB_GENTAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(SUB_OTHERS,String)
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (COMPLICATION_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(COMPLICATION_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (COMPLICATION_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(COMPLICATION_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (COMPLICATION_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(COMPLICATION_NOTE,String)
            End If
            If (OTHER_PRO_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(OTHER_PRO_ANTERIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PRO_PI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(OTHER_PRO_PI.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PRO_AT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(OTHER_PRO_AT,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_PHACOEMULSIF_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_HEALON_GV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_VIS_HEALON_GV.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_IALF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_VIS_IALF.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_VISSOAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_VIS_VISSOAT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_DUOVISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_VIS_DUOVISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_HEALON5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_VIS_HEALON5.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_OPHTHALINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_VIS_OPHTHALINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_PROVISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_VIS_PROVISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (Original_BSS_PLUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_BSS_PLUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (Original_POWER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_POWER,String)
            End If
            If (Original_FLOW_RATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_FLOW_RATE,String)
            End If
            If (Original_VAC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_VAC,String)
            End If
            If (Original_PHACO_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_PHACO_TIME,String)
            End If
            If (Original_IA_FLOW_RATE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_IA_FLOW_RATE,String)
            End If
            If (Original_IA_VAC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_IA_VAC,String)
            End If
            If (Original_NOT_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            End If
            If (Original_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            End If
            If (Original_DONE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_DONE_NOTE,String)
            End If
            If (Original_CORNEAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_CORNEAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_SCLERAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (Original_FINAL_SIZE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_FINAL_SIZE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            End If
            If (Original_FINAL_SIZE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_FINAL_SIZE_NOTE,String)
            End If
            If (Original_CAPSULORHEXIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_CAPSULORHEXIS,String)
            End If
            If (Original_HEYDRODISSECTION_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_HEYDRODISSECTION_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            End If
            If (Original_HEYDRODISSECTION_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_HEYDRODISSECTION_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_DIVIDE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_PHACO_DIVIDE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_CHOP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_PHACO_CHOP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_STOP_CHOP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_PHACO_STOP_CHOP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_SCULPTING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_PHACO_SCULPTING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_CRACKING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_PHACO_CRACKING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = Global.System.DBNull.Value
            End If
            If (Original_PHACO_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_PHACO_OTHERS,String)
            End If
            If (Original_IA_TIP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_IA_TIP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = Global.System.DBNull.Value
            End If
            If (Original_IA_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_IA_OTHER,String)
            End If
            If (Original_CAPSULAR_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_CAPSULAR_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPSULAR_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(Original_CAPSULAR_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(Original_IOL_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_IOL_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_CAPSULAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(Original_IOL_IN_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_SULCUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(Original_IOL_IN_SULCUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_AC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(Original_IOL_IN_AC.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = Global.System.DBNull.Value
            End If
            If (Original_SUTURE_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(Original_SUTURE_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = Global.System.DBNull.Value
            End If
            If (Original_SUTURE_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(Original_SUTURE_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_GENTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(Original_SUB_GENTAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(Original_SUB_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(Original_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(Original_SUB_OTHERS,String)
            End If
            If (Original_TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(Original_TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(Original_TOPICAL_OTHERS,String)
            End If
            If (Original_COMPLICATION_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(Original_COMPLICATION_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = Global.System.DBNull.Value
            End If
            If (Original_COMPLICATION_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(Original_COMPLICATION_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = Global.System.DBNull.Value
            End If
            If (Original_COMPLICATION_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(Original_COMPLICATION_NOTE,String)
            End If
            If (Original_OTHER_PRO_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(Original_OTHER_PRO_ANTERIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = Global.System.DBNull.Value
            End If
            If (Original_OTHER_PRO_PI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(Original_OTHER_PRO_PI.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = Global.System.DBNull.Value
            End If
            If (Original_OTHER_PRO_AT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(Original_OTHER_PRO_AT,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(220).Value = CType(PHACOEMULSIF_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal POWER As String,  _
                    ByVal FLOW_RATE As String,  _
                    ByVal VAC As String,  _
                    ByVal PHACO_TIME As String,  _
                    ByVal IA_FLOW_RATE As String,  _
                    ByVal IA_VAC As String,  _
                    ByVal NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE_NOTE As String,  _
                    ByVal CORNEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE_NOTE As String,  _
                    ByVal CAPSULORHEXIS As String,  _
                    ByVal HEYDRODISSECTION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal HEYDRODISSECTION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_DIVIDE As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_STOP_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_SCULPTING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CRACKING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_OTHERS As String,  _
                    ByVal IA_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal IA_OTHER As String,  _
                    ByVal CAPSULAR_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULAR_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal COMPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NOTE As String,  _
                    ByVal OTHER_PRO_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_PI As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_AT As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PHACOEMULSIF_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_POWER As String,  _
                    ByVal Original_FLOW_RATE As String,  _
                    ByVal Original_VAC As String,  _
                    ByVal Original_PHACO_TIME As String,  _
                    ByVal Original_IA_FLOW_RATE As String,  _
                    ByVal Original_IA_VAC As String,  _
                    ByVal Original_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_DONE_NOTE As String,  _
                    ByVal Original_CORNEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FINAL_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_FINAL_SIZE_NOTE As String,  _
                    ByVal Original_CAPSULORHEXIS As String,  _
                    ByVal Original_HEYDRODISSECTION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_HEYDRODISSECTION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_DIVIDE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_STOP_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_SCULPTING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_CRACKING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PHACO_OTHERS As String,  _
                    ByVal Original_IA_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IA_OTHER As String,  _
                    ByVal Original_CAPSULAR_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULAR_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHERS As String,  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_COMPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COMPLICATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COMPLICATION_NOTE As String,  _
                    ByVal Original_OTHER_PRO_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PRO_PI As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PRO_AT As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Return Me.Update(CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS_OPHTHALINE, VIS_PROVISE, BSS_PLUS, POWER, FLOW_RATE, VAC, PHACO_TIME, IA_FLOW_RATE, IA_VAC, NOT_DONE, DONE, DONE_NOTE, CORNEAL, SCLERAL, FINAL_SIZE, FINAL_SIZE_NOTE, CAPSULORHEXIS, HEYDRODISSECTION_YES, HEYDRODISSECTION_NO, PHACO_DIVIDE, PHACO_CHOP, PHACO_STOP_CHOP, PHACO_SCULPTING, PHACO_CRACKING, PHACO_OTHERS, IA_TIP, IA_OTHER, CAPSULAR_YES, CAPSULAR_NO, IOL_YES, IOL_NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTURE_YES, SUTURE_NO, SUB_GENTAL, SUB_CEFAZOLIN, SUB_DEXAMETHASONE, SUB_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, COMPLICATION_YES, COMPLICATION_NO, COMPLICATION_NOTE, OTHER_PRO_ANTERIOR, OTHER_PRO_PI, OTHER_PRO_AT, SURGEON_SIGNATURE, Original_PHACOEMULSIF_ID, Original_CREATE_DATE, Original_OPERA_NO, Original_PATIENT_NO, Original_PATIENT_NAME, Original_PATIENT_SEX, Original_PATIENT_AGE, Original_START_TIME, Original_SURGEON, Original_SCRUB, Original_CIRCULATING, Original_ANESTHESIONLOGIST, Original_DIAGNOSIS, Original_S_AN_GA, Original_S_AN_NEURO, Original_S_AN_STANDBY, Original_S_AN_RETROBULBAR, Original_S_AN_PERIBULBAR, Original_S_AN_TOPICAL, Original_VIS_HEALON_GV, Original_VIS_IALF, Original_VIS_VISSOAT, Original_VIS_DUOVISE, Original_VIS_HEALON5, Original_VIS_OPHTHALINE, Original_VIS_PROVISE, Original_BSS_PLUS, Original_POWER, Original_FLOW_RATE, Original_VAC, Original_PHACO_TIME, Original_IA_FLOW_RATE, Original_IA_VAC, Original_NOT_DONE, Original_DONE, Original_DONE_NOTE, Original_CORNEAL, Original_SCLERAL, Original_FINAL_SIZE, Original_FINAL_SIZE_NOTE, Original_CAPSULORHEXIS, Original_HEYDRODISSECTION_YES, Original_HEYDRODISSECTION_NO, Original_PHACO_DIVIDE, Original_PHACO_CHOP, Original_PHACO_STOP_CHOP, Original_PHACO_SCULPTING, Original_PHACO_CRACKING, Original_PHACO_OTHERS, Original_IA_TIP, Original_IA_OTHER, Original_CAPSULAR_YES, Original_CAPSULAR_NO, Original_IOL_YES, Original_IOL_NO, Original_IOL_IN_CAPSULAR, Original_IOL_IN_SULCUS, Original_IOL_IN_AC, Original_SUTURE_YES, Original_SUTURE_NO, Original_SUB_GENTAL, Original_SUB_CEFAZOLIN, Original_SUB_DEXAMETHASONE, Original_SUB_OTHERS, Original_TOPICAL_PILOCARPINE, Original_TOPICAL_MAXITROL, Original_TOPICAL_OTHERS, Original_COMPLICATION_YES, Original_COMPLICATION_NO, Original_COMPLICATION_NOTE, Original_OTHER_PRO_ANTERIOR, Original_OTHER_PRO_PI, Original_OTHER_PRO_AT, Original_SURGEON_SIGNATURE, Original_PHACOEMULSIF_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function Insert_New_Phacoem( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal POWER As String,  _
                    ByVal FLOW_RATE As String,  _
                    ByVal VAC As String,  _
                    ByVal PHACO_TIME As String,  _
                    ByVal IA_FLOW_RATE As String,  _
                    ByVal IA_VAC As String,  _
                    ByVal NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE_NOTE As String,  _
                    ByVal CORNEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE_NOTE As String,  _
                    ByVal CAPSULORHEXIS As String,  _
                    ByVal HEYDRODISSECTION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal HEYDRODISSECTION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_DIVIDE As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_STOP_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_SCULPTING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CRACKING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_OTHERS As String,  _
                    ByVal IA_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal IA_OTHER As String,  _
                    ByVal CAPSULAR_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULAR_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal COMPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NOTE As String,  _
                    ByVal OTHER_PRO_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_PI As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_AT As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(13).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(15).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(16).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(17).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON_GV.HasValue = true) Then
                command.Parameters(18).Value = CType(VIS_HEALON_GV.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (VIS_IALF.HasValue = true) Then
                command.Parameters(19).Value = CType(VIS_IALF.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (VIS_VISSOAT.HasValue = true) Then
                command.Parameters(20).Value = CType(VIS_VISSOAT.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (VIS_DUOVISE.HasValue = true) Then
                command.Parameters(21).Value = CType(VIS_DUOVISE.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON5.HasValue = true) Then
                command.Parameters(22).Value = CType(VIS_HEALON5.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VIS_OPHTHALINE.HasValue = true) Then
                command.Parameters(23).Value = CType(VIS_OPHTHALINE.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (VIS_PROVISE.HasValue = true) Then
                command.Parameters(24).Value = CType(VIS_PROVISE.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (BSS_PLUS.HasValue = true) Then
                command.Parameters(25).Value = CType(BSS_PLUS.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (POWER Is Nothing) Then
                command.Parameters(26).Value = Global.System.DBNull.Value
            Else
                command.Parameters(26).Value = CType(POWER,String)
            End If
            If (FLOW_RATE Is Nothing) Then
                command.Parameters(27).Value = Global.System.DBNull.Value
            Else
                command.Parameters(27).Value = CType(FLOW_RATE,String)
            End If
            If (VAC Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(VAC,String)
            End If
            If (PHACO_TIME Is Nothing) Then
                command.Parameters(29).Value = Global.System.DBNull.Value
            Else
                command.Parameters(29).Value = CType(PHACO_TIME,String)
            End If
            If (IA_FLOW_RATE Is Nothing) Then
                command.Parameters(30).Value = Global.System.DBNull.Value
            Else
                command.Parameters(30).Value = CType(IA_FLOW_RATE,String)
            End If
            If (IA_VAC Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(IA_VAC,String)
            End If
            If (NOT_DONE.HasValue = true) Then
                command.Parameters(32).Value = CType(NOT_DONE.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (DONE.HasValue = true) Then
                command.Parameters(33).Value = CType(DONE.Value,Boolean)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (DONE_NOTE Is Nothing) Then
                command.Parameters(34).Value = Global.System.DBNull.Value
            Else
                command.Parameters(34).Value = CType(DONE_NOTE,String)
            End If
            If (CORNEAL.HasValue = true) Then
                command.Parameters(35).Value = CType(CORNEAL.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL.HasValue = true) Then
                command.Parameters(36).Value = CType(SCLERAL.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (FINAL_SIZE.HasValue = true) Then
                command.Parameters(37).Value = CType(FINAL_SIZE.Value,Boolean)
            Else
                command.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (FINAL_SIZE_NOTE Is Nothing) Then
                command.Parameters(38).Value = Global.System.DBNull.Value
            Else
                command.Parameters(38).Value = CType(FINAL_SIZE_NOTE,String)
            End If
            If (CAPSULORHEXIS Is Nothing) Then
                command.Parameters(39).Value = Global.System.DBNull.Value
            Else
                command.Parameters(39).Value = CType(CAPSULORHEXIS,String)
            End If
            If (HEYDRODISSECTION_YES.HasValue = true) Then
                command.Parameters(40).Value = CType(HEYDRODISSECTION_YES.Value,Boolean)
            Else
                command.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (HEYDRODISSECTION_NO.HasValue = true) Then
                command.Parameters(41).Value = CType(HEYDRODISSECTION_NO.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (PHACO_DIVIDE.HasValue = true) Then
                command.Parameters(42).Value = CType(PHACO_DIVIDE.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (PHACO_CHOP.HasValue = true) Then
                command.Parameters(43).Value = CType(PHACO_CHOP.Value,Boolean)
            Else
                command.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (PHACO_STOP_CHOP.HasValue = true) Then
                command.Parameters(44).Value = CType(PHACO_STOP_CHOP.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (PHACO_SCULPTING.HasValue = true) Then
                command.Parameters(45).Value = CType(PHACO_SCULPTING.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (PHACO_CRACKING.HasValue = true) Then
                command.Parameters(46).Value = CType(PHACO_CRACKING.Value,Boolean)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (PHACO_OTHERS Is Nothing) Then
                command.Parameters(47).Value = Global.System.DBNull.Value
            Else
                command.Parameters(47).Value = CType(PHACO_OTHERS,String)
            End If
            If (IA_TIP.HasValue = true) Then
                command.Parameters(48).Value = CType(IA_TIP.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IA_OTHER Is Nothing) Then
                command.Parameters(49).Value = Global.System.DBNull.Value
            Else
                command.Parameters(49).Value = CType(IA_OTHER,String)
            End If
            If (CAPSULAR_YES.HasValue = true) Then
                command.Parameters(50).Value = CType(CAPSULAR_YES.Value,Boolean)
            Else
                command.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (CAPSULAR_NO.HasValue = true) Then
                command.Parameters(51).Value = CType(CAPSULAR_NO.Value,Boolean)
            Else
                command.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (IOL_YES.HasValue = true) Then
                command.Parameters(52).Value = CType(IOL_YES.Value,Boolean)
            Else
                command.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (IOL_NO.HasValue = true) Then
                command.Parameters(53).Value = CType(IOL_NO.Value,Boolean)
            Else
                command.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_CAPSULAR.HasValue = true) Then
                command.Parameters(54).Value = CType(IOL_IN_CAPSULAR.Value,Boolean)
            Else
                command.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_SULCUS.HasValue = true) Then
                command.Parameters(55).Value = CType(IOL_IN_SULCUS.Value,Boolean)
            Else
                command.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_AC.HasValue = true) Then
                command.Parameters(56).Value = CType(IOL_IN_AC.Value,Boolean)
            Else
                command.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_YES.HasValue = true) Then
                command.Parameters(57).Value = CType(SUTURE_YES.Value,Boolean)
            Else
                command.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NO.HasValue = true) Then
                command.Parameters(58).Value = CType(SUTURE_NO.Value,Boolean)
            Else
                command.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (SUB_GENTAL.HasValue = true) Then
                command.Parameters(59).Value = CType(SUB_GENTAL.Value,Boolean)
            Else
                command.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN.HasValue = true) Then
                command.Parameters(60).Value = CType(SUB_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(61).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHERS Is Nothing) Then
                command.Parameters(62).Value = Global.System.DBNull.Value
            Else
                command.Parameters(62).Value = CType(SUB_OTHERS,String)
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                command.Parameters(63).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(64).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                command.Parameters(65).Value = Global.System.DBNull.Value
            Else
                command.Parameters(65).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (COMPLICATION_YES.HasValue = true) Then
                command.Parameters(66).Value = CType(COMPLICATION_YES.Value,Boolean)
            Else
                command.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (COMPLICATION_NO.HasValue = true) Then
                command.Parameters(67).Value = CType(COMPLICATION_NO.Value,Boolean)
            Else
                command.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (COMPLICATION_NOTE Is Nothing) Then
                command.Parameters(68).Value = Global.System.DBNull.Value
            Else
                command.Parameters(68).Value = CType(COMPLICATION_NOTE,String)
            End If
            If (OTHER_PRO_ANTERIOR.HasValue = true) Then
                command.Parameters(69).Value = CType(OTHER_PRO_ANTERIOR.Value,Boolean)
            Else
                command.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PRO_PI.HasValue = true) Then
                command.Parameters(70).Value = CType(OTHER_PRO_PI.Value,Boolean)
            Else
                command.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PRO_AT Is Nothing) Then
                command.Parameters(71).Value = Global.System.DBNull.Value
            Else
                command.Parameters(71).Value = CType(OTHER_PRO_AT,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(72).Value = Global.System.DBNull.Value
            Else
                command.Parameters(72).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdatePhaco( _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal POWER As String,  _
                    ByVal FLOW_RATE As String,  _
                    ByVal VAC As String,  _
                    ByVal PHACO_TIME As String,  _
                    ByVal IA_FLOW_RATE As String,  _
                    ByVal IA_VAC As String,  _
                    ByVal NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal DONE_NOTE As String,  _
                    ByVal CORNEAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal FINAL_SIZE_NOTE As String,  _
                    ByVal CAPSULORHEXIS As String,  _
                    ByVal HEYDRODISSECTION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal HEYDRODISSECTION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_DIVIDE As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_STOP_CHOP As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_SCULPTING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_CRACKING As Global.System.Nullable(Of Boolean),  _
                    ByVal PHACO_OTHERS As String,  _
                    ByVal IA_TIP As Global.System.Nullable(Of Boolean),  _
                    ByVal IA_OTHER As String,  _
                    ByVal CAPSULAR_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULAR_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal COMPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal COMPLICATION_NOTE As String,  _
                    ByVal OTHER_PRO_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_PI As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PRO_AT As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PHACOEMULSIF_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (START_TIME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(6).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(7).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(8).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(9).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(10).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(11).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON_GV.HasValue = true) Then
                command.Parameters(12).Value = CType(VIS_HEALON_GV.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (VIS_IALF.HasValue = true) Then
                command.Parameters(13).Value = CType(VIS_IALF.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (VIS_VISSOAT.HasValue = true) Then
                command.Parameters(14).Value = CType(VIS_VISSOAT.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (VIS_DUOVISE.HasValue = true) Then
                command.Parameters(15).Value = CType(VIS_DUOVISE.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON5.HasValue = true) Then
                command.Parameters(16).Value = CType(VIS_HEALON5.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (VIS_OPHTHALINE.HasValue = true) Then
                command.Parameters(17).Value = CType(VIS_OPHTHALINE.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (VIS_PROVISE.HasValue = true) Then
                command.Parameters(18).Value = CType(VIS_PROVISE.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (BSS_PLUS.HasValue = true) Then
                command.Parameters(19).Value = CType(BSS_PLUS.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (POWER Is Nothing) Then
                command.Parameters(20).Value = Global.System.DBNull.Value
            Else
                command.Parameters(20).Value = CType(POWER,String)
            End If
            If (FLOW_RATE Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(FLOW_RATE,String)
            End If
            If (VAC Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(VAC,String)
            End If
            If (PHACO_TIME Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(PHACO_TIME,String)
            End If
            If (IA_FLOW_RATE Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(IA_FLOW_RATE,String)
            End If
            If (IA_VAC Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(IA_VAC,String)
            End If
            If (NOT_DONE.HasValue = true) Then
                command.Parameters(26).Value = CType(NOT_DONE.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (DONE.HasValue = true) Then
                command.Parameters(27).Value = CType(DONE.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (DONE_NOTE Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(DONE_NOTE,String)
            End If
            If (CORNEAL.HasValue = true) Then
                command.Parameters(29).Value = CType(CORNEAL.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL.HasValue = true) Then
                command.Parameters(30).Value = CType(SCLERAL.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (FINAL_SIZE.HasValue = true) Then
                command.Parameters(31).Value = CType(FINAL_SIZE.Value,Boolean)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (FINAL_SIZE_NOTE Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(FINAL_SIZE_NOTE,String)
            End If
            If (CAPSULORHEXIS Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(CAPSULORHEXIS,String)
            End If
            If (HEYDRODISSECTION_YES.HasValue = true) Then
                command.Parameters(34).Value = CType(HEYDRODISSECTION_YES.Value,Boolean)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (HEYDRODISSECTION_NO.HasValue = true) Then
                command.Parameters(35).Value = CType(HEYDRODISSECTION_NO.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (PHACO_DIVIDE.HasValue = true) Then
                command.Parameters(36).Value = CType(PHACO_DIVIDE.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (PHACO_CHOP.HasValue = true) Then
                command.Parameters(37).Value = CType(PHACO_CHOP.Value,Boolean)
            Else
                command.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (PHACO_STOP_CHOP.HasValue = true) Then
                command.Parameters(38).Value = CType(PHACO_STOP_CHOP.Value,Boolean)
            Else
                command.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (PHACO_SCULPTING.HasValue = true) Then
                command.Parameters(39).Value = CType(PHACO_SCULPTING.Value,Boolean)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (PHACO_CRACKING.HasValue = true) Then
                command.Parameters(40).Value = CType(PHACO_CRACKING.Value,Boolean)
            Else
                command.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (PHACO_OTHERS Is Nothing) Then
                command.Parameters(41).Value = Global.System.DBNull.Value
            Else
                command.Parameters(41).Value = CType(PHACO_OTHERS,String)
            End If
            If (IA_TIP.HasValue = true) Then
                command.Parameters(42).Value = CType(IA_TIP.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (IA_OTHER Is Nothing) Then
                command.Parameters(43).Value = Global.System.DBNull.Value
            Else
                command.Parameters(43).Value = CType(IA_OTHER,String)
            End If
            If (CAPSULAR_YES.HasValue = true) Then
                command.Parameters(44).Value = CType(CAPSULAR_YES.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CAPSULAR_NO.HasValue = true) Then
                command.Parameters(45).Value = CType(CAPSULAR_NO.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (IOL_YES.HasValue = true) Then
                command.Parameters(46).Value = CType(IOL_YES.Value,Boolean)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (IOL_NO.HasValue = true) Then
                command.Parameters(47).Value = CType(IOL_NO.Value,Boolean)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_CAPSULAR.HasValue = true) Then
                command.Parameters(48).Value = CType(IOL_IN_CAPSULAR.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_SULCUS.HasValue = true) Then
                command.Parameters(49).Value = CType(IOL_IN_SULCUS.Value,Boolean)
            Else
                command.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_AC.HasValue = true) Then
                command.Parameters(50).Value = CType(IOL_IN_AC.Value,Boolean)
            Else
                command.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_YES.HasValue = true) Then
                command.Parameters(51).Value = CType(SUTURE_YES.Value,Boolean)
            Else
                command.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NO.HasValue = true) Then
                command.Parameters(52).Value = CType(SUTURE_NO.Value,Boolean)
            Else
                command.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (SUB_GENTAL.HasValue = true) Then
                command.Parameters(53).Value = CType(SUB_GENTAL.Value,Boolean)
            Else
                command.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN.HasValue = true) Then
                command.Parameters(54).Value = CType(SUB_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(55).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHERS Is Nothing) Then
                command.Parameters(56).Value = Global.System.DBNull.Value
            Else
                command.Parameters(56).Value = CType(SUB_OTHERS,String)
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                command.Parameters(57).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(58).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                command.Parameters(59).Value = Global.System.DBNull.Value
            Else
                command.Parameters(59).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (COMPLICATION_YES.HasValue = true) Then
                command.Parameters(60).Value = CType(COMPLICATION_YES.Value,Boolean)
            Else
                command.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (COMPLICATION_NO.HasValue = true) Then
                command.Parameters(61).Value = CType(COMPLICATION_NO.Value,Boolean)
            Else
                command.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (COMPLICATION_NOTE Is Nothing) Then
                command.Parameters(62).Value = Global.System.DBNull.Value
            Else
                command.Parameters(62).Value = CType(COMPLICATION_NOTE,String)
            End If
            If (OTHER_PRO_ANTERIOR.HasValue = true) Then
                command.Parameters(63).Value = CType(OTHER_PRO_ANTERIOR.Value,Boolean)
            Else
                command.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PRO_PI.HasValue = true) Then
                command.Parameters(64).Value = CType(OTHER_PRO_PI.Value,Boolean)
            Else
                command.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PRO_AT Is Nothing) Then
                command.Parameters(65).Value = Global.System.DBNull.Value
            Else
                command.Parameters(65).Value = CType(OTHER_PRO_AT,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(66).Value = Global.System.DBNull.Value
            Else
                command.Parameters(66).Value = CType(SURGEON_SIGNATURE,String)
            End If
            command.Parameters(67).Value = CType(Original_PHACOEMULSIF_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_OPERA_ECCETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_OPERA_ECCE"
            tableMapping.ColumnMappings.Add("ECCE_ID", "ECCE_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("OPERA_NO", "OPERA_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NO", "PATIENT_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NAME", "PATIENT_NAME")
            tableMapping.ColumnMappings.Add("PATIENT_SEX", "PATIENT_SEX")
            tableMapping.ColumnMappings.Add("PATIENT_AGE", "PATIENT_AGE")
            tableMapping.ColumnMappings.Add("START_TIME", "START_TIME")
            tableMapping.ColumnMappings.Add("LEFT_EYE", "LEFT_EYE")
            tableMapping.ColumnMappings.Add("RIGHT_EYE", "RIGHT_EYE")
            tableMapping.ColumnMappings.Add("SURGEON", "SURGEON")
            tableMapping.ColumnMappings.Add("SCRUB", "SCRUB")
            tableMapping.ColumnMappings.Add("CIRCULATING", "CIRCULATING")
            tableMapping.ColumnMappings.Add("ANESTHESIONLOGIST", "ANESTHESIONLOGIST")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("S_AN_GA", "S_AN_GA")
            tableMapping.ColumnMappings.Add("S_AN_NEURO", "S_AN_NEURO")
            tableMapping.ColumnMappings.Add("S_AN_STANDBY", "S_AN_STANDBY")
            tableMapping.ColumnMappings.Add("S_AN_RETROBULBAR", "S_AN_RETROBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_PERIBULBAR", "S_AN_PERIBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_TOPICAL", "S_AN_TOPICAL")
            tableMapping.ColumnMappings.Add("VIS_HEALON_GV", "VIS_HEALON_GV")
            tableMapping.ColumnMappings.Add("VIS_IALF", "VIS_IALF")
            tableMapping.ColumnMappings.Add("VIS_VISSOAT", "VIS_VISSOAT")
            tableMapping.ColumnMappings.Add("VIS_DUOVISE", "VIS_DUOVISE")
            tableMapping.ColumnMappings.Add("VIS_HEALON5", "VIS_HEALON5")
            tableMapping.ColumnMappings.Add("VIS_OPHTHALINE", "VIS_OPHTHALINE")
            tableMapping.ColumnMappings.Add("VIS_PROVISE", "VIS_PROVISE")
            tableMapping.ColumnMappings.Add("BSS_PLUS", "BSS_PLUS")
            tableMapping.ColumnMappings.Add("BSS", "BSS")
            tableMapping.ColumnMappings.Add("PERITO_YES", "PERITO_YES")
            tableMapping.ColumnMappings.Add("PERITO_NO", "PERITO_NO")
            tableMapping.ColumnMappings.Add("CARTERY_MILD", "CARTERY_MILD")
            tableMapping.ColumnMappings.Add("CARTERY_MODERATE", "CARTERY_MODERATE")
            tableMapping.ColumnMappings.Add("CAUTERY_EXTENSIVE", "CAUTERY_EXTENSIVE")
            tableMapping.ColumnMappings.Add("INCISION_SITE_CORNEOSCLERAL", "INCISION_SITE_CORNEOSCLERAL")
            tableMapping.ColumnMappings.Add("INCISION_SITE_SCLERAL", "INCISION_SITE_SCLERAL")
            tableMapping.ColumnMappings.Add("INCISION_SIZE_SUPERRIOR", "INCISION_SIZE_SUPERRIOR")
            tableMapping.ColumnMappings.Add("INCISION_SIZE_SUPERRIOR_NOTE", "INCISION_SIZE_SUPERRIOR_NOTE")
            tableMapping.ColumnMappings.Add("INCISION_SIZE_SUPERRIOR_OTHER", "INCISION_SIZE_SUPERRIOR_OTHER")
            tableMapping.ColumnMappings.Add("CAPSULOTOMY_CYSTOTOMY", "CAPSULOTOMY_CYSTOTOMY")
            tableMapping.ColumnMappings.Add("CAPSULOTOMY_OTHERS", "CAPSULOTOMY_OTHERS")
            tableMapping.ColumnMappings.Add("NUCLEUS_EXPRESSION", "NUCLEUS_EXPRESSION")
            tableMapping.ColumnMappings.Add("NUCLEUS_LENSLOOP", "NUCLEUS_LENSLOOP")
            tableMapping.ColumnMappings.Add("NUCLEUS_VISCO", "NUCLEUS_VISCO")
            tableMapping.ColumnMappings.Add("CORTEX_SIMCO_IA", "CORTEX_SIMCO_IA")
            tableMapping.ColumnMappings.Add("CAPSULE_YES", "CAPSULE_YES")
            tableMapping.ColumnMappings.Add("CAPSULE_NO", "CAPSULE_NO")
            tableMapping.ColumnMappings.Add("IOL_IN_CAPSULAR", "IOL_IN_CAPSULAR")
            tableMapping.ColumnMappings.Add("IOL_IN_SULCUS", "IOL_IN_SULCUS")
            tableMapping.ColumnMappings.Add("IOL_IN_AC", "IOL_IN_AC")
            tableMapping.ColumnMappings.Add("SUTURE_NYLON", "SUTURE_NYLON")
            tableMapping.ColumnMappings.Add("SUTURE_NYLON_NOTE", "SUTURE_NYLON_NOTE")
            tableMapping.ColumnMappings.Add("SUTURE_OTHERS", "SUTURE_OTHERS")
            tableMapping.ColumnMappings.Add("SUBCONJUN_GENTAL", "SUBCONJUN_GENTAL")
            tableMapping.ColumnMappings.Add("SUBCONJUN_CEFAZOLIN", "SUBCONJUN_CEFAZOLIN")
            tableMapping.ColumnMappings.Add("SUBCONJUN_DEXAMETHASONE", "SUBCONJUN_DEXAMETHASONE")
            tableMapping.ColumnMappings.Add("SUBCONJUN_OTHERS", "SUBCONJUN_OTHERS")
            tableMapping.ColumnMappings.Add("TOPICAL_PILOCARPINE", "TOPICAL_PILOCARPINE")
            tableMapping.ColumnMappings.Add("TOPICAL_MAXITROL", "TOPICAL_MAXITROL")
            tableMapping.ColumnMappings.Add("TOPICAL_OTHERS", "TOPICAL_OTHERS")
            tableMapping.ColumnMappings.Add("EXTRA_IRRIDECTOMY", "EXTRA_IRRIDECTOMY")
            tableMapping.ColumnMappings.Add("EXTRA_LOCATION", "EXTRA_LOCATION")
            tableMapping.ColumnMappings.Add("EXTRA_CAPSULAR", "EXTRA_CAPSULAR")
            tableMapping.ColumnMappings.Add("EXTRA_VITREOS", "EXTRA_VITREOS")
            tableMapping.ColumnMappings.Add("EXTRA_ANTERIOR", "EXTRA_ANTERIOR")
            tableMapping.ColumnMappings.Add("EXTRA_AC_HEMORRHAGE", "EXTRA_AC_HEMORRHAGE")
            tableMapping.ColumnMappings.Add("EXTRA_OTHER", "EXTRA_OTHER")
            tableMapping.ColumnMappings.Add("SURGEON_SIGNATURE", "SURGEON_SIGNATURE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[S_OPERA_ECCE] WHERE (([ECCE_ID] = @Original_ECCE_ID) AND ((@Is"& _ 
                "Null_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DATE] = @Original_CR"& _ 
                "EATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL) OR ([OPERA_NO] = "& _ 
                "@Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [PATIENT_NO] IS NULL) OR ("& _ 
                "[PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATIENT_NAME = 1 AND [PATIEN"& _ 
                "T_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_NAME)) AND ((@IsNull_PAT"& _ 
                "IENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX] = @Original_PATIENT_SE"& _ 
                "X)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS NULL) OR ([PATIENT_AGE] ="& _ 
                " @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AND [START_TIME] IS NULL) "& _ 
                "OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_LEFT_EYE = 1 AND [LEFT_E"& _ 
                "YE] IS NULL) OR ([LEFT_EYE] = @Original_LEFT_EYE)) AND ((@IsNull_RIGHT_EYE = 1 A"& _ 
                "ND [RIGHT_EYE] IS NULL) OR ([RIGHT_EYE] = @Original_RIGHT_EYE)) AND ((@IsNull_SU"& _ 
                "RGEON = 1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ((@IsNu"& _ 
                "ll_SCRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_"& _ 
                "CIRCULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCULA"& _ 
                "TING)) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ("& _ 
                "[ANESTHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 "& _ 
                "AND [DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_S"& _ 
                "_AN_GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AND ((@IsN"& _ 
                "ull_S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @Original_S_AN_N"& _ 
                "EURO)) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_AN_STAN"& _ 
                "DBY] = @Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_AN_RET"& _ 
                "ROBULBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBULBAR)) AND ((@"& _ 
                "IsNull_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBULBAR] "& _ 
                "= @Original_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOPICAL] "& _ 
                "IS NULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNull_VIS_HEALON_"& _ 
                "GV = 1 AND [VIS_HEALON_GV] IS NULL) OR ([VIS_HEALON_GV] = @Original_VIS_HEALON_G"& _ 
                "V)) AND ((@IsNull_VIS_IALF = 1 AND [VIS_IALF] IS NULL) OR ([VIS_IALF] = @Origina"& _ 
                "l_VIS_IALF)) AND ((@IsNull_VIS_VISSOAT = 1 AND [VIS_VISSOAT] IS NULL) OR ([VIS_V"& _ 
                "ISSOAT] = @Original_VIS_VISSOAT)) AND ((@IsNull_VIS_DUOVISE = 1 AND [VIS_DUOVISE"& _ 
                "] IS NULL) OR ([VIS_DUOVISE] = @Original_VIS_DUOVISE)) AND ((@IsNull_VIS_HEALON5"& _ 
                " = 1 AND [VIS_HEALON5] IS NULL) OR ([VIS_HEALON5] = @Original_VIS_HEALON5)) AND "& _ 
                "((@IsNull_VIS_OPHTHALINE = 1 AND [VIS_OPHTHALINE] IS NULL) OR ([VIS_OPHTHALINE] "& _ 
                "= @Original_VIS_OPHTHALINE)) AND ((@IsNull_VIS_PROVISE = 1 AND [VIS_PROVISE] IS "& _ 
                "NULL) OR ([VIS_PROVISE] = @Original_VIS_PROVISE)) AND ((@IsNull_BSS_PLUS = 1 AND"& _ 
                " [BSS_PLUS] IS NULL) OR ([BSS_PLUS] = @Original_BSS_PLUS)) AND ((@IsNull_BSS = 1"& _ 
                " AND [BSS] IS NULL) OR ([BSS] = @Original_BSS)) AND ((@IsNull_PERITO_YES = 1 AND"& _ 
                " [PERITO_YES] IS NULL) OR ([PERITO_YES] = @Original_PERITO_YES)) AND ((@IsNull_P"& _ 
                "ERITO_NO = 1 AND [PERITO_NO] IS NULL) OR ([PERITO_NO] = @Original_PERITO_NO)) AN"& _ 
                "D ((@IsNull_CARTERY_MILD = 1 AND [CARTERY_MILD] IS NULL) OR ([CARTERY_MILD] = @O"& _ 
                "riginal_CARTERY_MILD)) AND ((@IsNull_CARTERY_MODERATE = 1 AND [CARTERY_MODERATE]"& _ 
                " IS NULL) OR ([CARTERY_MODERATE] = @Original_CARTERY_MODERATE)) AND ((@IsNull_CA"& _ 
                "UTERY_EXTENSIVE = 1 AND [CAUTERY_EXTENSIVE] IS NULL) OR ([CAUTERY_EXTENSIVE] = @"& _ 
                "Original_CAUTERY_EXTENSIVE)) AND ((@IsNull_INCISION_SITE_CORNEOSCLERAL = 1 AND ["& _ 
                "INCISION_SITE_CORNEOSCLERAL] IS NULL) OR ([INCISION_SITE_CORNEOSCLERAL] = @Origi"& _ 
                "nal_INCISION_SITE_CORNEOSCLERAL)) AND ((@IsNull_INCISION_SITE_SCLERAL = 1 AND [I"& _ 
                "NCISION_SITE_SCLERAL] IS NULL) OR ([INCISION_SITE_SCLERAL] = @Original_INCISION_"& _ 
                "SITE_SCLERAL)) AND ((@IsNull_INCISION_SIZE_SUPERRIOR = 1 AND [INCISION_SIZE_SUPE"& _ 
                "RRIOR] IS NULL) OR ([INCISION_SIZE_SUPERRIOR] = @Original_INCISION_SIZE_SUPERRIO"& _ 
                "R)) AND ((@IsNull_INCISION_SIZE_SUPERRIOR_NOTE = 1 AND [INCISION_SIZE_SUPERRIOR_"& _ 
                "NOTE] IS NULL) OR ([INCISION_SIZE_SUPERRIOR_NOTE] = @Original_INCISION_SIZE_SUPE"& _ 
                "RRIOR_NOTE)) AND ((@IsNull_INCISION_SIZE_SUPERRIOR_OTHER = 1 AND [INCISION_SIZE_"& _ 
                "SUPERRIOR_OTHER] IS NULL) OR ([INCISION_SIZE_SUPERRIOR_OTHER] = @Original_INCISI"& _ 
                "ON_SIZE_SUPERRIOR_OTHER)) AND ((@IsNull_CAPSULOTOMY_CYSTOTOMY = 1 AND [CAPSULOTO"& _ 
                "MY_CYSTOTOMY] IS NULL) OR ([CAPSULOTOMY_CYSTOTOMY] = @Original_CAPSULOTOMY_CYSTO"& _ 
                "TOMY)) AND ((@IsNull_CAPSULOTOMY_OTHERS = 1 AND [CAPSULOTOMY_OTHERS] IS NULL) OR"& _ 
                " ([CAPSULOTOMY_OTHERS] = @Original_CAPSULOTOMY_OTHERS)) AND ((@IsNull_NUCLEUS_EX"& _ 
                "PRESSION = 1 AND [NUCLEUS_EXPRESSION] IS NULL) OR ([NUCLEUS_EXPRESSION] = @Origi"& _ 
                "nal_NUCLEUS_EXPRESSION)) AND ((@IsNull_NUCLEUS_LENSLOOP = 1 AND [NUCLEUS_LENSLOO"& _ 
                "P] IS NULL) OR ([NUCLEUS_LENSLOOP] = @Original_NUCLEUS_LENSLOOP)) AND ((@IsNull_"& _ 
                "NUCLEUS_VISCO = 1 AND [NUCLEUS_VISCO] IS NULL) OR ([NUCLEUS_VISCO] = @Original_N"& _ 
                "UCLEUS_VISCO)) AND ((@IsNull_CORTEX_SIMCO_IA = 1 AND [CORTEX_SIMCO_IA] IS NULL) "& _ 
                "OR ([CORTEX_SIMCO_IA] = @Original_CORTEX_SIMCO_IA)) AND ((@IsNull_CAPSULE_YES = "& _ 
                "1 AND [CAPSULE_YES] IS NULL) OR ([CAPSULE_YES] = @Original_CAPSULE_YES)) AND ((@"& _ 
                "IsNull_CAPSULE_NO = 1 AND [CAPSULE_NO] IS NULL) OR ([CAPSULE_NO] = @Original_CAP"& _ 
                "SULE_NO)) AND ((@IsNull_IOL_IN_CAPSULAR = 1 AND [IOL_IN_CAPSULAR] IS NULL) OR (["& _ 
                "IOL_IN_CAPSULAR] = @Original_IOL_IN_CAPSULAR)) AND ((@IsNull_IOL_IN_SULCUS = 1 A"& _ 
                "ND [IOL_IN_SULCUS] IS NULL) OR ([IOL_IN_SULCUS] = @Original_IOL_IN_SULCUS)) AND "& _ 
                "((@IsNull_IOL_IN_AC = 1 AND [IOL_IN_AC] IS NULL) OR ([IOL_IN_AC] = @Original_IOL"& _ 
                "_IN_AC)) AND ((@IsNull_SUTURE_NYLON = 1 AND [SUTURE_NYLON] IS NULL) OR ([SUTURE_"& _ 
                "NYLON] = @Original_SUTURE_NYLON)) AND ((@IsNull_SUTURE_NYLON_NOTE = 1 AND [SUTUR"& _ 
                "E_NYLON_NOTE] IS NULL) OR ([SUTURE_NYLON_NOTE] = @Original_SUTURE_NYLON_NOTE)) A"& _ 
                "ND ((@IsNull_SUTURE_OTHERS = 1 AND [SUTURE_OTHERS] IS NULL) OR ([SUTURE_OTHERS] "& _ 
                "= @Original_SUTURE_OTHERS)) AND ((@IsNull_SUBCONJUN_GENTAL = 1 AND [SUBCONJUN_GE"& _ 
                "NTAL] IS NULL) OR ([SUBCONJUN_GENTAL] = @Original_SUBCONJUN_GENTAL)) AND ((@IsNu"& _ 
                "ll_SUBCONJUN_CEFAZOLIN = 1 AND [SUBCONJUN_CEFAZOLIN] IS NULL) OR ([SUBCONJUN_CEF"& _ 
                "AZOLIN] = @Original_SUBCONJUN_CEFAZOLIN)) AND ((@IsNull_SUBCONJUN_DEXAMETHASONE "& _ 
                "= 1 AND [SUBCONJUN_DEXAMETHASONE] IS NULL) OR ([SUBCONJUN_DEXAMETHASONE] = @Orig"& _ 
                "inal_SUBCONJUN_DEXAMETHASONE)) AND ((@IsNull_SUBCONJUN_OTHERS = 1 AND [SUBCONJUN"& _ 
                "_OTHERS] IS NULL) OR ([SUBCONJUN_OTHERS] = @Original_SUBCONJUN_OTHERS)) AND ((@I"& _ 
                "sNull_TOPICAL_PILOCARPINE = 1 AND [TOPICAL_PILOCARPINE] IS NULL) OR ([TOPICAL_PI"& _ 
                "LOCARPINE] = @Original_TOPICAL_PILOCARPINE)) AND ((@IsNull_TOPICAL_MAXITROL = 1 "& _ 
                "AND [TOPICAL_MAXITROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Original_TOPICAL_MAXIT"& _ 
                "ROL)) AND ((@IsNull_TOPICAL_OTHERS = 1 AND [TOPICAL_OTHERS] IS NULL) OR ([TOPICA"& _ 
                "L_OTHERS] = @Original_TOPICAL_OTHERS)) AND ((@IsNull_EXTRA_IRRIDECTOMY = 1 AND ["& _ 
                "EXTRA_IRRIDECTOMY] IS NULL) OR ([EXTRA_IRRIDECTOMY] = @Original_EXTRA_IRRIDECTOM"& _ 
                "Y)) AND ((@IsNull_EXTRA_LOCATION = 1 AND [EXTRA_LOCATION] IS NULL) OR ([EXTRA_LO"& _ 
                "CATION] = @Original_EXTRA_LOCATION)) AND ((@IsNull_EXTRA_CAPSULAR = 1 AND [EXTRA"& _ 
                "_CAPSULAR] IS NULL) OR ([EXTRA_CAPSULAR] = @Original_EXTRA_CAPSULAR)) AND ((@IsN"& _ 
                "ull_EXTRA_VITREOS = 1 AND [EXTRA_VITREOS] IS NULL) OR ([EXTRA_VITREOS] = @Origin"& _ 
                "al_EXTRA_VITREOS)) AND ((@IsNull_EXTRA_ANTERIOR = 1 AND [EXTRA_ANTERIOR] IS NULL"& _ 
                ") OR ([EXTRA_ANTERIOR] = @Original_EXTRA_ANTERIOR)) AND ((@IsNull_EXTRA_AC_HEMOR"& _ 
                "RHAGE = 1 AND [EXTRA_AC_HEMORRHAGE] IS NULL) OR ([EXTRA_AC_HEMORRHAGE] = @Origin"& _ 
                "al_EXTRA_AC_HEMORRHAGE)) AND ((@IsNull_EXTRA_OTHER = 1 AND [EXTRA_OTHER] IS NULL"& _ 
                ") OR ([EXTRA_OTHER] = @Original_EXTRA_OTHER)) AND ((@IsNull_SURGEON_SIGNATURE = "& _ 
                "1 AND [SURGEON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE] = @Original_SURGEON_S"& _ 
                "IGNATURE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ECCE_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ECCE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_HEALON_GV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_IALF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_IALF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_VISSOAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_DUOVISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_HEALON5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_OPHTHALINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_PROVISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BSS_PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BSS_PLUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BSS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BSS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERITO_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERITO_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERITO_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERITO_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CARTERY_MILD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MILD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CARTERY_MILD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MILD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CARTERY_MODERATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MODERATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CARTERY_MODERATE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MODERATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SITE_CORNEOSCLERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_CORNEOSCLERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SITE_CORNEOSCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_CORNEOSCLERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SITE_SCLERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_SCLERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SITE_SCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_SCLERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SIZE_SUPERRIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SIZE_SUPERRIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULOTOMY_CYSTOTOMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_CYSTOTOMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULOTOMY_CYSTOTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_CYSTOTOMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULOTOMY_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULOTOMY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUCLEUS_EXPRESSION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_EXPRESSION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUCLEUS_EXPRESSION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_EXPRESSION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUCLEUS_LENSLOOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_LENSLOOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUCLEUS_LENSLOOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_LENSLOOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUCLEUS_VISCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_VISCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUCLEUS_VISCO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_VISCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORTEX_SIMCO_IA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORTEX_SIMCO_IA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORTEX_SIMCO_IA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORTEX_SIMCO_IA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULE_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_SULCUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_AC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_NYLON_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_NYLON_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUN_GENTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_GENTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUN_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_GENTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUN_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUN_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUN_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUN_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUN_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUN_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_IRRIDECTOMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_IRRIDECTOMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_IRRIDECTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_IRRIDECTOMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_LOCATION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_LOCATION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_LOCATION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_LOCATION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_CAPSULAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_CAPSULAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_CAPSULAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_VITREOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_VITREOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_VITREOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_VITREOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_ANTERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_AC_HEMORRHAGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_AC_HEMORRHAGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_AC_HEMORRHAGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_AC_HEMORRHAGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[S_OPERA_ECCE] ([CREATE_DATE], [OPERA_NO], [PATIENT_NO], [PATIE"& _ 
                "NT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [LEFT_EYE], [RIGHT_EYE], ["& _ 
                "SURGEON], [SCRUB], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_AN_GA], ["& _ 
                "S_AN_NEURO], [S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TOPICA"& _ 
                "L], [VIS_HEALON_GV], [VIS_IALF], [VIS_VISSOAT], [VIS_DUOVISE], [VIS_HEALON5], [V"& _ 
                "IS_OPHTHALINE], [VIS_PROVISE], [BSS_PLUS], [BSS], [PERITO_YES], [PERITO_NO], [CA"& _ 
                "RTERY_MILD], [CARTERY_MODERATE], [CAUTERY_EXTENSIVE], [INCISION_SITE_CORNEOSCLER"& _ 
                "AL], [INCISION_SITE_SCLERAL], [INCISION_SIZE_SUPERRIOR], [INCISION_SIZE_SUPERRIO"& _ 
                "R_NOTE], [INCISION_SIZE_SUPERRIOR_OTHER], [CAPSULOTOMY_CYSTOTOMY], [CAPSULOTOMY_"& _ 
                "OTHERS], [NUCLEUS_EXPRESSION], [NUCLEUS_LENSLOOP], [NUCLEUS_VISCO], [CORTEX_SIMC"& _ 
                "O_IA], [CAPSULE_YES], [CAPSULE_NO], [IOL_IN_CAPSULAR], [IOL_IN_SULCUS], [IOL_IN_"& _ 
                "AC], [SUTURE_NYLON], [SUTURE_NYLON_NOTE], [SUTURE_OTHERS], [SUBCONJUN_GENTAL], ["& _ 
                "SUBCONJUN_CEFAZOLIN], [SUBCONJUN_DEXAMETHASONE], [SUBCONJUN_OTHERS], [TOPICAL_PI"& _ 
                "LOCARPINE], [TOPICAL_MAXITROL], [TOPICAL_OTHERS], [EXTRA_IRRIDECTOMY], [EXTRA_LO"& _ 
                "CATION], [EXTRA_CAPSULAR], [EXTRA_VITREOS], [EXTRA_ANTERIOR], [EXTRA_AC_HEMORRHA"& _ 
                "GE], [EXTRA_OTHER], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PATIE"& _ 
                "NT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @LEFT_EYE, @RIGHT"& _ 
                "_EYE, @SURGEON, @SCRUB, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_AN_GA, "& _ 
                "@S_AN_NEURO, @S_AN_STANDBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, "& _ 
                "@VIS_HEALON_GV, @VIS_IALF, @VIS_VISSOAT, @VIS_DUOVISE, @VIS_HEALON5, @VIS_OPHTHA"& _ 
                "LINE, @VIS_PROVISE, @BSS_PLUS, @BSS, @PERITO_YES, @PERITO_NO, @CARTERY_MILD, @CA"& _ 
                "RTERY_MODERATE, @CAUTERY_EXTENSIVE, @INCISION_SITE_CORNEOSCLERAL, @INCISION_SITE"& _ 
                "_SCLERAL, @INCISION_SIZE_SUPERRIOR, @INCISION_SIZE_SUPERRIOR_NOTE, @INCISION_SIZ"& _ 
                "E_SUPERRIOR_OTHER, @CAPSULOTOMY_CYSTOTOMY, @CAPSULOTOMY_OTHERS, @NUCLEUS_EXPRESS"& _ 
                "ION, @NUCLEUS_LENSLOOP, @NUCLEUS_VISCO, @CORTEX_SIMCO_IA, @CAPSULE_YES, @CAPSULE"& _ 
                "_NO, @IOL_IN_CAPSULAR, @IOL_IN_SULCUS, @IOL_IN_AC, @SUTURE_NYLON, @SUTURE_NYLON_"& _ 
                "NOTE, @SUTURE_OTHERS, @SUBCONJUN_GENTAL, @SUBCONJUN_CEFAZOLIN, @SUBCONJUN_DEXAME"& _ 
                "THASONE, @SUBCONJUN_OTHERS, @TOPICAL_PILOCARPINE, @TOPICAL_MAXITROL, @TOPICAL_OT"& _ 
                "HERS, @EXTRA_IRRIDECTOMY, @EXTRA_LOCATION, @EXTRA_CAPSULAR, @EXTRA_VITREOS, @EXT"& _ 
                "RA_ANTERIOR, @EXTRA_AC_HEMORRHAGE, @EXTRA_OTHER, @SURGEON_SIGNATURE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT EC"& _ 
                "CE_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE"& _ 
                ", START_TIME, LEFT_EYE, RIGHT_EYE, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIS"& _ 
                "T, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULB"& _ 
                "AR, S_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5"& _ 
                ", VIS_OPHTHALINE, VIS_PROVISE, BSS_PLUS, BSS, PERITO_YES, PERITO_NO, CARTERY_MIL"& _ 
                "D, CARTERY_MODERATE, CAUTERY_EXTENSIVE, INCISION_SITE_CORNEOSCLERAL, INCISION_SI"& _ 
                "TE_SCLERAL, INCISION_SIZE_SUPERRIOR, INCISION_SIZE_SUPERRIOR_NOTE, INCISION_SIZE"& _ 
                "_SUPERRIOR_OTHER, CAPSULOTOMY_CYSTOTOMY, CAPSULOTOMY_OTHERS, NUCLEUS_EXPRESSION,"& _ 
                " NUCLEUS_LENSLOOP, NUCLEUS_VISCO, CORTEX_SIMCO_IA, CAPSULE_YES, CAPSULE_NO, IOL_"& _ 
                "IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTURE_NYLON, SUTURE_NYLON_NOTE, SUTURE_O"& _ 
                "THERS, SUBCONJUN_GENTAL, SUBCONJUN_CEFAZOLIN, SUBCONJUN_DEXAMETHASONE, SUBCONJUN"& _ 
                "_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, EXTRA_IRRIDECTOM"& _ 
                "Y, EXTRA_LOCATION, EXTRA_CAPSULAR, EXTRA_VITREOS, EXTRA_ANTERIOR, EXTRA_AC_HEMOR"& _ 
                "RHAGE, EXTRA_OTHER, SURGEON_SIGNATURE FROM S_OPERA_ECCE WHERE (ECCE_ID = SCOPE_I"& _ 
                "DENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_IALF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS_PLUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITO_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITO_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARTERY_MILD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MILD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARTERY_MODERATE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MODERATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SITE_CORNEOSCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_CORNEOSCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SITE_SCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_SCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULOTOMY_CYSTOTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_CYSTOTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULOTOMY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_EXPRESSION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_EXPRESSION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_LENSLOOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_LENSLOOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_VISCO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_VISCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORTEX_SIMCO_IA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORTEX_SIMCO_IA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NYLON_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_IRRIDECTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_IRRIDECTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_LOCATION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_LOCATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_VITREOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_VITREOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_ANTERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_AC_HEMORRHAGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_AC_HEMORRHAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_OPERA_ECCE] SET [CREATE_DATE] = @CREATE_DATE, [OPERA_NO] = @OPERA"& _ 
                "_NO, [PATIENT_NO] = @PATIENT_NO, [PATIENT_NAME] = @PATIENT_NAME, [PATIENT_SEX] ="& _ 
                " @PATIENT_SEX, [PATIENT_AGE] = @PATIENT_AGE, [START_TIME] = @START_TIME, [LEFT_E"& _ 
                "YE] = @LEFT_EYE, [RIGHT_EYE] = @RIGHT_EYE, [SURGEON] = @SURGEON, [SCRUB] = @SCRU"& _ 
                "B, [CIRCULATING] = @CIRCULATING, [ANESTHESIONLOGIST] = @ANESTHESIONLOGIST, [DIAG"& _ 
                "NOSIS] = @DIAGNOSIS, [S_AN_GA] = @S_AN_GA, [S_AN_NEURO] = @S_AN_NEURO, [S_AN_STA"& _ 
                "NDBY] = @S_AN_STANDBY, [S_AN_RETROBULBAR] = @S_AN_RETROBULBAR, [S_AN_PERIBULBAR]"& _ 
                " = @S_AN_PERIBULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL, [VIS_HEALON_GV] = @VIS_HEAL"& _ 
                "ON_GV, [VIS_IALF] = @VIS_IALF, [VIS_VISSOAT] = @VIS_VISSOAT, [VIS_DUOVISE] = @VI"& _ 
                "S_DUOVISE, [VIS_HEALON5] = @VIS_HEALON5, [VIS_OPHTHALINE] = @VIS_OPHTHALINE, [VI"& _ 
                "S_PROVISE] = @VIS_PROVISE, [BSS_PLUS] = @BSS_PLUS, [BSS] = @BSS, [PERITO_YES] = "& _ 
                "@PERITO_YES, [PERITO_NO] = @PERITO_NO, [CARTERY_MILD] = @CARTERY_MILD, [CARTERY_"& _ 
                "MODERATE] = @CARTERY_MODERATE, [CAUTERY_EXTENSIVE] = @CAUTERY_EXTENSIVE, [INCISI"& _ 
                "ON_SITE_CORNEOSCLERAL] = @INCISION_SITE_CORNEOSCLERAL, [INCISION_SITE_SCLERAL] ="& _ 
                " @INCISION_SITE_SCLERAL, [INCISION_SIZE_SUPERRIOR] = @INCISION_SIZE_SUPERRIOR, ["& _ 
                "INCISION_SIZE_SUPERRIOR_NOTE] = @INCISION_SIZE_SUPERRIOR_NOTE, [INCISION_SIZE_SU"& _ 
                "PERRIOR_OTHER] = @INCISION_SIZE_SUPERRIOR_OTHER, [CAPSULOTOMY_CYSTOTOMY] = @CAPS"& _ 
                "ULOTOMY_CYSTOTOMY, [CAPSULOTOMY_OTHERS] = @CAPSULOTOMY_OTHERS, [NUCLEUS_EXPRESSI"& _ 
                "ON] = @NUCLEUS_EXPRESSION, [NUCLEUS_LENSLOOP] = @NUCLEUS_LENSLOOP, [NUCLEUS_VISC"& _ 
                "O] = @NUCLEUS_VISCO, [CORTEX_SIMCO_IA] = @CORTEX_SIMCO_IA, [CAPSULE_YES] = @CAPS"& _ 
                "ULE_YES, [CAPSULE_NO] = @CAPSULE_NO, [IOL_IN_CAPSULAR] = @IOL_IN_CAPSULAR, [IOL_"& _ 
                "IN_SULCUS] = @IOL_IN_SULCUS, [IOL_IN_AC] = @IOL_IN_AC, [SUTURE_NYLON] = @SUTURE_"& _ 
                "NYLON, [SUTURE_NYLON_NOTE] = @SUTURE_NYLON_NOTE, [SUTURE_OTHERS] = @SUTURE_OTHER"& _ 
                "S, [SUBCONJUN_GENTAL] = @SUBCONJUN_GENTAL, [SUBCONJUN_CEFAZOLIN] = @SUBCONJUN_CE"& _ 
                "FAZOLIN, [SUBCONJUN_DEXAMETHASONE] = @SUBCONJUN_DEXAMETHASONE, [SUBCONJUN_OTHERS"& _ 
                "] = @SUBCONJUN_OTHERS, [TOPICAL_PILOCARPINE] = @TOPICAL_PILOCARPINE, [TOPICAL_MA"& _ 
                "XITROL] = @TOPICAL_MAXITROL, [TOPICAL_OTHERS] = @TOPICAL_OTHERS, [EXTRA_IRRIDECT"& _ 
                "OMY] = @EXTRA_IRRIDECTOMY, [EXTRA_LOCATION] = @EXTRA_LOCATION, [EXTRA_CAPSULAR] "& _ 
                "= @EXTRA_CAPSULAR, [EXTRA_VITREOS] = @EXTRA_VITREOS, [EXTRA_ANTERIOR] = @EXTRA_A"& _ 
                "NTERIOR, [EXTRA_AC_HEMORRHAGE] = @EXTRA_AC_HEMORRHAGE, [EXTRA_OTHER] = @EXTRA_OT"& _ 
                "HER, [SURGEON_SIGNATURE] = @SURGEON_SIGNATURE WHERE (([ECCE_ID] = @Original_ECCE"& _ 
                "_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DATE] "& _ 
                "= @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL) OR "& _ 
                "([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [PATIENT_NO]"& _ 
                " IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATIENT_NAME ="& _ 
                " 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_NAME)) AND"& _ 
                " ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX] = @Origi"& _ 
                "nal_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS NULL) OR (["& _ 
                "PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AND [START_T"& _ 
                "IME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_LEFT_EYE ="& _ 
                " 1 AND [LEFT_EYE] IS NULL) OR ([LEFT_EYE] = @Original_LEFT_EYE)) AND ((@IsNull_R"& _ 
                "IGHT_EYE = 1 AND [RIGHT_EYE] IS NULL) OR ([RIGHT_EYE] = @Original_RIGHT_EYE)) AN"& _ 
                "D ((@IsNull_SURGEON = 1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON"& _ 
                ")) AND ((@IsNull_SCRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) "& _ 
                "AND ((@IsNull_CIRCULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Or"& _ 
                "iginal_CIRCULATING)) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST]"& _ 
                " IS NULL) OR ([ANESTHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_"& _ 
                "DIAGNOSIS = 1 AND [DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) A"& _ 
                "ND ((@IsNull_S_AN_GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_G"& _ 
                "A)) AND ((@IsNull_S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @O"& _ 
                "riginal_S_AN_NEURO)) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) "& _ 
                "OR ([S_AN_STANDBY] = @Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1"& _ 
                " AND [S_AN_RETROBULBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBU"& _ 
                "LBAR)) AND ((@IsNull_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_A"& _ 
                "N_PERIBULBAR] = @Original_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND ["& _ 
                "S_AN_TOPICAL] IS NULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNu"& _ 
                "ll_VIS_HEALON_GV = 1 AND [VIS_HEALON_GV] IS NULL) OR ([VIS_HEALON_GV] = @Origina"& _ 
                "l_VIS_HEALON_GV)) AND ((@IsNull_VIS_IALF = 1 AND [VIS_IALF] IS NULL) OR ([VIS_IA"& _ 
                "LF] = @Original_VIS_IALF)) AND ((@IsNull_VIS_VISSOAT = 1 AND [VIS_VISSOAT] IS NU"& _ 
                "LL) OR ([VIS_VISSOAT] = @Original_VIS_VISSOAT)) AND ((@IsNull_VIS_DUOVISE = 1 AN"& _ 
                "D [VIS_DUOVISE] IS NULL) OR ([VIS_DUOVISE] = @Original_VIS_DUOVISE)) AND ((@IsNu"& _ 
                "ll_VIS_HEALON5 = 1 AND [VIS_HEALON5] IS NULL) OR ([VIS_HEALON5] = @Original_VIS_"& _ 
                "HEALON5)) AND ((@IsNull_VIS_OPHTHALINE = 1 AND [VIS_OPHTHALINE] IS NULL) OR ([VI"& _ 
                "S_OPHTHALINE] = @Original_VIS_OPHTHALINE)) AND ((@IsNull_VIS_PROVISE = 1 AND [VI"& _ 
                "S_PROVISE] IS NULL) OR ([VIS_PROVISE] = @Original_VIS_PROVISE)) AND ((@IsNull_BS"& _ 
                "S_PLUS = 1 AND [BSS_PLUS] IS NULL) OR ([BSS_PLUS] = @Original_BSS_PLUS)) AND ((@"& _ 
                "IsNull_BSS = 1 AND [BSS] IS NULL) OR ([BSS] = @Original_BSS)) AND ((@IsNull_PERI"& _ 
                "TO_YES = 1 AND [PERITO_YES] IS NULL) OR ([PERITO_YES] = @Original_PERITO_YES)) A"& _ 
                "ND ((@IsNull_PERITO_NO = 1 AND [PERITO_NO] IS NULL) OR ([PERITO_NO] = @Original_"& _ 
                "PERITO_NO)) AND ((@IsNull_CARTERY_MILD = 1 AND [CARTERY_MILD] IS NULL) OR ([CART"& _ 
                "ERY_MILD] = @Original_CARTERY_MILD)) AND ((@IsNull_CARTERY_MODERATE = 1 AND [CAR"& _ 
                "TERY_MODERATE] IS NULL) OR ([CARTERY_MODERATE] = @Original_CARTERY_MODERATE)) AN"& _ 
                "D ((@IsNull_CAUTERY_EXTENSIVE = 1 AND [CAUTERY_EXTENSIVE] IS NULL) OR ([CAUTERY_"& _ 
                "EXTENSIVE] = @Original_CAUTERY_EXTENSIVE)) AND ((@IsNull_INCISION_SITE_CORNEOSCL"& _ 
                "ERAL = 1 AND [INCISION_SITE_CORNEOSCLERAL] IS NULL) OR ([INCISION_SITE_CORNEOSCL"& _ 
                "ERAL] = @Original_INCISION_SITE_CORNEOSCLERAL)) AND ((@IsNull_INCISION_SITE_SCLE"& _ 
                "RAL = 1 AND [INCISION_SITE_SCLERAL] IS NULL) OR ([INCISION_SITE_SCLERAL] = @Orig"& _ 
                "inal_INCISION_SITE_SCLERAL)) AND ((@IsNull_INCISION_SIZE_SUPERRIOR = 1 AND [INCI"& _ 
                "SION_SIZE_SUPERRIOR] IS NULL) OR ([INCISION_SIZE_SUPERRIOR] = @Original_INCISION"& _ 
                "_SIZE_SUPERRIOR)) AND ((@IsNull_INCISION_SIZE_SUPERRIOR_NOTE = 1 AND [INCISION_S"& _ 
                "IZE_SUPERRIOR_NOTE] IS NULL) OR ([INCISION_SIZE_SUPERRIOR_NOTE] = @Original_INCI"& _ 
                "SION_SIZE_SUPERRIOR_NOTE)) AND ((@IsNull_INCISION_SIZE_SUPERRIOR_OTHER = 1 AND ["& _ 
                "INCISION_SIZE_SUPERRIOR_OTHER] IS NULL) OR ([INCISION_SIZE_SUPERRIOR_OTHER] = @O"& _ 
                "riginal_INCISION_SIZE_SUPERRIOR_OTHER)) AND ((@IsNull_CAPSULOTOMY_CYSTOTOMY = 1 "& _ 
                "AND [CAPSULOTOMY_CYSTOTOMY] IS NULL) OR ([CAPSULOTOMY_CYSTOTOMY] = @Original_CAP"& _ 
                "SULOTOMY_CYSTOTOMY)) AND ((@IsNull_CAPSULOTOMY_OTHERS = 1 AND [CAPSULOTOMY_OTHER"& _ 
                "S] IS NULL) OR ([CAPSULOTOMY_OTHERS] = @Original_CAPSULOTOMY_OTHERS)) AND ((@IsN"& _ 
                "ull_NUCLEUS_EXPRESSION = 1 AND [NUCLEUS_EXPRESSION] IS NULL) OR ([NUCLEUS_EXPRES"& _ 
                "SION] = @Original_NUCLEUS_EXPRESSION)) AND ((@IsNull_NUCLEUS_LENSLOOP = 1 AND [N"& _ 
                "UCLEUS_LENSLOOP] IS NULL) OR ([NUCLEUS_LENSLOOP] = @Original_NUCLEUS_LENSLOOP)) "& _ 
                "AND ((@IsNull_NUCLEUS_VISCO = 1 AND [NUCLEUS_VISCO] IS NULL) OR ([NUCLEUS_VISCO]"& _ 
                " = @Original_NUCLEUS_VISCO)) AND ((@IsNull_CORTEX_SIMCO_IA = 1 AND [CORTEX_SIMCO"& _ 
                "_IA] IS NULL) OR ([CORTEX_SIMCO_IA] = @Original_CORTEX_SIMCO_IA)) AND ((@IsNull_"& _ 
                "CAPSULE_YES = 1 AND [CAPSULE_YES] IS NULL) OR ([CAPSULE_YES] = @Original_CAPSULE"& _ 
                "_YES)) AND ((@IsNull_CAPSULE_NO = 1 AND [CAPSULE_NO] IS NULL) OR ([CAPSULE_NO] ="& _ 
                " @Original_CAPSULE_NO)) AND ((@IsNull_IOL_IN_CAPSULAR = 1 AND [IOL_IN_CAPSULAR] "& _ 
                "IS NULL) OR ([IOL_IN_CAPSULAR] = @Original_IOL_IN_CAPSULAR)) AND ((@IsNull_IOL_I"& _ 
                "N_SULCUS = 1 AND [IOL_IN_SULCUS] IS NULL) OR ([IOL_IN_SULCUS] = @Original_IOL_IN"& _ 
                "_SULCUS)) AND ((@IsNull_IOL_IN_AC = 1 AND [IOL_IN_AC] IS NULL) OR ([IOL_IN_AC] ="& _ 
                " @Original_IOL_IN_AC)) AND ((@IsNull_SUTURE_NYLON = 1 AND [SUTURE_NYLON] IS NULL"& _ 
                ") OR ([SUTURE_NYLON] = @Original_SUTURE_NYLON)) AND ((@IsNull_SUTURE_NYLON_NOTE "& _ 
                "= 1 AND [SUTURE_NYLON_NOTE] IS NULL) OR ([SUTURE_NYLON_NOTE] = @Original_SUTURE_"& _ 
                "NYLON_NOTE)) AND ((@IsNull_SUTURE_OTHERS = 1 AND [SUTURE_OTHERS] IS NULL) OR ([S"& _ 
                "UTURE_OTHERS] = @Original_SUTURE_OTHERS)) AND ((@IsNull_SUBCONJUN_GENTAL = 1 AND"& _ 
                " [SUBCONJUN_GENTAL] IS NULL) OR ([SUBCONJUN_GENTAL] = @Original_SUBCONJUN_GENTAL"& _ 
                ")) AND ((@IsNull_SUBCONJUN_CEFAZOLIN = 1 AND [SUBCONJUN_CEFAZOLIN] IS NULL) OR ("& _ 
                "[SUBCONJUN_CEFAZOLIN] = @Original_SUBCONJUN_CEFAZOLIN)) AND ((@IsNull_SUBCONJUN_"& _ 
                "DEXAMETHASONE = 1 AND [SUBCONJUN_DEXAMETHASONE] IS NULL) OR ([SUBCONJUN_DEXAMETH"& _ 
                "ASONE] = @Original_SUBCONJUN_DEXAMETHASONE)) AND ((@IsNull_SUBCONJUN_OTHERS = 1 "& _ 
                "AND [SUBCONJUN_OTHERS] IS NULL) OR ([SUBCONJUN_OTHERS] = @Original_SUBCONJUN_OTH"& _ 
                "ERS)) AND ((@IsNull_TOPICAL_PILOCARPINE = 1 AND [TOPICAL_PILOCARPINE] IS NULL) O"& _ 
                "R ([TOPICAL_PILOCARPINE] = @Original_TOPICAL_PILOCARPINE)) AND ((@IsNull_TOPICAL"& _ 
                "_MAXITROL = 1 AND [TOPICAL_MAXITROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Original"& _ 
                "_TOPICAL_MAXITROL)) AND ((@IsNull_TOPICAL_OTHERS = 1 AND [TOPICAL_OTHERS] IS NUL"& _ 
                "L) OR ([TOPICAL_OTHERS] = @Original_TOPICAL_OTHERS)) AND ((@IsNull_EXTRA_IRRIDEC"& _ 
                "TOMY = 1 AND [EXTRA_IRRIDECTOMY] IS NULL) OR ([EXTRA_IRRIDECTOMY] = @Original_EX"& _ 
                "TRA_IRRIDECTOMY)) AND ((@IsNull_EXTRA_LOCATION = 1 AND [EXTRA_LOCATION] IS NULL)"& _ 
                " OR ([EXTRA_LOCATION] = @Original_EXTRA_LOCATION)) AND ((@IsNull_EXTRA_CAPSULAR "& _ 
                "= 1 AND [EXTRA_CAPSULAR] IS NULL) OR ([EXTRA_CAPSULAR] = @Original_EXTRA_CAPSULA"& _ 
                "R)) AND ((@IsNull_EXTRA_VITREOS = 1 AND [EXTRA_VITREOS] IS NULL) OR ([EXTRA_VITR"& _ 
                "EOS] = @Original_EXTRA_VITREOS)) AND ((@IsNull_EXTRA_ANTERIOR = 1 AND [EXTRA_ANT"& _ 
                "ERIOR] IS NULL) OR ([EXTRA_ANTERIOR] = @Original_EXTRA_ANTERIOR)) AND ((@IsNull_"& _ 
                "EXTRA_AC_HEMORRHAGE = 1 AND [EXTRA_AC_HEMORRHAGE] IS NULL) OR ([EXTRA_AC_HEMORRH"& _ 
                "AGE] = @Original_EXTRA_AC_HEMORRHAGE)) AND ((@IsNull_EXTRA_OTHER = 1 AND [EXTRA_"& _ 
                "OTHER] IS NULL) OR ([EXTRA_OTHER] = @Original_EXTRA_OTHER)) AND ((@IsNull_SURGEO"& _ 
                "N_SIGNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE] = @Orig"& _ 
                "inal_SURGEON_SIGNATURE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ECCE_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, P"& _ 
                "ATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, LEFT_EYE, RIGHT_EYE, SURGEON,"& _ 
                " SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STA"& _ 
                "NDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, "& _ 
                "VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS_OPHTHALINE, VIS_PROVISE, BSS_PLUS, BS"& _ 
                "S, PERITO_YES, PERITO_NO, CARTERY_MILD, CARTERY_MODERATE, CAUTERY_EXTENSIVE, INC"& _ 
                "ISION_SITE_CORNEOSCLERAL, INCISION_SITE_SCLERAL, INCISION_SIZE_SUPERRIOR, INCISI"& _ 
                "ON_SIZE_SUPERRIOR_NOTE, INCISION_SIZE_SUPERRIOR_OTHER, CAPSULOTOMY_CYSTOTOMY, CA"& _ 
                "PSULOTOMY_OTHERS, NUCLEUS_EXPRESSION, NUCLEUS_LENSLOOP, NUCLEUS_VISCO, CORTEX_SI"& _ 
                "MCO_IA, CAPSULE_YES, CAPSULE_NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTU"& _ 
                "RE_NYLON, SUTURE_NYLON_NOTE, SUTURE_OTHERS, SUBCONJUN_GENTAL, SUBCONJUN_CEFAZOLI"& _ 
                "N, SUBCONJUN_DEXAMETHASONE, SUBCONJUN_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXIT"& _ 
                "ROL, TOPICAL_OTHERS, EXTRA_IRRIDECTOMY, EXTRA_LOCATION, EXTRA_CAPSULAR, EXTRA_VI"& _ 
                "TREOS, EXTRA_ANTERIOR, EXTRA_AC_HEMORRHAGE, EXTRA_OTHER, SURGEON_SIGNATURE FROM "& _ 
                "S_OPERA_ECCE WHERE (ECCE_ID = @ECCE_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_IALF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS_PLUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITO_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITO_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARTERY_MILD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MILD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARTERY_MODERATE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MODERATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SITE_CORNEOSCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_CORNEOSCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SITE_SCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_SCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULOTOMY_CYSTOTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_CYSTOTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULOTOMY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_EXPRESSION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_EXPRESSION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_LENSLOOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_LENSLOOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_VISCO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_VISCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORTEX_SIMCO_IA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORTEX_SIMCO_IA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NYLON_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_IRRIDECTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_IRRIDECTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_LOCATION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_LOCATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_VITREOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_VITREOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_ANTERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_AC_HEMORRHAGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_AC_HEMORRHAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ECCE_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ECCE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_HEALON_GV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_IALF", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_IALF", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_VISSOAT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_DUOVISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_HEALON5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_OPHTHALINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIS_PROVISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BSS_PLUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BSS_PLUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BSS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BSS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERITO_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERITO_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERITO_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERITO_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CARTERY_MILD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MILD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CARTERY_MILD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MILD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CARTERY_MODERATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MODERATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CARTERY_MODERATE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MODERATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SITE_CORNEOSCLERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_CORNEOSCLERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SITE_CORNEOSCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_CORNEOSCLERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SITE_SCLERAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_SCLERAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SITE_SCLERAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_SCLERAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SIZE_SUPERRIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SIZE_SUPERRIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULOTOMY_CYSTOTOMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_CYSTOTOMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULOTOMY_CYSTOTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_CYSTOTOMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULOTOMY_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULOTOMY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUCLEUS_EXPRESSION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_EXPRESSION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUCLEUS_EXPRESSION", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_EXPRESSION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUCLEUS_LENSLOOP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_LENSLOOP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUCLEUS_LENSLOOP", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_LENSLOOP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUCLEUS_VISCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_VISCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUCLEUS_VISCO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_VISCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORTEX_SIMCO_IA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORTEX_SIMCO_IA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORTEX_SIMCO_IA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORTEX_SIMCO_IA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULE_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAPSULE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAPSULE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_SULCUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IOL_IN_AC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_NYLON_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_NYLON_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUTURE_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUTURE_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUN_GENTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_GENTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUN_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_GENTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUN_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUN_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUN_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUN_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUN_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUN_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_IRRIDECTOMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_IRRIDECTOMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_IRRIDECTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_IRRIDECTOMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_LOCATION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_LOCATION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_LOCATION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_LOCATION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_CAPSULAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_CAPSULAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_CAPSULAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_CAPSULAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_VITREOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_VITREOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_VITREOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_VITREOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_ANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_ANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_ANTERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_ANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_AC_HEMORRHAGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_AC_HEMORRHAGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_AC_HEMORRHAGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_AC_HEMORRHAGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ECCE_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "ECCE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ECCE_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PAT"& _ 
                "IENT_AGE, START_TIME, LEFT_EYE, RIGHT_EYE, SURGEON, SCRUB, CIRCULATING, ANESTHES"& _ 
                "IONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_"& _ 
                "PERIBULBAR, S_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS"& _ 
                "_HEALON5, VIS_OPHTHALINE, VIS_PROVISE, BSS_PLUS, BSS, PERITO_YES, PERITO_NO, CAR"& _ 
                "TERY_MILD, CARTERY_MODERATE, CAUTERY_EXTENSIVE, INCISION_SITE_CORNEOSCLERAL, INC"& _ 
                "ISION_SITE_SCLERAL, INCISION_SIZE_SUPERRIOR, INCISION_SIZE_SUPERRIOR_NOTE, INCIS"& _ 
                "ION_SIZE_SUPERRIOR_OTHER, CAPSULOTOMY_CYSTOTOMY, CAPSULOTOMY_OTHERS, NUCLEUS_EXP"& _ 
                "RESSION, NUCLEUS_LENSLOOP, NUCLEUS_VISCO, CORTEX_SIMCO_IA, CAPSULE_YES, CAPSULE_"& _ 
                "NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTURE_NYLON, SUTURE_NYLON_NOTE, "& _ 
                "SUTURE_OTHERS, SUBCONJUN_GENTAL, SUBCONJUN_CEFAZOLIN, SUBCONJUN_DEXAMETHASONE, S"& _ 
                "UBCONJUN_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, EXTRA_IR"& _ 
                "RIDECTOMY, EXTRA_LOCATION, EXTRA_CAPSULAR, EXTRA_VITREOS, EXTRA_ANTERIOR, EXTRA_"& _ 
                "AC_HEMORRHAGE, EXTRA_OTHER, SURGEON_SIGNATURE FROM dbo.S_OPERA_ECCE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT ECCE_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PAT"& _ 
                "IENT_AGE, START_TIME, LEFT_EYE, RIGHT_EYE, SURGEON, SCRUB, CIRCULATING, ANESTHES"& _ 
                "IONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_"& _ 
                "PERIBULBAR, S_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS"& _ 
                "_HEALON5, VIS_OPHTHALINE, VIS_PROVISE, BSS_PLUS, BSS, PERITO_YES, PERITO_NO, CAR"& _ 
                "TERY_MILD, CARTERY_MODERATE, CAUTERY_EXTENSIVE, INCISION_SITE_CORNEOSCLERAL, INC"& _ 
                "ISION_SITE_SCLERAL, INCISION_SIZE_SUPERRIOR, INCISION_SIZE_SUPERRIOR_NOTE, INCIS"& _ 
                "ION_SIZE_SUPERRIOR_OTHER, CAPSULOTOMY_CYSTOTOMY, CAPSULOTOMY_OTHERS, NUCLEUS_EXP"& _ 
                "RESSION, NUCLEUS_LENSLOOP, NUCLEUS_VISCO, CORTEX_SIMCO_IA, CAPSULE_YES, CAPSULE_"& _ 
                "NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTURE_NYLON, SUTURE_NYLON_NOTE, "& _ 
                "SUTURE_OTHERS, SUBCONJUN_GENTAL, SUBCONJUN_CEFAZOLIN, SUBCONJUN_DEXAMETHASONE, S"& _ 
                "UBCONJUN_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, EXTRA_IR"& _ 
                "RIDECTOMY, EXTRA_LOCATION, EXTRA_CAPSULAR, EXTRA_VITREOS, EXTRA_ANTERIOR, EXTRA_"& _ 
                "AC_HEMORRHAGE, EXTRA_OTHER, SURGEON_SIGNATURE FROM dbo.S_OPERA_ECCE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE ECCE_"& _ 
                "ID=@ECCE_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ECCE_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "ECCE_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [dbo].[S_OPERA_ECCE] ([CREATE_DATE], [OPERA_NO], [PATIENT_NO], [PATIE"& _ 
                "NT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [LEFT_EYE], [RIGHT_EYE], ["& _ 
                "SURGEON], [SCRUB], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_AN_GA], ["& _ 
                "S_AN_NEURO], [S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TOPICA"& _ 
                "L], [VIS_HEALON_GV], [VIS_IALF], [VIS_VISSOAT], [VIS_DUOVISE], [VIS_HEALON5], [V"& _ 
                "IS_OPHTHALINE], [VIS_PROVISE], [BSS_PLUS], [BSS], [PERITO_YES], [PERITO_NO], [CA"& _ 
                "RTERY_MILD], [CARTERY_MODERATE], [CAUTERY_EXTENSIVE], [INCISION_SITE_CORNEOSCLER"& _ 
                "AL], [INCISION_SITE_SCLERAL], [INCISION_SIZE_SUPERRIOR], [INCISION_SIZE_SUPERRIO"& _ 
                "R_NOTE], [INCISION_SIZE_SUPERRIOR_OTHER], [CAPSULOTOMY_CYSTOTOMY], [CAPSULOTOMY_"& _ 
                "OTHERS], [NUCLEUS_EXPRESSION], [NUCLEUS_LENSLOOP], [NUCLEUS_VISCO], [CORTEX_SIMC"& _ 
                "O_IA], [CAPSULE_YES], [CAPSULE_NO], [IOL_IN_CAPSULAR], [IOL_IN_SULCUS], [IOL_IN_"& _ 
                "AC], [SUTURE_NYLON], [SUTURE_NYLON_NOTE], [SUTURE_OTHERS], [SUBCONJUN_GENTAL], ["& _ 
                "SUBCONJUN_CEFAZOLIN], [SUBCONJUN_DEXAMETHASONE], [SUBCONJUN_OTHERS], [TOPICAL_PI"& _ 
                "LOCARPINE], [TOPICAL_MAXITROL], [TOPICAL_OTHERS], [EXTRA_IRRIDECTOMY], [EXTRA_LO"& _ 
                "CATION], [EXTRA_CAPSULAR], [EXTRA_VITREOS], [EXTRA_ANTERIOR], [EXTRA_AC_HEMORRHA"& _ 
                "GE], [EXTRA_OTHER], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PATIE"& _ 
                "NT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @LEFT_EYE, @RIGHT"& _ 
                "_EYE, @SURGEON, @SCRUB, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_AN_GA, "& _ 
                "@S_AN_NEURO, @S_AN_STANDBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, "& _ 
                "@VIS_HEALON_GV, @VIS_IALF, @VIS_VISSOAT, @VIS_DUOVISE, @VIS_HEALON5, @VIS_OPHTHA"& _ 
                "LINE, @VIS_PROVISE, @BSS_PLUS, @BSS, @PERITO_YES, @PERITO_NO, @CARTERY_MILD, @CA"& _ 
                "RTERY_MODERATE, @CAUTERY_EXTENSIVE, @INCISION_SITE_CORNEOSCLERAL, @INCISION_SITE"& _ 
                "_SCLERAL, @INCISION_SIZE_SUPERRIOR, @INCISION_SIZE_SUPERRIOR_NOTE, @INCISION_SIZ"& _ 
                "E_SUPERRIOR_OTHER, @CAPSULOTOMY_CYSTOTOMY, @CAPSULOTOMY_OTHERS, @NUCLEUS_EXPRESS"& _ 
                "ION, @NUCLEUS_LENSLOOP, @NUCLEUS_VISCO, @CORTEX_SIMCO_IA, @CAPSULE_YES, @CAPSULE"& _ 
                "_NO, @IOL_IN_CAPSULAR, @IOL_IN_SULCUS, @IOL_IN_AC, @SUTURE_NYLON, @SUTURE_NYLON_"& _ 
                "NOTE, @SUTURE_OTHERS, @SUBCONJUN_GENTAL, @SUBCONJUN_CEFAZOLIN, @SUBCONJUN_DEXAME"& _ 
                "THASONE, @SUBCONJUN_OTHERS, @TOPICAL_PILOCARPINE, @TOPICAL_MAXITROL, @TOPICAL_OT"& _ 
                "HERS, @EXTRA_IRRIDECTOMY, @EXTRA_LOCATION, @EXTRA_CAPSULAR, @EXTRA_VITREOS, @EXT"& _ 
                "RA_ANTERIOR, @EXTRA_AC_HEMORRHAGE, @EXTRA_OTHER, @SURGEON_SIGNATURE);"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_IALF", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS_PLUS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITO_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITO_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARTERY_MILD", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MILD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARTERY_MODERATE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MODERATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SITE_CORNEOSCLERAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_CORNEOSCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SITE_SCLERAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_SCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULOTOMY_CYSTOTOMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_CYSTOTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULOTOMY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_EXPRESSION", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_EXPRESSION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_LENSLOOP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_LENSLOOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_VISCO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_VISCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORTEX_SIMCO_IA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CORTEX_SIMCO_IA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULE_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULE_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NYLON_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_OTHERS", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_GENTAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_OTHERS", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_IRRIDECTOMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_IRRIDECTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_LOCATION", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_LOCATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_CAPSULAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_VITREOS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_VITREOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_ANTERIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_AC_HEMORRHAGE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_AC_HEMORRHAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE [dbo].[S_OPERA_ECCE] SET  [START_TIME] = @START_TIME, [LEFT_EYE] = @LEFT_E"& _ 
                "YE, [RIGHT_EYE] = @RIGHT_EYE, [SURGEON] = @SURGEON, [SCRUB] = @SCRUB, [CIRCULATI"& _ 
                "NG] = @CIRCULATING, [ANESTHESIONLOGIST] = @ANESTHESIONLOGIST, [DIAGNOSIS] = @DIA"& _ 
                "GNOSIS, [S_AN_GA] = @S_AN_GA, [S_AN_NEURO] = @S_AN_NEURO, [S_AN_STANDBY] = @S_AN"& _ 
                "_STANDBY, [S_AN_RETROBULBAR] = @S_AN_RETROBULBAR, [S_AN_PERIBULBAR] = @S_AN_PERI"& _ 
                "BULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL, [VIS_HEALON_GV] = @VIS_HEALON_GV, [VIS_I"& _ 
                "ALF] = @VIS_IALF, [VIS_VISSOAT] = @VIS_VISSOAT, [VIS_DUOVISE] = @VIS_DUOVISE, [V"& _ 
                "IS_HEALON5] = @VIS_HEALON5, [VIS_OPHTHALINE] = @VIS_OPHTHALINE, [VIS_PROVISE] = "& _ 
                "@VIS_PROVISE, [BSS_PLUS] = @BSS_PLUS, [BSS] = @BSS, [PERITO_YES] = @PERITO_YES, "& _ 
                "[PERITO_NO] = @PERITO_NO, [CARTERY_MILD] = @CARTERY_MILD, [CARTERY_MODERATE] = @"& _ 
                "CARTERY_MODERATE, [CAUTERY_EXTENSIVE] = @CAUTERY_EXTENSIVE, [INCISION_SITE_CORNE"& _ 
                "OSCLERAL] = @INCISION_SITE_CORNEOSCLERAL, [INCISION_SITE_SCLERAL] = @INCISION_SI"& _ 
                "TE_SCLERAL, [INCISION_SIZE_SUPERRIOR] = @INCISION_SIZE_SUPERRIOR, [INCISION_SIZE"& _ 
                "_SUPERRIOR_NOTE] = @INCISION_SIZE_SUPERRIOR_NOTE, [INCISION_SIZE_SUPERRIOR_OTHER"& _ 
                "] = @INCISION_SIZE_SUPERRIOR_OTHER, [CAPSULOTOMY_CYSTOTOMY] = @CAPSULOTOMY_CYSTO"& _ 
                "TOMY, [CAPSULOTOMY_OTHERS] = @CAPSULOTOMY_OTHERS, [NUCLEUS_EXPRESSION] = @NUCLEU"& _ 
                "S_EXPRESSION, [NUCLEUS_LENSLOOP] = @NUCLEUS_LENSLOOP, [NUCLEUS_VISCO] = @NUCLEUS"& _ 
                "_VISCO, [CORTEX_SIMCO_IA] = @CORTEX_SIMCO_IA, [CAPSULE_YES] = @CAPSULE_YES, [CAP"& _ 
                "SULE_NO] = @CAPSULE_NO, [IOL_IN_CAPSULAR] = @IOL_IN_CAPSULAR, [IOL_IN_SULCUS] = "& _ 
                "@IOL_IN_SULCUS, [IOL_IN_AC] = @IOL_IN_AC, [SUTURE_NYLON] = @SUTURE_NYLON, [SUTUR"& _ 
                "E_NYLON_NOTE] = @SUTURE_NYLON_NOTE, [SUTURE_OTHERS] = @SUTURE_OTHERS, [SUBCONJUN"& _ 
                "_GENTAL] = @SUBCONJUN_GENTAL, [SUBCONJUN_CEFAZOLIN] = @SUBCONJUN_CEFAZOLIN, [SUB"& _ 
                "CONJUN_DEXAMETHASONE] = @SUBCONJUN_DEXAMETHASONE, [SUBCONJUN_OTHERS] = @SUBCONJU"& _ 
                "N_OTHERS, [TOPICAL_PILOCARPINE] = @TOPICAL_PILOCARPINE, [TOPICAL_MAXITROL] = @TO"& _ 
                "PICAL_MAXITROL, [TOPICAL_OTHERS] = @TOPICAL_OTHERS, [EXTRA_IRRIDECTOMY] = @EXTRA"& _ 
                "_IRRIDECTOMY, [EXTRA_LOCATION] = @EXTRA_LOCATION, [EXTRA_CAPSULAR] = @EXTRA_CAPS"& _ 
                "ULAR, [EXTRA_VITREOS] = @EXTRA_VITREOS, [EXTRA_ANTERIOR] = @EXTRA_ANTERIOR, [EXT"& _ 
                "RA_AC_HEMORRHAGE] = @EXTRA_AC_HEMORRHAGE, [EXTRA_OTHER] = @EXTRA_OTHER, [SURGEON"& _ 
                "_SIGNATURE] = @SURGEON_SIGNATURE WHERE (([ECCE_ID] = @Original_ECCE_ID)) "
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON_GV", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON_GV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_IALF", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_IALF", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_VISSOAT", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_VISSOAT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_DUOVISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_DUOVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_HEALON5", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_HEALON5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_OPHTHALINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_OPHTHALINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIS_PROVISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "VIS_PROVISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS_PLUS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS_PLUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BSS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BSS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITO_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITO_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITO_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARTERY_MILD", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MILD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CARTERY_MODERATE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CARTERY_MODERATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SITE_CORNEOSCLERAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_CORNEOSCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SITE_SCLERAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SITE_SCLERAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "INCISION_SIZE_SUPERRIOR_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULOTOMY_CYSTOTOMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_CYSTOTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULOTOMY_OTHERS", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULOTOMY_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_EXPRESSION", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_EXPRESSION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_LENSLOOP", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_LENSLOOP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUCLEUS_VISCO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "NUCLEUS_VISCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORTEX_SIMCO_IA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CORTEX_SIMCO_IA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULE_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAPSULE_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAPSULE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_CAPSULAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_SULCUS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_SULCUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IOL_IN_AC", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IOL_IN_AC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_NYLON_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_NYLON_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUTURE_OTHERS", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "SUTURE_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_GENTAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUN_OTHERS", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUN_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_IRRIDECTOMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_IRRIDECTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_LOCATION", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_LOCATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_CAPSULAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_CAPSULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_VITREOS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_VITREOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_ANTERIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_ANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_AC_HEMORRHAGE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_AC_HEMORRHAGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ECCE_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "ECCE_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.S_OPERA_ECCEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.S_OPERA_ECCEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.S_OPERA_ECCEDataTable = New DSOPERATIONNOTE.S_OPERA_ECCEDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.S_OPERA_ECCEDataTable, ByVal ECCE_ID As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ECCE_ID,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectECCE(ByVal ECCE_ID As Decimal) As DSOPERATIONNOTE.S_OPERA_ECCEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(ECCE_ID,Decimal)
            Dim dataTable As DSOPERATIONNOTE.S_OPERA_ECCEDataTable = New DSOPERATIONNOTE.S_OPERA_ECCEDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.S_OPERA_ECCEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "S_OPERA_ECCE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ECCE_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITO_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITO_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CARTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CARTERY_MODERATE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SITE_CORNEOSCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SITE_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal Original_CAPSULOTOMY_CYSTOTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULOTOMY_OTHERS As String,  _
                    ByVal Original_NUCLEUS_EXPRESSION As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUCLEUS_LENSLOOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUCLEUS_VISCO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CORTEX_SIMCO_IA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NYLON_NOTE As String,  _
                    ByVal Original_SUTURE_OTHERS As String,  _
                    ByVal Original_SUBCONJUN_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_OTHERS As String,  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_EXTRA_IRRIDECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_LOCATION As String,  _
                    ByVal Original_EXTRA_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_VITREOS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_AC_HEMORRHAGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_OTHER As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ECCE_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_START_TIME,String)
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_HEALON_GV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_VIS_HEALON_GV.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_IALF.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_VIS_IALF.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_VISSOAT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_VIS_VISSOAT.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_DUOVISE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_VIS_DUOVISE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_HEALON5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_VIS_HEALON5.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_OPHTHALINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_VIS_OPHTHALINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_PROVISE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_VIS_PROVISE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_BSS_PLUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_BSS_PLUS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_BSS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_BSS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_PERITO_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_PERITO_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_PERITO_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_PERITO_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_CARTERY_MILD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_CARTERY_MILD.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_CARTERY_MODERATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_CARTERY_MODERATE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_CAUTERY_EXTENSIVE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_INCISION_SITE_CORNEOSCLERAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_INCISION_SITE_CORNEOSCLERAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_INCISION_SITE_SCLERAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_INCISION_SITE_SCLERAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_INCISION_SIZE_SUPERRIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_INCISION_SIZE_SUPERRIOR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_INCISION_SIZE_SUPERRIOR_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_INCISION_SIZE_SUPERRIOR_NOTE,String)
            End If
            If (Original_INCISION_SIZE_SUPERRIOR_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_INCISION_SIZE_SUPERRIOR_OTHER,String)
            End If
            If (Original_CAPSULOTOMY_CYSTOTOMY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_CAPSULOTOMY_CYSTOTOMY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPSULOTOMY_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_CAPSULOTOMY_OTHERS,String)
            End If
            If (Original_NUCLEUS_EXPRESSION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_NUCLEUS_EXPRESSION.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_NUCLEUS_LENSLOOP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_NUCLEUS_LENSLOOP.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_NUCLEUS_VISCO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_NUCLEUS_VISCO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_CORTEX_SIMCO_IA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_CORTEX_SIMCO_IA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPSULE_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_CAPSULE_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPSULE_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_CAPSULE_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_CAPSULAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_IOL_IN_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_SULCUS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_IOL_IN_SULCUS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_AC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_IOL_IN_AC.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_SUTURE_NYLON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_SUTURE_NYLON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_SUTURE_NYLON_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_SUTURE_NYLON_NOTE,String)
            End If
            If (Original_SUTURE_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_SUTURE_OTHERS,String)
            End If
            If (Original_SUBCONJUN_GENTAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_SUBCONJUN_GENTAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUN_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_SUBCONJUN_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUN_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_SUBCONJUN_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUN_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_SUBCONJUN_OTHERS,String)
            End If
            If (Original_TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_TOPICAL_OTHERS,String)
            End If
            If (Original_EXTRA_IRRIDECTOMY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_EXTRA_IRRIDECTOMY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_LOCATION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_EXTRA_LOCATION,String)
            End If
            If (Original_EXTRA_CAPSULAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_EXTRA_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_VITREOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_EXTRA_VITREOS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_ANTERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_EXTRA_ANTERIOR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_AC_HEMORRHAGE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_EXTRA_AC_HEMORRHAGE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_EXTRA_OTHER,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MODERATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_CORNEOSCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal CAPSULOTOMY_CYSTOTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULOTOMY_OTHERS As String,  _
                    ByVal NUCLEUS_EXPRESSION As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_LENSLOOP As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_VISCO As Global.System.Nullable(Of Boolean),  _
                    ByVal CORTEX_SIMCO_IA As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON_NOTE As String,  _
                    ByVal SUTURE_OTHERS As String,  _
                    ByVal SUBCONJUN_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal EXTRA_IRRIDECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_LOCATION As String,  _
                    ByVal EXTRA_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_VITREOS As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_AC_HEMORRHAGE As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (LEFT_EYE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (RIGHT_EYE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON_GV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(VIS_HEALON_GV.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (VIS_IALF.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(VIS_IALF.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (VIS_VISSOAT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(VIS_VISSOAT.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VIS_DUOVISE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(VIS_DUOVISE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(VIS_HEALON5.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (VIS_OPHTHALINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(VIS_OPHTHALINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (VIS_PROVISE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(VIS_PROVISE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (BSS_PLUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(BSS_PLUS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (BSS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(BSS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (PERITO_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(PERITO_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PERITO_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(PERITO_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CARTERY_MILD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(CARTERY_MILD.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CARTERY_MODERATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CARTERY_MODERATE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_EXTENSIVE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SITE_CORNEOSCLERAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(INCISION_SITE_CORNEOSCLERAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SITE_SCLERAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(INCISION_SITE_SCLERAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SIZE_SUPERRIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(INCISION_SIZE_SUPERRIOR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SIZE_SUPERRIOR_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(INCISION_SIZE_SUPERRIOR_NOTE,String)
            End If
            If (INCISION_SIZE_SUPERRIOR_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(INCISION_SIZE_SUPERRIOR_OTHER,String)
            End If
            If (CAPSULOTOMY_CYSTOTOMY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(CAPSULOTOMY_CYSTOTOMY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (CAPSULOTOMY_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(CAPSULOTOMY_OTHERS,String)
            End If
            If (NUCLEUS_EXPRESSION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(NUCLEUS_EXPRESSION.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (NUCLEUS_LENSLOOP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(NUCLEUS_LENSLOOP.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (NUCLEUS_VISCO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(NUCLEUS_VISCO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CORTEX_SIMCO_IA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(CORTEX_SIMCO_IA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CAPSULE_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(CAPSULE_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (CAPSULE_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(CAPSULE_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_CAPSULAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(IOL_IN_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_SULCUS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(IOL_IN_SULCUS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_AC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(IOL_IN_AC.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NYLON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(SUTURE_NYLON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NYLON_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(SUTURE_NYLON_NOTE,String)
            End If
            If (SUTURE_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(SUTURE_OTHERS,String)
            End If
            If (SUBCONJUN_GENTAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(SUBCONJUN_GENTAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(SUBCONJUN_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(SUBCONJUN_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(SUBCONJUN_OTHERS,String)
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (EXTRA_IRRIDECTOMY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(EXTRA_IRRIDECTOMY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_LOCATION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(EXTRA_LOCATION,String)
            End If
            If (EXTRA_CAPSULAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(EXTRA_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_VITREOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(EXTRA_VITREOS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_ANTERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(EXTRA_ANTERIOR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_AC_HEMORRHAGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(EXTRA_AC_HEMORRHAGE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(EXTRA_OTHER,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MODERATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_CORNEOSCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal CAPSULOTOMY_CYSTOTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULOTOMY_OTHERS As String,  _
                    ByVal NUCLEUS_EXPRESSION As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_LENSLOOP As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_VISCO As Global.System.Nullable(Of Boolean),  _
                    ByVal CORTEX_SIMCO_IA As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON_NOTE As String,  _
                    ByVal SUTURE_OTHERS As String,  _
                    ByVal SUBCONJUN_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal EXTRA_IRRIDECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_LOCATION As String,  _
                    ByVal EXTRA_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_VITREOS As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_AC_HEMORRHAGE As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_ECCE_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITO_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITO_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CARTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CARTERY_MODERATE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SITE_CORNEOSCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SITE_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal Original_CAPSULOTOMY_CYSTOTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULOTOMY_OTHERS As String,  _
                    ByVal Original_NUCLEUS_EXPRESSION As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUCLEUS_LENSLOOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUCLEUS_VISCO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CORTEX_SIMCO_IA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NYLON_NOTE As String,  _
                    ByVal Original_SUTURE_OTHERS As String,  _
                    ByVal Original_SUBCONJUN_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_OTHERS As String,  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_EXTRA_IRRIDECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_LOCATION As String,  _
                    ByVal Original_EXTRA_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_VITREOS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_AC_HEMORRHAGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_OTHER As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String,  _
                    ByVal ECCE_ID As Decimal) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (LEFT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (RIGHT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON_GV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(VIS_HEALON_GV.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (VIS_IALF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(VIS_IALF.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (VIS_VISSOAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(VIS_VISSOAT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VIS_DUOVISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(VIS_DUOVISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(VIS_HEALON5.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (VIS_OPHTHALINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(VIS_OPHTHALINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (VIS_PROVISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(VIS_PROVISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (BSS_PLUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(BSS_PLUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (BSS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(BSS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (PERITO_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(PERITO_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PERITO_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(PERITO_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CARTERY_MILD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CARTERY_MILD.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CARTERY_MODERATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CARTERY_MODERATE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_EXTENSIVE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SITE_CORNEOSCLERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(INCISION_SITE_CORNEOSCLERAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SITE_SCLERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(INCISION_SITE_SCLERAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SIZE_SUPERRIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(INCISION_SIZE_SUPERRIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SIZE_SUPERRIOR_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(INCISION_SIZE_SUPERRIOR_NOTE,String)
            End If
            If (INCISION_SIZE_SUPERRIOR_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(INCISION_SIZE_SUPERRIOR_OTHER,String)
            End If
            If (CAPSULOTOMY_CYSTOTOMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(CAPSULOTOMY_CYSTOTOMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (CAPSULOTOMY_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(CAPSULOTOMY_OTHERS,String)
            End If
            If (NUCLEUS_EXPRESSION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(NUCLEUS_EXPRESSION.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (NUCLEUS_LENSLOOP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(NUCLEUS_LENSLOOP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (NUCLEUS_VISCO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(NUCLEUS_VISCO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CORTEX_SIMCO_IA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(CORTEX_SIMCO_IA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CAPSULE_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(CAPSULE_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (CAPSULE_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(CAPSULE_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_CAPSULAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(IOL_IN_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_SULCUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(IOL_IN_SULCUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_AC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(IOL_IN_AC.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(SUTURE_NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NYLON_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(SUTURE_NYLON_NOTE,String)
            End If
            If (SUTURE_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(SUTURE_OTHERS,String)
            End If
            If (SUBCONJUN_GENTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(SUBCONJUN_GENTAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(SUBCONJUN_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(SUBCONJUN_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(SUBCONJUN_OTHERS,String)
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (EXTRA_IRRIDECTOMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(EXTRA_IRRIDECTOMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_LOCATION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(EXTRA_LOCATION,String)
            End If
            If (EXTRA_CAPSULAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(EXTRA_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_VITREOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(EXTRA_VITREOS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(EXTRA_ANTERIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_AC_HEMORRHAGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(EXTRA_AC_HEMORRHAGE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(EXTRA_OTHER,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_ECCE_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_START_TIME,String)
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_HEALON_GV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_VIS_HEALON_GV.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_IALF.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_VIS_IALF.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_VISSOAT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_VIS_VISSOAT.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_DUOVISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_VIS_DUOVISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_HEALON5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_VIS_HEALON5.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_OPHTHALINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_VIS_OPHTHALINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_VIS_PROVISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_VIS_PROVISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_BSS_PLUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_BSS_PLUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_BSS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_BSS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_PERITO_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_PERITO_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_PERITO_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_PERITO_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_CARTERY_MILD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_CARTERY_MILD.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            End If
            If (Original_CARTERY_MODERATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_CARTERY_MODERATE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_CAUTERY_EXTENSIVE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_INCISION_SITE_CORNEOSCLERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_INCISION_SITE_CORNEOSCLERAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_INCISION_SITE_SCLERAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_INCISION_SITE_SCLERAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_INCISION_SIZE_SUPERRIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_INCISION_SIZE_SUPERRIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_INCISION_SIZE_SUPERRIOR_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_INCISION_SIZE_SUPERRIOR_NOTE,String)
            End If
            If (Original_INCISION_SIZE_SUPERRIOR_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_INCISION_SIZE_SUPERRIOR_OTHER,String)
            End If
            If (Original_CAPSULOTOMY_CYSTOTOMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_CAPSULOTOMY_CYSTOTOMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPSULOTOMY_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_CAPSULOTOMY_OTHERS,String)
            End If
            If (Original_NUCLEUS_EXPRESSION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_NUCLEUS_EXPRESSION.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            If (Original_NUCLEUS_LENSLOOP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_NUCLEUS_LENSLOOP.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_NUCLEUS_VISCO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_NUCLEUS_VISCO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_CORTEX_SIMCO_IA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_CORTEX_SIMCO_IA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPSULE_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_CAPSULE_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_CAPSULE_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_CAPSULE_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_CAPSULAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_IOL_IN_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_SULCUS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_IOL_IN_SULCUS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            End If
            If (Original_IOL_IN_AC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_IOL_IN_AC.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            End If
            If (Original_SUTURE_NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(Original_SUTURE_NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(170).Value = Global.System.DBNull.Value
            End If
            If (Original_SUTURE_NYLON_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(Original_SUTURE_NYLON_NOTE,String)
            End If
            If (Original_SUTURE_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(Original_SUTURE_OTHERS,String)
            End If
            If (Original_SUBCONJUN_GENTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(Original_SUBCONJUN_GENTAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(176).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUN_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(Original_SUBCONJUN_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(178).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUN_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(Original_SUBCONJUN_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(180).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUN_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(Original_SUBCONJUN_OTHERS,String)
            End If
            If (Original_TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(Original_TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(184).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(186).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(Original_TOPICAL_OTHERS,String)
            End If
            If (Original_EXTRA_IRRIDECTOMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(Original_EXTRA_IRRIDECTOMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(190).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_LOCATION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(Original_EXTRA_LOCATION,String)
            End If
            If (Original_EXTRA_CAPSULAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(Original_EXTRA_CAPSULAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(194).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_VITREOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(Original_EXTRA_VITREOS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(196).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_ANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(Original_EXTRA_ANTERIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(198).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_AC_HEMORRHAGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(Original_EXTRA_AC_HEMORRHAGE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(200).Value = Global.System.DBNull.Value
            End If
            If (Original_EXTRA_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(Original_EXTRA_OTHER,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(205).Value = CType(ECCE_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MODERATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_CORNEOSCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal CAPSULOTOMY_CYSTOTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULOTOMY_OTHERS As String,  _
                    ByVal NUCLEUS_EXPRESSION As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_LENSLOOP As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_VISCO As Global.System.Nullable(Of Boolean),  _
                    ByVal CORTEX_SIMCO_IA As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON_NOTE As String,  _
                    ByVal SUTURE_OTHERS As String,  _
                    ByVal SUBCONJUN_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal EXTRA_IRRIDECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_LOCATION As String,  _
                    ByVal EXTRA_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_VITREOS As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_AC_HEMORRHAGE As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_ECCE_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BSS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITO_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITO_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CARTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CARTERY_MODERATE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SITE_CORNEOSCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SITE_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal Original_INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal Original_CAPSULOTOMY_CYSTOTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULOTOMY_OTHERS As String,  _
                    ByVal Original_NUCLEUS_EXPRESSION As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUCLEUS_LENSLOOP As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_NUCLEUS_VISCO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CORTEX_SIMCO_IA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAPSULE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUTURE_NYLON_NOTE As String,  _
                    ByVal Original_SUTURE_OTHERS As String,  _
                    ByVal Original_SUBCONJUN_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUN_OTHERS As String,  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_EXTRA_IRRIDECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_LOCATION As String,  _
                    ByVal Original_EXTRA_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_VITREOS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_AC_HEMORRHAGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_EXTRA_OTHER As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Return Me.Update(CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, LEFT_EYE, RIGHT_EYE, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, VIS_HEALON_GV, VIS_IALF, VIS_VISSOAT, VIS_DUOVISE, VIS_HEALON5, VIS_OPHTHALINE, VIS_PROVISE, BSS_PLUS, BSS, PERITO_YES, PERITO_NO, CARTERY_MILD, CARTERY_MODERATE, CAUTERY_EXTENSIVE, INCISION_SITE_CORNEOSCLERAL, INCISION_SITE_SCLERAL, INCISION_SIZE_SUPERRIOR, INCISION_SIZE_SUPERRIOR_NOTE, INCISION_SIZE_SUPERRIOR_OTHER, CAPSULOTOMY_CYSTOTOMY, CAPSULOTOMY_OTHERS, NUCLEUS_EXPRESSION, NUCLEUS_LENSLOOP, NUCLEUS_VISCO, CORTEX_SIMCO_IA, CAPSULE_YES, CAPSULE_NO, IOL_IN_CAPSULAR, IOL_IN_SULCUS, IOL_IN_AC, SUTURE_NYLON, SUTURE_NYLON_NOTE, SUTURE_OTHERS, SUBCONJUN_GENTAL, SUBCONJUN_CEFAZOLIN, SUBCONJUN_DEXAMETHASONE, SUBCONJUN_OTHERS, TOPICAL_PILOCARPINE, TOPICAL_MAXITROL, TOPICAL_OTHERS, EXTRA_IRRIDECTOMY, EXTRA_LOCATION, EXTRA_CAPSULAR, EXTRA_VITREOS, EXTRA_ANTERIOR, EXTRA_AC_HEMORRHAGE, EXTRA_OTHER, SURGEON_SIGNATURE, Original_ECCE_ID, Original_CREATE_DATE, Original_OPERA_NO, Original_PATIENT_NO, Original_PATIENT_NAME, Original_PATIENT_SEX, Original_PATIENT_AGE, Original_START_TIME, Original_LEFT_EYE, Original_RIGHT_EYE, Original_SURGEON, Original_SCRUB, Original_CIRCULATING, Original_ANESTHESIONLOGIST, Original_DIAGNOSIS, Original_S_AN_GA, Original_S_AN_NEURO, Original_S_AN_STANDBY, Original_S_AN_RETROBULBAR, Original_S_AN_PERIBULBAR, Original_S_AN_TOPICAL, Original_VIS_HEALON_GV, Original_VIS_IALF, Original_VIS_VISSOAT, Original_VIS_DUOVISE, Original_VIS_HEALON5, Original_VIS_OPHTHALINE, Original_VIS_PROVISE, Original_BSS_PLUS, Original_BSS, Original_PERITO_YES, Original_PERITO_NO, Original_CARTERY_MILD, Original_CARTERY_MODERATE, Original_CAUTERY_EXTENSIVE, Original_INCISION_SITE_CORNEOSCLERAL, Original_INCISION_SITE_SCLERAL, Original_INCISION_SIZE_SUPERRIOR, Original_INCISION_SIZE_SUPERRIOR_NOTE, Original_INCISION_SIZE_SUPERRIOR_OTHER, Original_CAPSULOTOMY_CYSTOTOMY, Original_CAPSULOTOMY_OTHERS, Original_NUCLEUS_EXPRESSION, Original_NUCLEUS_LENSLOOP, Original_NUCLEUS_VISCO, Original_CORTEX_SIMCO_IA, Original_CAPSULE_YES, Original_CAPSULE_NO, Original_IOL_IN_CAPSULAR, Original_IOL_IN_SULCUS, Original_IOL_IN_AC, Original_SUTURE_NYLON, Original_SUTURE_NYLON_NOTE, Original_SUTURE_OTHERS, Original_SUBCONJUN_GENTAL, Original_SUBCONJUN_CEFAZOLIN, Original_SUBCONJUN_DEXAMETHASONE, Original_SUBCONJUN_OTHERS, Original_TOPICAL_PILOCARPINE, Original_TOPICAL_MAXITROL, Original_TOPICAL_OTHERS, Original_EXTRA_IRRIDECTOMY, Original_EXTRA_LOCATION, Original_EXTRA_CAPSULAR, Original_EXTRA_VITREOS, Original_EXTRA_ANTERIOR, Original_EXTRA_AC_HEMORRHAGE, Original_EXTRA_OTHER, Original_SURGEON_SIGNATURE, Original_ECCE_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertNewECCE( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MODERATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_CORNEOSCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal CAPSULOTOMY_CYSTOTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULOTOMY_OTHERS As String,  _
                    ByVal NUCLEUS_EXPRESSION As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_LENSLOOP As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_VISCO As Global.System.Nullable(Of Boolean),  _
                    ByVal CORTEX_SIMCO_IA As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON_NOTE As String,  _
                    ByVal SUTURE_OTHERS As String,  _
                    ByVal SUBCONJUN_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal EXTRA_IRRIDECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_LOCATION As String,  _
                    ByVal EXTRA_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_VITREOS As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_AC_HEMORRHAGE As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (LEFT_EYE.HasValue = true) Then
                command.Parameters(7).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (RIGHT_EYE.HasValue = true) Then
                command.Parameters(8).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(12).Value = Global.System.DBNull.Value
            Else
                command.Parameters(12).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON_GV.HasValue = true) Then
                command.Parameters(20).Value = CType(VIS_HEALON_GV.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (VIS_IALF.HasValue = true) Then
                command.Parameters(21).Value = CType(VIS_IALF.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (VIS_VISSOAT.HasValue = true) Then
                command.Parameters(22).Value = CType(VIS_VISSOAT.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (VIS_DUOVISE.HasValue = true) Then
                command.Parameters(23).Value = CType(VIS_DUOVISE.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON5.HasValue = true) Then
                command.Parameters(24).Value = CType(VIS_HEALON5.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (VIS_OPHTHALINE.HasValue = true) Then
                command.Parameters(25).Value = CType(VIS_OPHTHALINE.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (VIS_PROVISE.HasValue = true) Then
                command.Parameters(26).Value = CType(VIS_PROVISE.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (BSS_PLUS.HasValue = true) Then
                command.Parameters(27).Value = CType(BSS_PLUS.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (BSS.HasValue = true) Then
                command.Parameters(28).Value = CType(BSS.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (PERITO_YES.HasValue = true) Then
                command.Parameters(29).Value = CType(PERITO_YES.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PERITO_NO.HasValue = true) Then
                command.Parameters(30).Value = CType(PERITO_NO.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CARTERY_MILD.HasValue = true) Then
                command.Parameters(31).Value = CType(CARTERY_MILD.Value,Boolean)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CARTERY_MODERATE.HasValue = true) Then
                command.Parameters(32).Value = CType(CARTERY_MODERATE.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_EXTENSIVE.HasValue = true) Then
                command.Parameters(33).Value = CType(CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SITE_CORNEOSCLERAL.HasValue = true) Then
                command.Parameters(34).Value = CType(INCISION_SITE_CORNEOSCLERAL.Value,Boolean)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SITE_SCLERAL.HasValue = true) Then
                command.Parameters(35).Value = CType(INCISION_SITE_SCLERAL.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SIZE_SUPERRIOR.HasValue = true) Then
                command.Parameters(36).Value = CType(INCISION_SIZE_SUPERRIOR.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SIZE_SUPERRIOR_NOTE Is Nothing) Then
                command.Parameters(37).Value = Global.System.DBNull.Value
            Else
                command.Parameters(37).Value = CType(INCISION_SIZE_SUPERRIOR_NOTE,String)
            End If
            If (INCISION_SIZE_SUPERRIOR_OTHER Is Nothing) Then
                command.Parameters(38).Value = Global.System.DBNull.Value
            Else
                command.Parameters(38).Value = CType(INCISION_SIZE_SUPERRIOR_OTHER,String)
            End If
            If (CAPSULOTOMY_CYSTOTOMY.HasValue = true) Then
                command.Parameters(39).Value = CType(CAPSULOTOMY_CYSTOTOMY.Value,Boolean)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (CAPSULOTOMY_OTHERS Is Nothing) Then
                command.Parameters(40).Value = Global.System.DBNull.Value
            Else
                command.Parameters(40).Value = CType(CAPSULOTOMY_OTHERS,String)
            End If
            If (NUCLEUS_EXPRESSION.HasValue = true) Then
                command.Parameters(41).Value = CType(NUCLEUS_EXPRESSION.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (NUCLEUS_LENSLOOP.HasValue = true) Then
                command.Parameters(42).Value = CType(NUCLEUS_LENSLOOP.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (NUCLEUS_VISCO.HasValue = true) Then
                command.Parameters(43).Value = CType(NUCLEUS_VISCO.Value,Boolean)
            Else
                command.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CORTEX_SIMCO_IA.HasValue = true) Then
                command.Parameters(44).Value = CType(CORTEX_SIMCO_IA.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CAPSULE_YES.HasValue = true) Then
                command.Parameters(45).Value = CType(CAPSULE_YES.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (CAPSULE_NO.HasValue = true) Then
                command.Parameters(46).Value = CType(CAPSULE_NO.Value,Boolean)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_CAPSULAR.HasValue = true) Then
                command.Parameters(47).Value = CType(IOL_IN_CAPSULAR.Value,Boolean)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_SULCUS.HasValue = true) Then
                command.Parameters(48).Value = CType(IOL_IN_SULCUS.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_AC.HasValue = true) Then
                command.Parameters(49).Value = CType(IOL_IN_AC.Value,Boolean)
            Else
                command.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NYLON.HasValue = true) Then
                command.Parameters(50).Value = CType(SUTURE_NYLON.Value,Boolean)
            Else
                command.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NYLON_NOTE Is Nothing) Then
                command.Parameters(51).Value = Global.System.DBNull.Value
            Else
                command.Parameters(51).Value = CType(SUTURE_NYLON_NOTE,String)
            End If
            If (SUTURE_OTHERS Is Nothing) Then
                command.Parameters(52).Value = Global.System.DBNull.Value
            Else
                command.Parameters(52).Value = CType(SUTURE_OTHERS,String)
            End If
            If (SUBCONJUN_GENTAL.HasValue = true) Then
                command.Parameters(53).Value = CType(SUBCONJUN_GENTAL.Value,Boolean)
            Else
                command.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_CEFAZOLIN.HasValue = true) Then
                command.Parameters(54).Value = CType(SUBCONJUN_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(55).Value = CType(SUBCONJUN_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_OTHERS Is Nothing) Then
                command.Parameters(56).Value = Global.System.DBNull.Value
            Else
                command.Parameters(56).Value = CType(SUBCONJUN_OTHERS,String)
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                command.Parameters(57).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(58).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                command.Parameters(59).Value = Global.System.DBNull.Value
            Else
                command.Parameters(59).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (EXTRA_IRRIDECTOMY.HasValue = true) Then
                command.Parameters(60).Value = CType(EXTRA_IRRIDECTOMY.Value,Boolean)
            Else
                command.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_LOCATION Is Nothing) Then
                command.Parameters(61).Value = Global.System.DBNull.Value
            Else
                command.Parameters(61).Value = CType(EXTRA_LOCATION,String)
            End If
            If (EXTRA_CAPSULAR.HasValue = true) Then
                command.Parameters(62).Value = CType(EXTRA_CAPSULAR.Value,Boolean)
            Else
                command.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_VITREOS.HasValue = true) Then
                command.Parameters(63).Value = CType(EXTRA_VITREOS.Value,Boolean)
            Else
                command.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_ANTERIOR.HasValue = true) Then
                command.Parameters(64).Value = CType(EXTRA_ANTERIOR.Value,Boolean)
            Else
                command.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_AC_HEMORRHAGE.HasValue = true) Then
                command.Parameters(65).Value = CType(EXTRA_AC_HEMORRHAGE.Value,Boolean)
            Else
                command.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_OTHER Is Nothing) Then
                command.Parameters(66).Value = Global.System.DBNull.Value
            Else
                command.Parameters(66).Value = CType(EXTRA_OTHER,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(67).Value = Global.System.DBNull.Value
            Else
                command.Parameters(67).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateECCE( _
                    ByVal START_TIME As String,  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON_GV As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_IALF As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_VISSOAT As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_DUOVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_HEALON5 As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_OPHTHALINE As Global.System.Nullable(Of Boolean),  _
                    ByVal VIS_PROVISE As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS_PLUS As Global.System.Nullable(Of Boolean),  _
                    ByVal BSS As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITO_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CARTERY_MODERATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_CORNEOSCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SITE_SCLERAL As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal INCISION_SIZE_SUPERRIOR_NOTE As String,  _
                    ByVal INCISION_SIZE_SUPERRIOR_OTHER As String,  _
                    ByVal CAPSULOTOMY_CYSTOTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULOTOMY_OTHERS As String,  _
                    ByVal NUCLEUS_EXPRESSION As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_LENSLOOP As Global.System.Nullable(Of Boolean),  _
                    ByVal NUCLEUS_VISCO As Global.System.Nullable(Of Boolean),  _
                    ByVal CORTEX_SIMCO_IA As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal CAPSULE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_SULCUS As Global.System.Nullable(Of Boolean),  _
                    ByVal IOL_IN_AC As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SUTURE_NYLON_NOTE As String,  _
                    ByVal SUTURE_OTHERS As String,  _
                    ByVal SUBCONJUN_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUN_OTHERS As String,  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal EXTRA_IRRIDECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_LOCATION As String,  _
                    ByVal EXTRA_CAPSULAR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_VITREOS As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_ANTERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_AC_HEMORRHAGE As Global.System.Nullable(Of Boolean),  _
                    ByVal EXTRA_OTHER As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_ECCE_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (START_TIME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(START_TIME,String)
            End If
            If (LEFT_EYE.HasValue = true) Then
                command.Parameters(1).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (RIGHT_EYE.HasValue = true) Then
                command.Parameters(2).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(8).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(9).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(10).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(11).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(13).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON_GV.HasValue = true) Then
                command.Parameters(14).Value = CType(VIS_HEALON_GV.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (VIS_IALF.HasValue = true) Then
                command.Parameters(15).Value = CType(VIS_IALF.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (VIS_VISSOAT.HasValue = true) Then
                command.Parameters(16).Value = CType(VIS_VISSOAT.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (VIS_DUOVISE.HasValue = true) Then
                command.Parameters(17).Value = CType(VIS_DUOVISE.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (VIS_HEALON5.HasValue = true) Then
                command.Parameters(18).Value = CType(VIS_HEALON5.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (VIS_OPHTHALINE.HasValue = true) Then
                command.Parameters(19).Value = CType(VIS_OPHTHALINE.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (VIS_PROVISE.HasValue = true) Then
                command.Parameters(20).Value = CType(VIS_PROVISE.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (BSS_PLUS.HasValue = true) Then
                command.Parameters(21).Value = CType(BSS_PLUS.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (BSS.HasValue = true) Then
                command.Parameters(22).Value = CType(BSS.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (PERITO_YES.HasValue = true) Then
                command.Parameters(23).Value = CType(PERITO_YES.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (PERITO_NO.HasValue = true) Then
                command.Parameters(24).Value = CType(PERITO_NO.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (CARTERY_MILD.HasValue = true) Then
                command.Parameters(25).Value = CType(CARTERY_MILD.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (CARTERY_MODERATE.HasValue = true) Then
                command.Parameters(26).Value = CType(CARTERY_MODERATE.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_EXTENSIVE.HasValue = true) Then
                command.Parameters(27).Value = CType(CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SITE_CORNEOSCLERAL.HasValue = true) Then
                command.Parameters(28).Value = CType(INCISION_SITE_CORNEOSCLERAL.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SITE_SCLERAL.HasValue = true) Then
                command.Parameters(29).Value = CType(INCISION_SITE_SCLERAL.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SIZE_SUPERRIOR.HasValue = true) Then
                command.Parameters(30).Value = CType(INCISION_SIZE_SUPERRIOR.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (INCISION_SIZE_SUPERRIOR_NOTE Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(INCISION_SIZE_SUPERRIOR_NOTE,String)
            End If
            If (INCISION_SIZE_SUPERRIOR_OTHER Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(INCISION_SIZE_SUPERRIOR_OTHER,String)
            End If
            If (CAPSULOTOMY_CYSTOTOMY.HasValue = true) Then
                command.Parameters(33).Value = CType(CAPSULOTOMY_CYSTOTOMY.Value,Boolean)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CAPSULOTOMY_OTHERS Is Nothing) Then
                command.Parameters(34).Value = Global.System.DBNull.Value
            Else
                command.Parameters(34).Value = CType(CAPSULOTOMY_OTHERS,String)
            End If
            If (NUCLEUS_EXPRESSION.HasValue = true) Then
                command.Parameters(35).Value = CType(NUCLEUS_EXPRESSION.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (NUCLEUS_LENSLOOP.HasValue = true) Then
                command.Parameters(36).Value = CType(NUCLEUS_LENSLOOP.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (NUCLEUS_VISCO.HasValue = true) Then
                command.Parameters(37).Value = CType(NUCLEUS_VISCO.Value,Boolean)
            Else
                command.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (CORTEX_SIMCO_IA.HasValue = true) Then
                command.Parameters(38).Value = CType(CORTEX_SIMCO_IA.Value,Boolean)
            Else
                command.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (CAPSULE_YES.HasValue = true) Then
                command.Parameters(39).Value = CType(CAPSULE_YES.Value,Boolean)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (CAPSULE_NO.HasValue = true) Then
                command.Parameters(40).Value = CType(CAPSULE_NO.Value,Boolean)
            Else
                command.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_CAPSULAR.HasValue = true) Then
                command.Parameters(41).Value = CType(IOL_IN_CAPSULAR.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_SULCUS.HasValue = true) Then
                command.Parameters(42).Value = CType(IOL_IN_SULCUS.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (IOL_IN_AC.HasValue = true) Then
                command.Parameters(43).Value = CType(IOL_IN_AC.Value,Boolean)
            Else
                command.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NYLON.HasValue = true) Then
                command.Parameters(44).Value = CType(SUTURE_NYLON.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (SUTURE_NYLON_NOTE Is Nothing) Then
                command.Parameters(45).Value = Global.System.DBNull.Value
            Else
                command.Parameters(45).Value = CType(SUTURE_NYLON_NOTE,String)
            End If
            If (SUTURE_OTHERS Is Nothing) Then
                command.Parameters(46).Value = Global.System.DBNull.Value
            Else
                command.Parameters(46).Value = CType(SUTURE_OTHERS,String)
            End If
            If (SUBCONJUN_GENTAL.HasValue = true) Then
                command.Parameters(47).Value = CType(SUBCONJUN_GENTAL.Value,Boolean)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_CEFAZOLIN.HasValue = true) Then
                command.Parameters(48).Value = CType(SUBCONJUN_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(49).Value = CType(SUBCONJUN_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUN_OTHERS Is Nothing) Then
                command.Parameters(50).Value = Global.System.DBNull.Value
            Else
                command.Parameters(50).Value = CType(SUBCONJUN_OTHERS,String)
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                command.Parameters(51).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(52).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                command.Parameters(53).Value = Global.System.DBNull.Value
            Else
                command.Parameters(53).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (EXTRA_IRRIDECTOMY.HasValue = true) Then
                command.Parameters(54).Value = CType(EXTRA_IRRIDECTOMY.Value,Boolean)
            Else
                command.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_LOCATION Is Nothing) Then
                command.Parameters(55).Value = Global.System.DBNull.Value
            Else
                command.Parameters(55).Value = CType(EXTRA_LOCATION,String)
            End If
            If (EXTRA_CAPSULAR.HasValue = true) Then
                command.Parameters(56).Value = CType(EXTRA_CAPSULAR.Value,Boolean)
            Else
                command.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_VITREOS.HasValue = true) Then
                command.Parameters(57).Value = CType(EXTRA_VITREOS.Value,Boolean)
            Else
                command.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_ANTERIOR.HasValue = true) Then
                command.Parameters(58).Value = CType(EXTRA_ANTERIOR.Value,Boolean)
            Else
                command.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_AC_HEMORRHAGE.HasValue = true) Then
                command.Parameters(59).Value = CType(EXTRA_AC_HEMORRHAGE.Value,Boolean)
            Else
                command.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (EXTRA_OTHER Is Nothing) Then
                command.Parameters(60).Value = Global.System.DBNull.Value
            Else
                command.Parameters(60).Value = CType(EXTRA_OTHER,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(61).Value = Global.System.DBNull.Value
            Else
                command.Parameters(61).Value = CType(SURGEON_SIGNATURE,String)
            End If
            command.Parameters(62).Value = CType(Original_ECCE_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_OPER_PAR_PLANA_VITRECTOMYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_OPER_PAR_PLANA_VITRECTOMY"
            tableMapping.ColumnMappings.Add("PA_PLANA_ID", "PA_PLANA_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("OPERA_NO", "OPERA_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NO", "PATIENT_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NAME", "PATIENT_NAME")
            tableMapping.ColumnMappings.Add("PATIENT_SEX", "PATIENT_SEX")
            tableMapping.ColumnMappings.Add("PATIENT_AGE", "PATIENT_AGE")
            tableMapping.ColumnMappings.Add("START_TIME", "START_TIME")
            tableMapping.ColumnMappings.Add("SCRUB", "SCRUB")
            tableMapping.ColumnMappings.Add("CIRCULATING", "CIRCULATING")
            tableMapping.ColumnMappings.Add("ANESTHESIONLOGIST", "ANESTHESIONLOGIST")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("S_AN_GA", "S_AN_GA")
            tableMapping.ColumnMappings.Add("S_AN_NEURO", "S_AN_NEURO")
            tableMapping.ColumnMappings.Add("S_AN_STANDBY", "S_AN_STANDBY")
            tableMapping.ColumnMappings.Add("S_AN_RETROBULBAR", "S_AN_RETROBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_PERIBULBAR", "S_AN_PERIBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_TOPICAL", "S_AN_TOPICAL")
            tableMapping.ColumnMappings.Add("PERITOMY", "PERITOMY")
            tableMapping.ColumnMappings.Add("SCLEROTOMISE", "SCLEROTOMISE")
            tableMapping.ColumnMappings.Add("SCLEROTOMISE_NOTE", "SCLEROTOMISE_NOTE")
            tableMapping.ColumnMappings.Add("INFUSION_SIZE", "INFUSION_SIZE")
            tableMapping.ColumnMappings.Add("INFUSION_SIZE_NOTE", "INFUSION_SIZE_NOTE")
            tableMapping.ColumnMappings.Add("CORE_VITRECTOMY", "CORE_VITRECTOMY")
            tableMapping.ColumnMappings.Add("CORE_VITRECTOMY_NOTE1", "CORE_VITRECTOMY_NOTE1")
            tableMapping.ColumnMappings.Add("CORE_VITRECTOMY_NOTE2", "CORE_VITRECTOMY_NOTE2")
            tableMapping.ColumnMappings.Add("PERIPHERAL_VITRECTORMY", "PERIPHERAL_VITRECTORMY")
            tableMapping.ColumnMappings.Add("MEMBRANCE_PEELING", "MEMBRANCE_PEELING")
            tableMapping.ColumnMappings.Add("PERFLUOCARBON", "PERFLUOCARBON")
            tableMapping.ColumnMappings.Add("ENDO", "ENDO")
            tableMapping.ColumnMappings.Add("ENDO_LASER", "ENDO_LASER")
            tableMapping.ColumnMappings.Add("ENDO_MW", "ENDO_MW")
            tableMapping.ColumnMappings.Add("ENDO_SHOTS", "ENDO_SHOTS")
            tableMapping.ColumnMappings.Add("RETINOCRYOPEXY", "RETINOCRYOPEXY")
            tableMapping.ColumnMappings.Add("AIR_FLUID_EXCHANGE", "AIR_FLUID_EXCHANGE")
            tableMapping.ColumnMappings.Add("GAS_EXCHANGE", "GAS_EXCHANGE")
            tableMapping.ColumnMappings.Add("SF6", "SF6")
            tableMapping.ColumnMappings.Add("C6F8", "C6F8")
            tableMapping.ColumnMappings.Add("C6F8_NOTE", "C6F8_NOTE")
            tableMapping.ColumnMappings.Add("SCLERAL_BUCHING", "SCLERAL_BUCHING")
            tableMapping.ColumnMappings.Add("SILICONE_OIL", "SILICONE_OIL")
            tableMapping.ColumnMappings.Add("PAR_NOTE", "PAR_NOTE")
            tableMapping.ColumnMappings.Add("SCLEROTOMY_VICRYL", "SCLEROTOMY_VICRYL")
            tableMapping.ColumnMappings.Add("SCLEROLOMY_NYLON", "SCLEROLOMY_NYLON")
            tableMapping.ColumnMappings.Add("SCLEROLOMY_DEXON", "SCLEROLOMY_DEXON")
            tableMapping.ColumnMappings.Add("CONJUNTIVAL_NYLON", "CONJUNTIVAL_NYLON")
            tableMapping.ColumnMappings.Add("CONJUNTIVAL_VICRYL", "CONJUNTIVAL_VICRYL")
            tableMapping.ColumnMappings.Add("SUB_GENTAL2MG", "SUB_GENTAL2MG")
            tableMapping.ColumnMappings.Add("SUB_CEFAZOLIN50MG", "SUB_CEFAZOLIN50MG")
            tableMapping.ColumnMappings.Add("SUB_DEXAMETHASONE", "SUB_DEXAMETHASONE")
            tableMapping.ColumnMappings.Add("SUB_OTHERS", "SUB_OTHERS")
            tableMapping.ColumnMappings.Add("TOPICAL_MAXITROL", "TOPICAL_MAXITROL")
            tableMapping.ColumnMappings.Add("TOPICAL_PILOCARPINE", "TOPICAL_PILOCARPINE")
            tableMapping.ColumnMappings.Add("TOPICAL_ATROPINE", "TOPICAL_ATROPINE")
            tableMapping.ColumnMappings.Add("TOPICAL_ALPHAGAN", "TOPICAL_ALPHAGAN")
            tableMapping.ColumnMappings.Add("TOPICAL_VIGAMOX", "TOPICAL_VIGAMOX")
            tableMapping.ColumnMappings.Add("TOPICAL_OTHERS", "TOPICAL_OTHERS")
            tableMapping.ColumnMappings.Add("SURGEON_SIGNATURE", "SURGEON_SIGNATURE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[S_OPER_PAR_PLANA_VITRECTOMY] WHERE (([PA_PLANA_ID] = @Original"& _ 
                "_PA_PLANA_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREA"& _ 
                "TE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS "& _ 
                "NULL) OR ([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [PA"& _ 
                "TIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATIE"& _ 
                "NT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_N"& _ 
                "AME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX]"& _ 
                " = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS NU"& _ 
                "LL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AND"& _ 
                " [START_TIME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_S"& _ 
                "CRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_CIRC"& _ 
                "ULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCULATING"& _ 
                ")) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ([ANE"& _ 
                "STHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 AND "& _ 
                "[DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_S_AN_"& _ 
                "GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AND ((@IsNull_"& _ 
                "S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @Original_S_AN_NEURO"& _ 
                ")) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_AN_STANDBY]"& _ 
                " = @Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_AN_RETROBU"& _ 
                "LBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBULBAR)) AND ((@IsNu"& _ 
                "ll_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBULBAR] = @O"& _ 
                "riginal_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOPICAL] IS N"& _ 
                "ULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNull_PERITOMY = 1 AN"& _ 
                "D [PERITOMY] IS NULL) OR ([PERITOMY] = @Original_PERITOMY)) AND ((@IsNull_SCLERO"& _ 
                "TOMISE = 1 AND [SCLEROTOMISE] IS NULL) OR ([SCLEROTOMISE] = @Original_SCLEROTOMI"& _ 
                "SE)) AND ((@IsNull_SCLEROTOMISE_NOTE = 1 AND [SCLEROTOMISE_NOTE] IS NULL) OR ([S"& _ 
                "CLEROTOMISE_NOTE] = @Original_SCLEROTOMISE_NOTE)) AND ((@IsNull_INFUSION_SIZE = "& _ 
                "1 AND [INFUSION_SIZE] IS NULL) OR ([INFUSION_SIZE] = @Original_INFUSION_SIZE)) A"& _ 
                "ND ((@IsNull_INFUSION_SIZE_NOTE = 1 AND [INFUSION_SIZE_NOTE] IS NULL) OR ([INFUS"& _ 
                "ION_SIZE_NOTE] = @Original_INFUSION_SIZE_NOTE)) AND ((@IsNull_CORE_VITRECTOMY = "& _ 
                "1 AND [CORE_VITRECTOMY] IS NULL) OR ([CORE_VITRECTOMY] = @Original_CORE_VITRECTO"& _ 
                "MY)) AND ((@IsNull_CORE_VITRECTOMY_NOTE1 = 1 AND [CORE_VITRECTOMY_NOTE1] IS NULL"& _ 
                ") OR ([CORE_VITRECTOMY_NOTE1] = @Original_CORE_VITRECTOMY_NOTE1)) AND ((@IsNull_"& _ 
                "CORE_VITRECTOMY_NOTE2 = 1 AND [CORE_VITRECTOMY_NOTE2] IS NULL) OR ([CORE_VITRECT"& _ 
                "OMY_NOTE2] = @Original_CORE_VITRECTOMY_NOTE2)) AND ((@IsNull_PERIPHERAL_VITRECTO"& _ 
                "RMY = 1 AND [PERIPHERAL_VITRECTORMY] IS NULL) OR ([PERIPHERAL_VITRECTORMY] = @Or"& _ 
                "iginal_PERIPHERAL_VITRECTORMY)) AND ((@IsNull_MEMBRANCE_PEELING = 1 AND [MEMBRAN"& _ 
                "CE_PEELING] IS NULL) OR ([MEMBRANCE_PEELING] = @Original_MEMBRANCE_PEELING)) AND"& _ 
                " ((@IsNull_PERFLUOCARBON = 1 AND [PERFLUOCARBON] IS NULL) OR ([PERFLUOCARBON] = "& _ 
                "@Original_PERFLUOCARBON)) AND ((@IsNull_ENDO = 1 AND [ENDO] IS NULL) OR ([ENDO] "& _ 
                "= @Original_ENDO)) AND ((@IsNull_ENDO_LASER = 1 AND [ENDO_LASER] IS NULL) OR ([E"& _ 
                "NDO_LASER] = @Original_ENDO_LASER)) AND ((@IsNull_ENDO_MW = 1 AND [ENDO_MW] IS N"& _ 
                "ULL) OR ([ENDO_MW] = @Original_ENDO_MW)) AND ((@IsNull_ENDO_SHOTS = 1 AND [ENDO_"& _ 
                "SHOTS] IS NULL) OR ([ENDO_SHOTS] = @Original_ENDO_SHOTS)) AND ((@IsNull_RETINOCR"& _ 
                "YOPEXY = 1 AND [RETINOCRYOPEXY] IS NULL) OR ([RETINOCRYOPEXY] = @Original_RETINO"& _ 
                "CRYOPEXY)) AND ((@IsNull_AIR_FLUID_EXCHANGE = 1 AND [AIR_FLUID_EXCHANGE] IS NULL"& _ 
                ") OR ([AIR_FLUID_EXCHANGE] = @Original_AIR_FLUID_EXCHANGE)) AND ((@IsNull_GAS_EX"& _ 
                "CHANGE = 1 AND [GAS_EXCHANGE] IS NULL) OR ([GAS_EXCHANGE] = @Original_GAS_EXCHAN"& _ 
                "GE)) AND ((@IsNull_SF6 = 1 AND [SF6] IS NULL) OR ([SF6] = @Original_SF6)) AND (("& _ 
                "@IsNull_C6F8 = 1 AND [C6F8] IS NULL) OR ([C6F8] = @Original_C6F8)) AND ((@IsNull"& _ 
                "_C6F8_NOTE = 1 AND [C6F8_NOTE] IS NULL) OR ([C6F8_NOTE] = @Original_C6F8_NOTE)) "& _ 
                "AND ((@IsNull_SCLERAL_BUCHING = 1 AND [SCLERAL_BUCHING] IS NULL) OR ([SCLERAL_BU"& _ 
                "CHING] = @Original_SCLERAL_BUCHING)) AND ((@IsNull_SILICONE_OIL = 1 AND [SILICON"& _ 
                "E_OIL] IS NULL) OR ([SILICONE_OIL] = @Original_SILICONE_OIL)) AND ((@IsNull_PAR_"& _ 
                "NOTE = 1 AND [PAR_NOTE] IS NULL) OR ([PAR_NOTE] = @Original_PAR_NOTE)) AND ((@Is"& _ 
                "Null_SCLEROTOMY_VICRYL = 1 AND [SCLEROTOMY_VICRYL] IS NULL) OR ([SCLEROTOMY_VICR"& _ 
                "YL] = @Original_SCLEROTOMY_VICRYL)) AND ((@IsNull_SCLEROLOMY_NYLON = 1 AND [SCLE"& _ 
                "ROLOMY_NYLON] IS NULL) OR ([SCLEROLOMY_NYLON] = @Original_SCLEROLOMY_NYLON)) AND"& _ 
                " ((@IsNull_SCLEROLOMY_DEXON = 1 AND [SCLEROLOMY_DEXON] IS NULL) OR ([SCLEROLOMY_"& _ 
                "DEXON] = @Original_SCLEROLOMY_DEXON)) AND ((@IsNull_CONJUNTIVAL_NYLON = 1 AND [C"& _ 
                "ONJUNTIVAL_NYLON] IS NULL) OR ([CONJUNTIVAL_NYLON] = @Original_CONJUNTIVAL_NYLON"& _ 
                ")) AND ((@IsNull_CONJUNTIVAL_VICRYL = 1 AND [CONJUNTIVAL_VICRYL] IS NULL) OR ([C"& _ 
                "ONJUNTIVAL_VICRYL] = @Original_CONJUNTIVAL_VICRYL)) AND ((@IsNull_SUB_GENTAL2MG "& _ 
                "= 1 AND [SUB_GENTAL2MG] IS NULL) OR ([SUB_GENTAL2MG] = @Original_SUB_GENTAL2MG))"& _ 
                " AND ((@IsNull_SUB_CEFAZOLIN50MG = 1 AND [SUB_CEFAZOLIN50MG] IS NULL) OR ([SUB_C"& _ 
                "EFAZOLIN50MG] = @Original_SUB_CEFAZOLIN50MG)) AND ((@IsNull_SUB_DEXAMETHASONE = "& _ 
                "1 AND [SUB_DEXAMETHASONE] IS NULL) OR ([SUB_DEXAMETHASONE] = @Original_SUB_DEXAM"& _ 
                "ETHASONE)) AND ((@IsNull_SUB_OTHERS = 1 AND [SUB_OTHERS] IS NULL) OR ([SUB_OTHER"& _ 
                "S] = @Original_SUB_OTHERS)) AND ((@IsNull_TOPICAL_MAXITROL = 1 AND [TOPICAL_MAXI"& _ 
                "TROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Original_TOPICAL_MAXITROL)) AND ((@IsNu"& _ 
                "ll_TOPICAL_PILOCARPINE = 1 AND [TOPICAL_PILOCARPINE] IS NULL) OR ([TOPICAL_PILOC"& _ 
                "ARPINE] = @Original_TOPICAL_PILOCARPINE)) AND ((@IsNull_TOPICAL_ATROPINE = 1 AND"& _ 
                " [TOPICAL_ATROPINE] IS NULL) OR ([TOPICAL_ATROPINE] = @Original_TOPICAL_ATROPINE"& _ 
                ")) AND ((@IsNull_TOPICAL_ALPHAGAN = 1 AND [TOPICAL_ALPHAGAN] IS NULL) OR ([TOPIC"& _ 
                "AL_ALPHAGAN] = @Original_TOPICAL_ALPHAGAN)) AND ((@IsNull_TOPICAL_VIGAMOX = 1 AN"& _ 
                "D [TOPICAL_VIGAMOX] IS NULL) OR ([TOPICAL_VIGAMOX] = @Original_TOPICAL_VIGAMOX))"& _ 
                " AND ((@IsNull_TOPICAL_OTHERS = 1 AND [TOPICAL_OTHERS] IS NULL) OR ([TOPICAL_OTH"& _ 
                "ERS] = @Original_TOPICAL_OTHERS)) AND ((@IsNull_SURGEON_SIGNATURE = 1 AND [SURGE"& _ 
                "ON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE] = @Original_SURGEON_SIGNATURE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PA_PLANA_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PA_PLANA_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERITOMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITOMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERITOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITOMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROTOMISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROTOMISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROTOMISE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROTOMISE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INFUSION_SIZE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INFUSION_SIZE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INFUSION_SIZE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INFUSION_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORE_VITRECTOMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORE_VITRECTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORE_VITRECTOMY_NOTE1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORE_VITRECTOMY_NOTE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORE_VITRECTOMY_NOTE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORE_VITRECTOMY_NOTE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERIPHERAL_VITRECTORMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIPHERAL_VITRECTORMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERIPHERAL_VITRECTORMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIPHERAL_VITRECTORMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MEMBRANCE_PEELING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBRANCE_PEELING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MEMBRANCE_PEELING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBRANCE_PEELING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERFLUOCARBON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFLUOCARBON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERFLUOCARBON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFLUOCARBON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENDO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENDO_LASER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_LASER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENDO_LASER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_LASER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENDO_MW", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_MW", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENDO_MW", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_MW", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENDO_SHOTS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_SHOTS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENDO_SHOTS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_SHOTS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RETINOCRYOPEXY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETINOCRYOPEXY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RETINOCRYOPEXY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETINOCRYOPEXY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AIR_FLUID_EXCHANGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AIR_FLUID_EXCHANGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AIR_FLUID_EXCHANGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AIR_FLUID_EXCHANGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GAS_EXCHANGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAS_EXCHANGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GAS_EXCHANGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAS_EXCHANGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SF6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SF6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SF6", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SF6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C6F8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C6F8", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C6F8_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C6F8_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_BUCHING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_BUCHING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_BUCHING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_BUCHING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SILICONE_OIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SILICONE_OIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SILICONE_OIL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SILICONE_OIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROTOMY_VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMY_VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROTOMY_VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMY_VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROLOMY_NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROLOMY_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROLOMY_DEXON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_DEXON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROLOMY_DEXON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_DEXON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNTIVAL_NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNTIVAL_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNTIVAL_VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNTIVAL_VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_GENTAL2MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_ALPHAGAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ALPHAGAN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_ALPHAGAN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ALPHAGAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[S_OPER_PAR_PLANA_VITRECTOMY] ([CREATE_DATE], [OPERA_NO], [PATI"& _ 
                "ENT_NO], [PATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SCRUB], [C"& _ 
                "IRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_AN_GA], [S_AN_NEURO], [S_AN_ST"& _ 
                "ANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TOPICAL], [PERITOMY], [SCLE"& _ 
                "ROTOMISE], [SCLEROTOMISE_NOTE], [INFUSION_SIZE], [INFUSION_SIZE_NOTE], [CORE_VIT"& _ 
                "RECTOMY], [CORE_VITRECTOMY_NOTE1], [CORE_VITRECTOMY_NOTE2], [PERIPHERAL_VITRECTO"& _ 
                "RMY], [MEMBRANCE_PEELING], [PERFLUOCARBON], [ENDO], [ENDO_LASER], [ENDO_MW], [EN"& _ 
                "DO_SHOTS], [RETINOCRYOPEXY], [AIR_FLUID_EXCHANGE], [GAS_EXCHANGE], [SF6], [C6F8]"& _ 
                ", [C6F8_NOTE], [SCLERAL_BUCHING], [SILICONE_OIL], [PAR_NOTE], [SCLEROTOMY_VICRYL"& _ 
                "], [SCLEROLOMY_NYLON], [SCLEROLOMY_DEXON], [CONJUNTIVAL_NYLON], [CONJUNTIVAL_VIC"& _ 
                "RYL], [SUB_GENTAL2MG], [SUB_CEFAZOLIN50MG], [SUB_DEXAMETHASONE], [SUB_OTHERS], ["& _ 
                "TOPICAL_MAXITROL], [TOPICAL_PILOCARPINE], [TOPICAL_ATROPINE], [TOPICAL_ALPHAGAN]"& _ 
                ", [TOPICAL_VIGAMOX], [TOPICAL_OTHERS], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE"& _ 
                ", @OPERA_NO, @PATIENT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME"& _ 
                ", @SCRUB, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_AN_GA, @S_AN_NEURO, @"& _ 
                "S_AN_STANDBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @PERITOMY, @SC"& _ 
                "LEROTOMISE, @SCLEROTOMISE_NOTE, @INFUSION_SIZE, @INFUSION_SIZE_NOTE, @CORE_VITRE"& _ 
                "CTOMY, @CORE_VITRECTOMY_NOTE1, @CORE_VITRECTOMY_NOTE2, @PERIPHERAL_VITRECTORMY, "& _ 
                "@MEMBRANCE_PEELING, @PERFLUOCARBON, @ENDO, @ENDO_LASER, @ENDO_MW, @ENDO_SHOTS, @"& _ 
                "RETINOCRYOPEXY, @AIR_FLUID_EXCHANGE, @GAS_EXCHANGE, @SF6, @C6F8, @C6F8_NOTE, @SC"& _ 
                "LERAL_BUCHING, @SILICONE_OIL, @PAR_NOTE, @SCLEROTOMY_VICRYL, @SCLEROLOMY_NYLON, "& _ 
                "@SCLEROLOMY_DEXON, @CONJUNTIVAL_NYLON, @CONJUNTIVAL_VICRYL, @SUB_GENTAL2MG, @SUB"& _ 
                "_CEFAZOLIN50MG, @SUB_DEXAMETHASONE, @SUB_OTHERS, @TOPICAL_MAXITROL, @TOPICAL_PIL"& _ 
                "OCARPINE, @TOPICAL_ATROPINE, @TOPICAL_ALPHAGAN, @TOPICAL_VIGAMOX, @TOPICAL_OTHER"& _ 
                "S, @SURGEON_SIGNATURE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PA_PLANA_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, "& _ 
                "PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SCRUB, CIRCULATING, ANESTHES"& _ 
                "IONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_"& _ 
                "PERIBULBAR, S_AN_TOPICAL, PERITOMY, SCLEROTOMISE, SCLEROTOMISE_NOTE, INFUSION_SI"& _ 
                "ZE, INFUSION_SIZE_NOTE, CORE_VITRECTOMY, CORE_VITRECTOMY_NOTE1, CORE_VITRECTOMY_"& _ 
                "NOTE2, PERIPHERAL_VITRECTORMY, MEMBRANCE_PEELING, PERFLUOCARBON, ENDO, ENDO_LASE"& _ 
                "R, ENDO_MW, ENDO_SHOTS, RETINOCRYOPEXY, AIR_FLUID_EXCHANGE, GAS_EXCHANGE, SF6, C"& _ 
                "6F8, C6F8_NOTE, SCLERAL_BUCHING, SILICONE_OIL, PAR_NOTE, SCLEROTOMY_VICRYL, SCLE"& _ 
                "ROLOMY_NYLON, SCLEROLOMY_DEXON, CONJUNTIVAL_NYLON, CONJUNTIVAL_VICRYL, SUB_GENTA"& _ 
                "L2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE, SUB_OTHERS, TOPICAL_MAXITROL, TOPICA"& _ 
                "L_PILOCARPINE, TOPICAL_ATROPINE, TOPICAL_ALPHAGAN, TOPICAL_VIGAMOX, TOPICAL_OTHE"& _ 
                "RS, SURGEON_SIGNATURE FROM S_OPER_PAR_PLANA_VITRECTOMY WHERE (PA_PLANA_ID = SCOP"& _ 
                "E_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMISE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INFUSION_SIZE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INFUSION_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY_NOTE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY_NOTE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERIPHERAL_VITRECTORMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIPHERAL_VITRECTORMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMBRANCE_PEELING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBRANCE_PEELING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERFLUOCARBON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFLUOCARBON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_LASER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_LASER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_MW", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_MW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_SHOTS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_SHOTS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETINOCRYOPEXY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETINOCRYOPEXY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AIR_FLUID_EXCHANGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AIR_FLUID_EXCHANGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GAS_EXCHANGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAS_EXCHANGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SF6", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SF6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C6F8", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C6F8_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_BUCHING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_BUCHING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SILICONE_OIL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SILICONE_OIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMY_VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMY_VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROLOMY_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROLOMY_DEXON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_DEXON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNTIVAL_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNTIVAL_VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ALPHAGAN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ALPHAGAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_OPER_PAR_PLANA_VITRECTOMY] SET [CREATE_DATE] = @CREATE_DATE, [OPE"& _ 
                "RA_NO] = @OPERA_NO, [PATIENT_NO] = @PATIENT_NO, [PATIENT_NAME] = @PATIENT_NAME, "& _ 
                "[PATIENT_SEX] = @PATIENT_SEX, [PATIENT_AGE] = @PATIENT_AGE, [START_TIME] = @STAR"& _ 
                "T_TIME, [SCRUB] = @SCRUB, [CIRCULATING] = @CIRCULATING, [ANESTHESIONLOGIST] = @A"& _ 
                "NESTHESIONLOGIST, [DIAGNOSIS] = @DIAGNOSIS, [S_AN_GA] = @S_AN_GA, [S_AN_NEURO] ="& _ 
                " @S_AN_NEURO, [S_AN_STANDBY] = @S_AN_STANDBY, [S_AN_RETROBULBAR] = @S_AN_RETROBU"& _ 
                "LBAR, [S_AN_PERIBULBAR] = @S_AN_PERIBULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL, [PER"& _ 
                "ITOMY] = @PERITOMY, [SCLEROTOMISE] = @SCLEROTOMISE, [SCLEROTOMISE_NOTE] = @SCLER"& _ 
                "OTOMISE_NOTE, [INFUSION_SIZE] = @INFUSION_SIZE, [INFUSION_SIZE_NOTE] = @INFUSION"& _ 
                "_SIZE_NOTE, [CORE_VITRECTOMY] = @CORE_VITRECTOMY, [CORE_VITRECTOMY_NOTE1] = @COR"& _ 
                "E_VITRECTOMY_NOTE1, [CORE_VITRECTOMY_NOTE2] = @CORE_VITRECTOMY_NOTE2, [PERIPHERA"& _ 
                "L_VITRECTORMY] = @PERIPHERAL_VITRECTORMY, [MEMBRANCE_PEELING] = @MEMBRANCE_PEELI"& _ 
                "NG, [PERFLUOCARBON] = @PERFLUOCARBON, [ENDO] = @ENDO, [ENDO_LASER] = @ENDO_LASER"& _ 
                ", [ENDO_MW] = @ENDO_MW, [ENDO_SHOTS] = @ENDO_SHOTS, [RETINOCRYOPEXY] = @RETINOCR"& _ 
                "YOPEXY, [AIR_FLUID_EXCHANGE] = @AIR_FLUID_EXCHANGE, [GAS_EXCHANGE] = @GAS_EXCHAN"& _ 
                "GE, [SF6] = @SF6, [C6F8] = @C6F8, [C6F8_NOTE] = @C6F8_NOTE, [SCLERAL_BUCHING] = "& _ 
                "@SCLERAL_BUCHING, [SILICONE_OIL] = @SILICONE_OIL, [PAR_NOTE] = @PAR_NOTE, [SCLER"& _ 
                "OTOMY_VICRYL] = @SCLEROTOMY_VICRYL, [SCLEROLOMY_NYLON] = @SCLEROLOMY_NYLON, [SCL"& _ 
                "EROLOMY_DEXON] = @SCLEROLOMY_DEXON, [CONJUNTIVAL_NYLON] = @CONJUNTIVAL_NYLON, [C"& _ 
                "ONJUNTIVAL_VICRYL] = @CONJUNTIVAL_VICRYL, [SUB_GENTAL2MG] = @SUB_GENTAL2MG, [SUB"& _ 
                "_CEFAZOLIN50MG] = @SUB_CEFAZOLIN50MG, [SUB_DEXAMETHASONE] = @SUB_DEXAMETHASONE, "& _ 
                "[SUB_OTHERS] = @SUB_OTHERS, [TOPICAL_MAXITROL] = @TOPICAL_MAXITROL, [TOPICAL_PIL"& _ 
                "OCARPINE] = @TOPICAL_PILOCARPINE, [TOPICAL_ATROPINE] = @TOPICAL_ATROPINE, [TOPIC"& _ 
                "AL_ALPHAGAN] = @TOPICAL_ALPHAGAN, [TOPICAL_VIGAMOX] = @TOPICAL_VIGAMOX, [TOPICAL"& _ 
                "_OTHERS] = @TOPICAL_OTHERS, [SURGEON_SIGNATURE] = @SURGEON_SIGNATURE WHERE (([PA"& _ 
                "_PLANA_ID] = @Original_PA_PLANA_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DA"& _ 
                "TE] IS NULL) OR ([CREATE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO "& _ 
                "= 1 AND [OPERA_NO] IS NULL) OR ([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_"& _ 
                "PATIENT_NO = 1 AND [PATIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO"& _ 
                ")) AND ((@IsNull_PATIENT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME]"& _ 
                " = @Original_PATIENT_NAME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS N"& _ 
                "ULL) OR ([PATIENT_SEX] = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 A"& _ 
                "ND [PATIENT_AGE] IS NULL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsN"& _ 
                "ull_START_TIME = 1 AND [START_TIME] IS NULL) OR ([START_TIME] = @Original_START_"& _ 
                "TIME)) AND ((@IsNull_SCRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRU"& _ 
                "B)) AND ((@IsNull_CIRCULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] ="& _ 
                " @Original_CIRCULATING)) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOG"& _ 
                "IST] IS NULL) OR ([ANESTHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsN"& _ 
                "ull_DIAGNOSIS = 1 AND [DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS"& _ 
                ")) AND ((@IsNull_S_AN_GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_"& _ 
                "AN_GA)) AND ((@IsNull_S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] "& _ 
                "= @Original_S_AN_NEURO)) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NU"& _ 
                "LL) OR ([S_AN_STANDBY] = @Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR"& _ 
                " = 1 AND [S_AN_RETROBULBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RET"& _ 
                "ROBULBAR)) AND ((@IsNull_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ("& _ 
                "[S_AN_PERIBULBAR] = @Original_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 A"& _ 
                "ND [S_AN_TOPICAL] IS NULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@"& _ 
                "IsNull_PERITOMY = 1 AND [PERITOMY] IS NULL) OR ([PERITOMY] = @Original_PERITOMY)"& _ 
                ") AND ((@IsNull_SCLEROTOMISE = 1 AND [SCLEROTOMISE] IS NULL) OR ([SCLEROTOMISE] "& _ 
                "= @Original_SCLEROTOMISE)) AND ((@IsNull_SCLEROTOMISE_NOTE = 1 AND [SCLEROTOMISE"& _ 
                "_NOTE] IS NULL) OR ([SCLEROTOMISE_NOTE] = @Original_SCLEROTOMISE_NOTE)) AND ((@I"& _ 
                "sNull_INFUSION_SIZE = 1 AND [INFUSION_SIZE] IS NULL) OR ([INFUSION_SIZE] = @Orig"& _ 
                "inal_INFUSION_SIZE)) AND ((@IsNull_INFUSION_SIZE_NOTE = 1 AND [INFUSION_SIZE_NOT"& _ 
                "E] IS NULL) OR ([INFUSION_SIZE_NOTE] = @Original_INFUSION_SIZE_NOTE)) AND ((@IsN"& _ 
                "ull_CORE_VITRECTOMY = 1 AND [CORE_VITRECTOMY] IS NULL) OR ([CORE_VITRECTOMY] = @"& _ 
                "Original_CORE_VITRECTOMY)) AND ((@IsNull_CORE_VITRECTOMY_NOTE1 = 1 AND [CORE_VIT"& _ 
                "RECTOMY_NOTE1] IS NULL) OR ([CORE_VITRECTOMY_NOTE1] = @Original_CORE_VITRECTOMY_"& _ 
                "NOTE1)) AND ((@IsNull_CORE_VITRECTOMY_NOTE2 = 1 AND [CORE_VITRECTOMY_NOTE2] IS N"& _ 
                "ULL) OR ([CORE_VITRECTOMY_NOTE2] = @Original_CORE_VITRECTOMY_NOTE2)) AND ((@IsNu"& _ 
                "ll_PERIPHERAL_VITRECTORMY = 1 AND [PERIPHERAL_VITRECTORMY] IS NULL) OR ([PERIPHE"& _ 
                "RAL_VITRECTORMY] = @Original_PERIPHERAL_VITRECTORMY)) AND ((@IsNull_MEMBRANCE_PE"& _ 
                "ELING = 1 AND [MEMBRANCE_PEELING] IS NULL) OR ([MEMBRANCE_PEELING] = @Original_M"& _ 
                "EMBRANCE_PEELING)) AND ((@IsNull_PERFLUOCARBON = 1 AND [PERFLUOCARBON] IS NULL) "& _ 
                "OR ([PERFLUOCARBON] = @Original_PERFLUOCARBON)) AND ((@IsNull_ENDO = 1 AND [ENDO"& _ 
                "] IS NULL) OR ([ENDO] = @Original_ENDO)) AND ((@IsNull_ENDO_LASER = 1 AND [ENDO_"& _ 
                "LASER] IS NULL) OR ([ENDO_LASER] = @Original_ENDO_LASER)) AND ((@IsNull_ENDO_MW "& _ 
                "= 1 AND [ENDO_MW] IS NULL) OR ([ENDO_MW] = @Original_ENDO_MW)) AND ((@IsNull_END"& _ 
                "O_SHOTS = 1 AND [ENDO_SHOTS] IS NULL) OR ([ENDO_SHOTS] = @Original_ENDO_SHOTS)) "& _ 
                "AND ((@IsNull_RETINOCRYOPEXY = 1 AND [RETINOCRYOPEXY] IS NULL) OR ([RETINOCRYOPE"& _ 
                "XY] = @Original_RETINOCRYOPEXY)) AND ((@IsNull_AIR_FLUID_EXCHANGE = 1 AND [AIR_F"& _ 
                "LUID_EXCHANGE] IS NULL) OR ([AIR_FLUID_EXCHANGE] = @Original_AIR_FLUID_EXCHANGE)"& _ 
                ") AND ((@IsNull_GAS_EXCHANGE = 1 AND [GAS_EXCHANGE] IS NULL) OR ([GAS_EXCHANGE] "& _ 
                "= @Original_GAS_EXCHANGE)) AND ((@IsNull_SF6 = 1 AND [SF6] IS NULL) OR ([SF6] = "& _ 
                "@Original_SF6)) AND ((@IsNull_C6F8 = 1 AND [C6F8] IS NULL) OR ([C6F8] = @Origina"& _ 
                "l_C6F8)) AND ((@IsNull_C6F8_NOTE = 1 AND [C6F8_NOTE] IS NULL) OR ([C6F8_NOTE] = "& _ 
                "@Original_C6F8_NOTE)) AND ((@IsNull_SCLERAL_BUCHING = 1 AND [SCLERAL_BUCHING] IS"& _ 
                " NULL) OR ([SCLERAL_BUCHING] = @Original_SCLERAL_BUCHING)) AND ((@IsNull_SILICON"& _ 
                "E_OIL = 1 AND [SILICONE_OIL] IS NULL) OR ([SILICONE_OIL] = @Original_SILICONE_OI"& _ 
                "L)) AND ((@IsNull_PAR_NOTE = 1 AND [PAR_NOTE] IS NULL) OR ([PAR_NOTE] = @Origina"& _ 
                "l_PAR_NOTE)) AND ((@IsNull_SCLEROTOMY_VICRYL = 1 AND [SCLEROTOMY_VICRYL] IS NULL"& _ 
                ") OR ([SCLEROTOMY_VICRYL] = @Original_SCLEROTOMY_VICRYL)) AND ((@IsNull_SCLEROLO"& _ 
                "MY_NYLON = 1 AND [SCLEROLOMY_NYLON] IS NULL) OR ([SCLEROLOMY_NYLON] = @Original_"& _ 
                "SCLEROLOMY_NYLON)) AND ((@IsNull_SCLEROLOMY_DEXON = 1 AND [SCLEROLOMY_DEXON] IS "& _ 
                "NULL) OR ([SCLEROLOMY_DEXON] = @Original_SCLEROLOMY_DEXON)) AND ((@IsNull_CONJUN"& _ 
                "TIVAL_NYLON = 1 AND [CONJUNTIVAL_NYLON] IS NULL) OR ([CONJUNTIVAL_NYLON] = @Orig"& _ 
                "inal_CONJUNTIVAL_NYLON)) AND ((@IsNull_CONJUNTIVAL_VICRYL = 1 AND [CONJUNTIVAL_V"& _ 
                "ICRYL] IS NULL) OR ([CONJUNTIVAL_VICRYL] = @Original_CONJUNTIVAL_VICRYL)) AND (("& _ 
                "@IsNull_SUB_GENTAL2MG = 1 AND [SUB_GENTAL2MG] IS NULL) OR ([SUB_GENTAL2MG] = @Or"& _ 
                "iginal_SUB_GENTAL2MG)) AND ((@IsNull_SUB_CEFAZOLIN50MG = 1 AND [SUB_CEFAZOLIN50M"& _ 
                "G] IS NULL) OR ([SUB_CEFAZOLIN50MG] = @Original_SUB_CEFAZOLIN50MG)) AND ((@IsNul"& _ 
                "l_SUB_DEXAMETHASONE = 1 AND [SUB_DEXAMETHASONE] IS NULL) OR ([SUB_DEXAMETHASONE]"& _ 
                " = @Original_SUB_DEXAMETHASONE)) AND ((@IsNull_SUB_OTHERS = 1 AND [SUB_OTHERS] I"& _ 
                "S NULL) OR ([SUB_OTHERS] = @Original_SUB_OTHERS)) AND ((@IsNull_TOPICAL_MAXITROL"& _ 
                " = 1 AND [TOPICAL_MAXITROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Original_TOPICAL_"& _ 
                "MAXITROL)) AND ((@IsNull_TOPICAL_PILOCARPINE = 1 AND [TOPICAL_PILOCARPINE] IS NU"& _ 
                "LL) OR ([TOPICAL_PILOCARPINE] = @Original_TOPICAL_PILOCARPINE)) AND ((@IsNull_TO"& _ 
                "PICAL_ATROPINE = 1 AND [TOPICAL_ATROPINE] IS NULL) OR ([TOPICAL_ATROPINE] = @Ori"& _ 
                "ginal_TOPICAL_ATROPINE)) AND ((@IsNull_TOPICAL_ALPHAGAN = 1 AND [TOPICAL_ALPHAGA"& _ 
                "N] IS NULL) OR ([TOPICAL_ALPHAGAN] = @Original_TOPICAL_ALPHAGAN)) AND ((@IsNull_"& _ 
                "TOPICAL_VIGAMOX = 1 AND [TOPICAL_VIGAMOX] IS NULL) OR ([TOPICAL_VIGAMOX] = @Orig"& _ 
                "inal_TOPICAL_VIGAMOX)) AND ((@IsNull_TOPICAL_OTHERS = 1 AND [TOPICAL_OTHERS] IS "& _ 
                "NULL) OR ([TOPICAL_OTHERS] = @Original_TOPICAL_OTHERS)) AND ((@IsNull_SURGEON_SI"& _ 
                "GNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE] = @Original"& _ 
                "_SURGEON_SIGNATURE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PA_PLANA_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, P"& _ 
                "ATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SCRUB, CIRCULATING, ANESTHESI"& _ 
                "ONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_P"& _ 
                "ERIBULBAR, S_AN_TOPICAL, PERITOMY, SCLEROTOMISE, SCLEROTOMISE_NOTE, INFUSION_SIZ"& _ 
                "E, INFUSION_SIZE_NOTE, CORE_VITRECTOMY, CORE_VITRECTOMY_NOTE1, CORE_VITRECTOMY_N"& _ 
                "OTE2, PERIPHERAL_VITRECTORMY, MEMBRANCE_PEELING, PERFLUOCARBON, ENDO, ENDO_LASER"& _ 
                ", ENDO_MW, ENDO_SHOTS, RETINOCRYOPEXY, AIR_FLUID_EXCHANGE, GAS_EXCHANGE, SF6, C6"& _ 
                "F8, C6F8_NOTE, SCLERAL_BUCHING, SILICONE_OIL, PAR_NOTE, SCLEROTOMY_VICRYL, SCLER"& _ 
                "OLOMY_NYLON, SCLEROLOMY_DEXON, CONJUNTIVAL_NYLON, CONJUNTIVAL_VICRYL, SUB_GENTAL"& _ 
                "2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE, SUB_OTHERS, TOPICAL_MAXITROL, TOPICAL"& _ 
                "_PILOCARPINE, TOPICAL_ATROPINE, TOPICAL_ALPHAGAN, TOPICAL_VIGAMOX, TOPICAL_OTHER"& _ 
                "S, SURGEON_SIGNATURE FROM S_OPER_PAR_PLANA_VITRECTOMY WHERE (PA_PLANA_ID = @PA_P"& _ 
                "LANA_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMISE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INFUSION_SIZE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INFUSION_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY_NOTE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY_NOTE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERIPHERAL_VITRECTORMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIPHERAL_VITRECTORMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMBRANCE_PEELING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBRANCE_PEELING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERFLUOCARBON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFLUOCARBON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_LASER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_LASER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_MW", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_MW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_SHOTS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_SHOTS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETINOCRYOPEXY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETINOCRYOPEXY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AIR_FLUID_EXCHANGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AIR_FLUID_EXCHANGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GAS_EXCHANGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAS_EXCHANGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SF6", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SF6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C6F8", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C6F8_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_BUCHING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_BUCHING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SILICONE_OIL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SILICONE_OIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMY_VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMY_VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROLOMY_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROLOMY_DEXON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_DEXON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNTIVAL_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNTIVAL_VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ALPHAGAN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ALPHAGAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PA_PLANA_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PA_PLANA_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERITOMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITOMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERITOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITOMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROTOMISE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROTOMISE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROTOMISE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROTOMISE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INFUSION_SIZE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INFUSION_SIZE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INFUSION_SIZE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INFUSION_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORE_VITRECTOMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORE_VITRECTOMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORE_VITRECTOMY_NOTE1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORE_VITRECTOMY_NOTE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CORE_VITRECTOMY_NOTE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CORE_VITRECTOMY_NOTE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERIPHERAL_VITRECTORMY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIPHERAL_VITRECTORMY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERIPHERAL_VITRECTORMY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIPHERAL_VITRECTORMY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MEMBRANCE_PEELING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBRANCE_PEELING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MEMBRANCE_PEELING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBRANCE_PEELING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PERFLUOCARBON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFLUOCARBON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PERFLUOCARBON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFLUOCARBON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENDO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENDO_LASER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_LASER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENDO_LASER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_LASER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENDO_MW", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_MW", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENDO_MW", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_MW", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ENDO_SHOTS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_SHOTS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENDO_SHOTS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_SHOTS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RETINOCRYOPEXY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETINOCRYOPEXY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RETINOCRYOPEXY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RETINOCRYOPEXY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_AIR_FLUID_EXCHANGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AIR_FLUID_EXCHANGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_AIR_FLUID_EXCHANGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "AIR_FLUID_EXCHANGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GAS_EXCHANGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAS_EXCHANGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GAS_EXCHANGE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GAS_EXCHANGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SF6", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SF6", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SF6", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SF6", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C6F8", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C6F8", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_C6F8_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_C6F8_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_BUCHING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_BUCHING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_BUCHING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_BUCHING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SILICONE_OIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SILICONE_OIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SILICONE_OIL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SILICONE_OIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROTOMY_VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMY_VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROTOMY_VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMY_VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROLOMY_NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROLOMY_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLEROLOMY_DEXON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_DEXON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLEROLOMY_DEXON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_DEXON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNTIVAL_NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNTIVAL_NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNTIVAL_VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNTIVAL_VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_GENTAL2MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_ALPHAGAN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ALPHAGAN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_ALPHAGAN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ALPHAGAN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PA_PLANA_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PA_PLANA_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PA_PLANA_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX,"& _ 
                " PATIENT_AGE, START_TIME, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN"& _ 
                "_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, "& _ 
                "PERITOMY, SCLEROTOMISE, SCLEROTOMISE_NOTE, INFUSION_SIZE, INFUSION_SIZE_NOTE, CO"& _ 
                "RE_VITRECTOMY, CORE_VITRECTOMY_NOTE1, CORE_VITRECTOMY_NOTE2, PERIPHERAL_VITRECTO"& _ 
                "RMY, MEMBRANCE_PEELING, PERFLUOCARBON, ENDO, ENDO_LASER, ENDO_MW, ENDO_SHOTS, RE"& _ 
                "TINOCRYOPEXY, AIR_FLUID_EXCHANGE, GAS_EXCHANGE, SF6, C6F8, C6F8_NOTE, SCLERAL_BU"& _ 
                "CHING, SILICONE_OIL, PAR_NOTE, SCLEROTOMY_VICRYL, SCLEROLOMY_NYLON, SCLEROLOMY_D"& _ 
                "EXON, CONJUNTIVAL_NYLON, CONJUNTIVAL_VICRYL, SUB_GENTAL2MG, SUB_CEFAZOLIN50MG, S"& _ 
                "UB_DEXAMETHASONE, SUB_OTHERS, TOPICAL_MAXITROL, TOPICAL_PILOCARPINE, TOPICAL_ATR"& _ 
                "OPINE, TOPICAL_ALPHAGAN, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE FROM"& _ 
                " dbo.S_OPER_PAR_PLANA_VITRECTOMY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT PA_PLANA_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX,"& _ 
                " PATIENT_AGE, START_TIME, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN"& _ 
                "_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, "& _ 
                "PERITOMY, SCLEROTOMISE, SCLEROTOMISE_NOTE, INFUSION_SIZE, INFUSION_SIZE_NOTE, CO"& _ 
                "RE_VITRECTOMY, CORE_VITRECTOMY_NOTE1, CORE_VITRECTOMY_NOTE2, PERIPHERAL_VITRECTO"& _ 
                "RMY, MEMBRANCE_PEELING, PERFLUOCARBON, ENDO, ENDO_LASER, ENDO_MW, ENDO_SHOTS, RE"& _ 
                "TINOCRYOPEXY, AIR_FLUID_EXCHANGE, GAS_EXCHANGE, SF6, C6F8, C6F8_NOTE, SCLERAL_BU"& _ 
                "CHING, SILICONE_OIL, PAR_NOTE, SCLEROTOMY_VICRYL, SCLEROLOMY_NYLON, SCLEROLOMY_D"& _ 
                "EXON, CONJUNTIVAL_NYLON, CONJUNTIVAL_VICRYL, SUB_GENTAL2MG, SUB_CEFAZOLIN50MG, S"& _ 
                "UB_DEXAMETHASONE, SUB_OTHERS, TOPICAL_MAXITROL, TOPICAL_PILOCARPINE, TOPICAL_ATR"& _ 
                "OPINE, TOPICAL_ALPHAGAN, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE FROM"& _ 
                " dbo.S_OPER_PAR_PLANA_VITRECTOMY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE PA_PLANA_ID=@PA_PLANA_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PA_PLANA_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PA_PLANA_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [dbo].[S_OPER_PAR_PLANA_VITRECTOMY] ([CREATE_DATE], [OPERA_NO], [PATI"& _ 
                "ENT_NO], [PATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SCRUB], [C"& _ 
                "IRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [S_AN_GA], [S_AN_NEURO], [S_AN_ST"& _ 
                "ANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TOPICAL], [PERITOMY], [SCLE"& _ 
                "ROTOMISE], [SCLEROTOMISE_NOTE], [INFUSION_SIZE], [INFUSION_SIZE_NOTE], [CORE_VIT"& _ 
                "RECTOMY], [CORE_VITRECTOMY_NOTE1], [CORE_VITRECTOMY_NOTE2], [PERIPHERAL_VITRECTO"& _ 
                "RMY], [MEMBRANCE_PEELING], [PERFLUOCARBON], [ENDO], [ENDO_LASER], [ENDO_MW], [EN"& _ 
                "DO_SHOTS], [RETINOCRYOPEXY], [AIR_FLUID_EXCHANGE], [GAS_EXCHANGE], [SF6], [C6F8]"& _ 
                ", [C6F8_NOTE], [SCLERAL_BUCHING], [SILICONE_OIL], [PAR_NOTE], [SCLEROTOMY_VICRYL"& _ 
                "], [SCLEROLOMY_NYLON], [SCLEROLOMY_DEXON], [CONJUNTIVAL_NYLON], [CONJUNTIVAL_VIC"& _ 
                "RYL], [SUB_GENTAL2MG], [SUB_CEFAZOLIN50MG], [SUB_DEXAMETHASONE], [SUB_OTHERS], ["& _ 
                "TOPICAL_MAXITROL], [TOPICAL_PILOCARPINE], [TOPICAL_ATROPINE], [TOPICAL_ALPHAGAN]"& _ 
                ", [TOPICAL_VIGAMOX], [TOPICAL_OTHERS], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE"& _ 
                ", @OPERA_NO, @PATIENT_NO, @PATIENT_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME"& _ 
                ", @SCRUB, @CIRCULATING, @ANESTHESIONLOGIST, @DIAGNOSIS, @S_AN_GA, @S_AN_NEURO, @"& _ 
                "S_AN_STANDBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @PERITOMY, @SC"& _ 
                "LEROTOMISE, @SCLEROTOMISE_NOTE, @INFUSION_SIZE, @INFUSION_SIZE_NOTE, @CORE_VITRE"& _ 
                "CTOMY, @CORE_VITRECTOMY_NOTE1, @CORE_VITRECTOMY_NOTE2, @PERIPHERAL_VITRECTORMY, "& _ 
                "@MEMBRANCE_PEELING, @PERFLUOCARBON, @ENDO, @ENDO_LASER, @ENDO_MW, @ENDO_SHOTS, @"& _ 
                "RETINOCRYOPEXY, @AIR_FLUID_EXCHANGE, @GAS_EXCHANGE, @SF6, @C6F8, @C6F8_NOTE, @SC"& _ 
                "LERAL_BUCHING, @SILICONE_OIL, @PAR_NOTE, @SCLEROTOMY_VICRYL, @SCLEROLOMY_NYLON, "& _ 
                "@SCLEROLOMY_DEXON, @CONJUNTIVAL_NYLON, @CONJUNTIVAL_VICRYL, @SUB_GENTAL2MG, @SUB"& _ 
                "_CEFAZOLIN50MG, @SUB_DEXAMETHASONE, @SUB_OTHERS, @TOPICAL_MAXITROL, @TOPICAL_PIL"& _ 
                "OCARPINE, @TOPICAL_ATROPINE, @TOPICAL_ALPHAGAN, @TOPICAL_VIGAMOX, @TOPICAL_OTHER"& _ 
                "S, @SURGEON_SIGNATURE)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITOMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMISE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INFUSION_SIZE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INFUSION_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY_NOTE1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY_NOTE2", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERIPHERAL_VITRECTORMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIPHERAL_VITRECTORMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMBRANCE_PEELING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBRANCE_PEELING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERFLUOCARBON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFLUOCARBON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_LASER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_LASER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_MW", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_MW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_SHOTS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_SHOTS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETINOCRYOPEXY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RETINOCRYOPEXY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AIR_FLUID_EXCHANGE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "AIR_FLUID_EXCHANGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GAS_EXCHANGE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GAS_EXCHANGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SF6", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SF6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C6F8", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C6F8_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_BUCHING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_BUCHING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SILICONE_OIL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SILICONE_OIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMY_VICRYL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMY_VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROLOMY_NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROLOMY_DEXON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_DEXON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNTIVAL_NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNTIVAL_VICRYL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ALPHAGAN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ALPHAGAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE [dbo].[S_OPER_PAR_PLANA_VITRECTOMY] SET [START_TIME] = @START_TIME, [SCRUB"& _ 
                "] = @SCRUB, [CIRCULATING] = @CIRCULATING, [ANESTHESIONLOGIST] = @ANESTHESIONLOGI"& _ 
                "ST, [DIAGNOSIS] = @DIAGNOSIS, [S_AN_GA] = @S_AN_GA, [S_AN_NEURO] = @S_AN_NEURO, "& _ 
                "[S_AN_STANDBY] = @S_AN_STANDBY, [S_AN_RETROBULBAR] = @S_AN_RETROBULBAR, [S_AN_PE"& _ 
                "RIBULBAR] = @S_AN_PERIBULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL, [PERITOMY] = @PERI"& _ 
                "TOMY, [SCLEROTOMISE] = @SCLEROTOMISE, [SCLEROTOMISE_NOTE] = @SCLEROTOMISE_NOTE, "& _ 
                "[INFUSION_SIZE] = @INFUSION_SIZE, [INFUSION_SIZE_NOTE] = @INFUSION_SIZE_NOTE, [C"& _ 
                "ORE_VITRECTOMY] = @CORE_VITRECTOMY, [CORE_VITRECTOMY_NOTE1] = @CORE_VITRECTOMY_N"& _ 
                "OTE1, [CORE_VITRECTOMY_NOTE2] = @CORE_VITRECTOMY_NOTE2, [PERIPHERAL_VITRECTORMY]"& _ 
                " = @PERIPHERAL_VITRECTORMY, [MEMBRANCE_PEELING] = @MEMBRANCE_PEELING, [PERFLUOCA"& _ 
                "RBON] = @PERFLUOCARBON, [ENDO] = @ENDO, [ENDO_LASER] = @ENDO_LASER, [ENDO_MW] = "& _ 
                "@ENDO_MW, [ENDO_SHOTS] = @ENDO_SHOTS, [RETINOCRYOPEXY] = @RETINOCRYOPEXY, [AIR_F"& _ 
                "LUID_EXCHANGE] = @AIR_FLUID_EXCHANGE, [GAS_EXCHANGE] = @GAS_EXCHANGE, [SF6] = @S"& _ 
                "F6, [C6F8] = @C6F8, [C6F8_NOTE] = @C6F8_NOTE, [SCLERAL_BUCHING] = @SCLERAL_BUCHI"& _ 
                "NG, [SILICONE_OIL] = @SILICONE_OIL, [PAR_NOTE] = @PAR_NOTE, [SCLEROTOMY_VICRYL] "& _ 
                "= @SCLEROTOMY_VICRYL, [SCLEROLOMY_NYLON] = @SCLEROLOMY_NYLON, [SCLEROLOMY_DEXON]"& _ 
                " = @SCLEROLOMY_DEXON, [CONJUNTIVAL_NYLON] = @CONJUNTIVAL_NYLON, [CONJUNTIVAL_VIC"& _ 
                "RYL] = @CONJUNTIVAL_VICRYL, [SUB_GENTAL2MG] = @SUB_GENTAL2MG, [SUB_CEFAZOLIN50MG"& _ 
                "] = @SUB_CEFAZOLIN50MG, [SUB_DEXAMETHASONE] = @SUB_DEXAMETHASONE, [SUB_OTHERS] ="& _ 
                " @SUB_OTHERS, [TOPICAL_MAXITROL] = @TOPICAL_MAXITROL, [TOPICAL_PILOCARPINE] = @T"& _ 
                "OPICAL_PILOCARPINE, [TOPICAL_ATROPINE] = @TOPICAL_ATROPINE, [TOPICAL_ALPHAGAN] ="& _ 
                " @TOPICAL_ALPHAGAN, [TOPICAL_VIGAMOX] = @TOPICAL_VIGAMOX, [TOPICAL_OTHERS] = @TO"& _ 
                "PICAL_OTHERS, [SURGEON_SIGNATURE] = @SURGEON_SIGNATURE WHERE ([PA_PLANA_ID] = @O"& _ 
                "riginal_PA_PLANA_ID)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERITOMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERITOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMISE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMISE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMISE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INFUSION_SIZE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INFUSION_SIZE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "INFUSION_SIZE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY_NOTE1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CORE_VITRECTOMY_NOTE2", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CORE_VITRECTOMY_NOTE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERIPHERAL_VITRECTORMY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERIPHERAL_VITRECTORMY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MEMBRANCE_PEELING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "MEMBRANCE_PEELING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PERFLUOCARBON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PERFLUOCARBON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_LASER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_LASER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_MW", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_MW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENDO_SHOTS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ENDO_SHOTS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETINOCRYOPEXY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RETINOCRYOPEXY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AIR_FLUID_EXCHANGE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "AIR_FLUID_EXCHANGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GAS_EXCHANGE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GAS_EXCHANGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SF6", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SF6", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C6F8", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@C6F8_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "C6F8_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_BUCHING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_BUCHING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SILICONE_OIL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SILICONE_OIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_NOTE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROTOMY_VICRYL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROTOMY_VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROLOMY_NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLEROLOMY_DEXON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLEROLOMY_DEXON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNTIVAL_NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNTIVAL_VICRYL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNTIVAL_VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHERS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ATROPINE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ATROPINE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_ALPHAGAN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_ALPHAGAN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PA_PLANA_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PA_PLANA_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable = New DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable, ByVal PA_PLANA_ID As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PA_PLANA_ID,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectPaPlana(ByVal PA_PLANA_ID As Decimal) As DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PA_PLANA_ID,Decimal)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable = New DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PAR_PLANA_VITRECTOMYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "S_OPER_PAR_PLANA_VITRECTOMY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PA_PLANA_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROTOMISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROTOMISE_NOTE As String,  _
                    ByVal Original_INFUSION_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INFUSION_SIZE_NOTE As String,  _
                    ByVal Original_CORE_VITRECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal Original_CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal Original_PERIPHERAL_VITRECTORMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_MEMBRANCE_PEELING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERFLUOCARBON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ENDO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ENDO_LASER As String,  _
                    ByVal Original_ENDO_MW As String,  _
                    ByVal Original_ENDO_SHOTS As String,  _
                    ByVal Original_RETINOCRYOPEXY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AIR_FLUID_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GAS_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SF6 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_C6F8 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_C6F8_NOTE As String,  _
                    ByVal Original_SCLERAL_BUCHING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SILICONE_OIL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PAR_NOTE As String,  _
                    ByVal Original_SCLEROTOMY_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROLOMY_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROLOMY_DEXON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNTIVAL_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNTIVAL_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHERS As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ALPHAGAN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PA_PLANA_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_PERITOMY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_PERITOMY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLEROTOMISE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_SCLEROTOMISE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLEROTOMISE_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_SCLEROTOMISE_NOTE,String)
            End If
            If (Original_INFUSION_SIZE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_INFUSION_SIZE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_INFUSION_SIZE_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_INFUSION_SIZE_NOTE,String)
            End If
            If (Original_CORE_VITRECTOMY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_CORE_VITRECTOMY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_CORE_VITRECTOMY_NOTE1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_CORE_VITRECTOMY_NOTE1,String)
            End If
            If (Original_CORE_VITRECTOMY_NOTE2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_CORE_VITRECTOMY_NOTE2,String)
            End If
            If (Original_PERIPHERAL_VITRECTORMY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_PERIPHERAL_VITRECTORMY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_MEMBRANCE_PEELING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_MEMBRANCE_PEELING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_PERFLUOCARBON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_PERFLUOCARBON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_ENDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_ENDO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_ENDO_LASER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_ENDO_LASER,String)
            End If
            If (Original_ENDO_MW Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_ENDO_MW,String)
            End If
            If (Original_ENDO_SHOTS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_ENDO_SHOTS,String)
            End If
            If (Original_RETINOCRYOPEXY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_RETINOCRYOPEXY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_AIR_FLUID_EXCHANGE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_AIR_FLUID_EXCHANGE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_GAS_EXCHANGE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_GAS_EXCHANGE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_SF6.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_SF6.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_C6F8.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_C6F8.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_C6F8_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_C6F8_NOTE,String)
            End If
            If (Original_SCLERAL_BUCHING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_SCLERAL_BUCHING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_SILICONE_OIL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_SILICONE_OIL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_PAR_NOTE,String)
            End If
            If (Original_SCLEROTOMY_VICRYL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_SCLEROTOMY_VICRYL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLEROLOMY_NYLON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_SCLEROLOMY_NYLON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLEROLOMY_DEXON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_SCLEROLOMY_DEXON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNTIVAL_NYLON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_CONJUNTIVAL_NYLON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNTIVAL_VICRYL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_CONJUNTIVAL_VICRYL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_GENTAL2MG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_SUB_GENTAL2MG.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_CEFAZOLIN50MG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_SUB_OTHERS,String)
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_ATROPINE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_TOPICAL_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_ALPHAGAN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_TOPICAL_ALPHAGAN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_VIGAMOX.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_TOPICAL_VIGAMOX.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_TOPICAL_OTHERS,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE_NOTE As String,  _
                    ByVal INFUSION_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal INFUSION_SIZE_NOTE As String,  _
                    ByVal CORE_VITRECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal PERIPHERAL_VITRECTORMY As Global.System.Nullable(Of Boolean),  _
                    ByVal MEMBRANCE_PEELING As Global.System.Nullable(Of Boolean),  _
                    ByVal PERFLUOCARBON As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO_LASER As String,  _
                    ByVal ENDO_MW As String,  _
                    ByVal ENDO_SHOTS As String,  _
                    ByVal RETINOCRYOPEXY As Global.System.Nullable(Of Boolean),  _
                    ByVal AIR_FLUID_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal GAS_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal SF6 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8_NOTE As String,  _
                    ByVal SCLERAL_BUCHING As Global.System.Nullable(Of Boolean),  _
                    ByVal SILICONE_OIL As Global.System.Nullable(Of Boolean),  _
                    ByVal PAR_NOTE As String,  _
                    ByVal SCLEROTOMY_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_DEXON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ALPHAGAN As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PERITOMY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(PERITOMY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SCLEROTOMISE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(SCLEROTOMISE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SCLEROTOMISE_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(SCLEROTOMISE_NOTE,String)
            End If
            If (INFUSION_SIZE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(INFUSION_SIZE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (INFUSION_SIZE_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(INFUSION_SIZE_NOTE,String)
            End If
            If (CORE_VITRECTOMY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CORE_VITRECTOMY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CORE_VITRECTOMY_NOTE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CORE_VITRECTOMY_NOTE1,String)
            End If
            If (CORE_VITRECTOMY_NOTE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CORE_VITRECTOMY_NOTE2,String)
            End If
            If (PERIPHERAL_VITRECTORMY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(PERIPHERAL_VITRECTORMY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (MEMBRANCE_PEELING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(MEMBRANCE_PEELING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (PERFLUOCARBON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(PERFLUOCARBON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (ENDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(ENDO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ENDO_LASER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ENDO_LASER,String)
            End If
            If (ENDO_MW Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(ENDO_MW,String)
            End If
            If (ENDO_SHOTS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(ENDO_SHOTS,String)
            End If
            If (RETINOCRYOPEXY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(RETINOCRYOPEXY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (AIR_FLUID_EXCHANGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(AIR_FLUID_EXCHANGE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (GAS_EXCHANGE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(GAS_EXCHANGE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (SF6.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(SF6.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (C6F8.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(C6F8.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (C6F8_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(C6F8_NOTE,String)
            End If
            If (SCLERAL_BUCHING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(SCLERAL_BUCHING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SILICONE_OIL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SILICONE_OIL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (PAR_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(PAR_NOTE,String)
            End If
            If (SCLEROTOMY_VICRYL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(SCLEROTOMY_VICRYL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SCLEROLOMY_NYLON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(SCLEROLOMY_NYLON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (SCLEROLOMY_DEXON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(SCLEROLOMY_DEXON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CONJUNTIVAL_NYLON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(CONJUNTIVAL_NYLON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CONJUNTIVAL_VICRYL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(CONJUNTIVAL_VICRYL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (SUB_GENTAL2MG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(SUB_GENTAL2MG.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN50MG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(SUB_OTHERS,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ATROPINE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(TOPICAL_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ALPHAGAN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(TOPICAL_ALPHAGAN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_VIGAMOX.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(TOPICAL_VIGAMOX.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE_NOTE As String,  _
                    ByVal INFUSION_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal INFUSION_SIZE_NOTE As String,  _
                    ByVal CORE_VITRECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal PERIPHERAL_VITRECTORMY As Global.System.Nullable(Of Boolean),  _
                    ByVal MEMBRANCE_PEELING As Global.System.Nullable(Of Boolean),  _
                    ByVal PERFLUOCARBON As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO_LASER As String,  _
                    ByVal ENDO_MW As String,  _
                    ByVal ENDO_SHOTS As String,  _
                    ByVal RETINOCRYOPEXY As Global.System.Nullable(Of Boolean),  _
                    ByVal AIR_FLUID_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal GAS_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal SF6 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8_NOTE As String,  _
                    ByVal SCLERAL_BUCHING As Global.System.Nullable(Of Boolean),  _
                    ByVal SILICONE_OIL As Global.System.Nullable(Of Boolean),  _
                    ByVal PAR_NOTE As String,  _
                    ByVal SCLEROTOMY_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_DEXON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ALPHAGAN As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PA_PLANA_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROTOMISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROTOMISE_NOTE As String,  _
                    ByVal Original_INFUSION_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INFUSION_SIZE_NOTE As String,  _
                    ByVal Original_CORE_VITRECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal Original_CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal Original_PERIPHERAL_VITRECTORMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_MEMBRANCE_PEELING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERFLUOCARBON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ENDO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ENDO_LASER As String,  _
                    ByVal Original_ENDO_MW As String,  _
                    ByVal Original_ENDO_SHOTS As String,  _
                    ByVal Original_RETINOCRYOPEXY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AIR_FLUID_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GAS_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SF6 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_C6F8 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_C6F8_NOTE As String,  _
                    ByVal Original_SCLERAL_BUCHING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SILICONE_OIL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PAR_NOTE As String,  _
                    ByVal Original_SCLEROTOMY_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROLOMY_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROLOMY_DEXON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNTIVAL_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNTIVAL_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHERS As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ALPHAGAN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String,  _
                    ByVal PA_PLANA_ID As Decimal) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PERITOMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(PERITOMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SCLEROTOMISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(SCLEROTOMISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SCLEROTOMISE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(SCLEROTOMISE_NOTE,String)
            End If
            If (INFUSION_SIZE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(INFUSION_SIZE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (INFUSION_SIZE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(INFUSION_SIZE_NOTE,String)
            End If
            If (CORE_VITRECTOMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CORE_VITRECTOMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CORE_VITRECTOMY_NOTE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CORE_VITRECTOMY_NOTE1,String)
            End If
            If (CORE_VITRECTOMY_NOTE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CORE_VITRECTOMY_NOTE2,String)
            End If
            If (PERIPHERAL_VITRECTORMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(PERIPHERAL_VITRECTORMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (MEMBRANCE_PEELING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(MEMBRANCE_PEELING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (PERFLUOCARBON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PERFLUOCARBON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (ENDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(ENDO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ENDO_LASER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(ENDO_LASER,String)
            End If
            If (ENDO_MW Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(ENDO_MW,String)
            End If
            If (ENDO_SHOTS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(ENDO_SHOTS,String)
            End If
            If (RETINOCRYOPEXY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(RETINOCRYOPEXY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (AIR_FLUID_EXCHANGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(AIR_FLUID_EXCHANGE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (GAS_EXCHANGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(GAS_EXCHANGE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (SF6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(SF6.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (C6F8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(C6F8.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (C6F8_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(C6F8_NOTE,String)
            End If
            If (SCLERAL_BUCHING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(SCLERAL_BUCHING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SILICONE_OIL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(SILICONE_OIL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (PAR_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(PAR_NOTE,String)
            End If
            If (SCLEROTOMY_VICRYL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(SCLEROTOMY_VICRYL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SCLEROLOMY_NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(SCLEROLOMY_NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (SCLEROLOMY_DEXON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(SCLEROLOMY_DEXON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CONJUNTIVAL_NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(CONJUNTIVAL_NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CONJUNTIVAL_VICRYL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(CONJUNTIVAL_VICRYL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (SUB_GENTAL2MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(SUB_GENTAL2MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN50MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(SUB_OTHERS,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ATROPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(TOPICAL_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ALPHAGAN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(TOPICAL_ALPHAGAN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_VIGAMOX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(TOPICAL_VIGAMOX.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_PA_PLANA_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_PERITOMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_PERITOMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLEROTOMISE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_SCLEROTOMISE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLEROTOMISE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_SCLEROTOMISE_NOTE,String)
            End If
            If (Original_INFUSION_SIZE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_INFUSION_SIZE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_INFUSION_SIZE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_INFUSION_SIZE_NOTE,String)
            End If
            If (Original_CORE_VITRECTOMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_CORE_VITRECTOMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_CORE_VITRECTOMY_NOTE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_CORE_VITRECTOMY_NOTE1,String)
            End If
            If (Original_CORE_VITRECTOMY_NOTE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_CORE_VITRECTOMY_NOTE2,String)
            End If
            If (Original_PERIPHERAL_VITRECTORMY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_PERIPHERAL_VITRECTORMY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_MEMBRANCE_PEELING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_MEMBRANCE_PEELING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_PERFLUOCARBON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_PERFLUOCARBON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_ENDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_ENDO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_ENDO_LASER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_ENDO_LASER,String)
            End If
            If (Original_ENDO_MW Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_ENDO_MW,String)
            End If
            If (Original_ENDO_SHOTS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_ENDO_SHOTS,String)
            End If
            If (Original_RETINOCRYOPEXY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_RETINOCRYOPEXY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (Original_AIR_FLUID_EXCHANGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_AIR_FLUID_EXCHANGE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (Original_GAS_EXCHANGE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_GAS_EXCHANGE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (Original_SF6.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_SF6.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (Original_C6F8.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_C6F8.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (Original_C6F8_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_C6F8_NOTE,String)
            End If
            If (Original_SCLERAL_BUCHING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_SCLERAL_BUCHING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            If (Original_SILICONE_OIL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_SILICONE_OIL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_PAR_NOTE,String)
            End If
            If (Original_SCLEROTOMY_VICRYL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_SCLEROTOMY_VICRYL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLEROLOMY_NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_SCLEROLOMY_NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLEROLOMY_DEXON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_SCLEROLOMY_DEXON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNTIVAL_NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_CONJUNTIVAL_NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNTIVAL_VICRYL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_CONJUNTIVAL_VICRYL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_GENTAL2MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_SUB_GENTAL2MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_CEFAZOLIN50MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_SUB_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_SUB_OTHERS,String)
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_PILOCARPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_ATROPINE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_TOPICAL_ATROPINE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_ALPHAGAN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_TOPICAL_ALPHAGAN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_VIGAMOX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_TOPICAL_VIGAMOX.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_TOPICAL_OTHERS,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(172).Value = CType(PA_PLANA_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE_NOTE As String,  _
                    ByVal INFUSION_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal INFUSION_SIZE_NOTE As String,  _
                    ByVal CORE_VITRECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal PERIPHERAL_VITRECTORMY As Global.System.Nullable(Of Boolean),  _
                    ByVal MEMBRANCE_PEELING As Global.System.Nullable(Of Boolean),  _
                    ByVal PERFLUOCARBON As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO_LASER As String,  _
                    ByVal ENDO_MW As String,  _
                    ByVal ENDO_SHOTS As String,  _
                    ByVal RETINOCRYOPEXY As Global.System.Nullable(Of Boolean),  _
                    ByVal AIR_FLUID_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal GAS_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal SF6 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8_NOTE As String,  _
                    ByVal SCLERAL_BUCHING As Global.System.Nullable(Of Boolean),  _
                    ByVal SILICONE_OIL As Global.System.Nullable(Of Boolean),  _
                    ByVal PAR_NOTE As String,  _
                    ByVal SCLEROTOMY_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_DEXON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ALPHAGAN As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PA_PLANA_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERITOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROTOMISE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROTOMISE_NOTE As String,  _
                    ByVal Original_INFUSION_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_INFUSION_SIZE_NOTE As String,  _
                    ByVal Original_CORE_VITRECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal Original_CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal Original_PERIPHERAL_VITRECTORMY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_MEMBRANCE_PEELING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PERFLUOCARBON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ENDO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ENDO_LASER As String,  _
                    ByVal Original_ENDO_MW As String,  _
                    ByVal Original_ENDO_SHOTS As String,  _
                    ByVal Original_RETINOCRYOPEXY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_AIR_FLUID_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GAS_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SF6 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_C6F8 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_C6F8_NOTE As String,  _
                    ByVal Original_SCLERAL_BUCHING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SILICONE_OIL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PAR_NOTE As String,  _
                    ByVal Original_SCLEROTOMY_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROLOMY_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLEROLOMY_DEXON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNTIVAL_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNTIVAL_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHERS As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_ALPHAGAN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Return Me.Update(CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, PERITOMY, SCLEROTOMISE, SCLEROTOMISE_NOTE, INFUSION_SIZE, INFUSION_SIZE_NOTE, CORE_VITRECTOMY, CORE_VITRECTOMY_NOTE1, CORE_VITRECTOMY_NOTE2, PERIPHERAL_VITRECTORMY, MEMBRANCE_PEELING, PERFLUOCARBON, ENDO, ENDO_LASER, ENDO_MW, ENDO_SHOTS, RETINOCRYOPEXY, AIR_FLUID_EXCHANGE, GAS_EXCHANGE, SF6, C6F8, C6F8_NOTE, SCLERAL_BUCHING, SILICONE_OIL, PAR_NOTE, SCLEROTOMY_VICRYL, SCLEROLOMY_NYLON, SCLEROLOMY_DEXON, CONJUNTIVAL_NYLON, CONJUNTIVAL_VICRYL, SUB_GENTAL2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE, SUB_OTHERS, TOPICAL_MAXITROL, TOPICAL_PILOCARPINE, TOPICAL_ATROPINE, TOPICAL_ALPHAGAN, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE, Original_PA_PLANA_ID, Original_CREATE_DATE, Original_OPERA_NO, Original_PATIENT_NO, Original_PATIENT_NAME, Original_PATIENT_SEX, Original_PATIENT_AGE, Original_START_TIME, Original_SCRUB, Original_CIRCULATING, Original_ANESTHESIONLOGIST, Original_DIAGNOSIS, Original_S_AN_GA, Original_S_AN_NEURO, Original_S_AN_STANDBY, Original_S_AN_RETROBULBAR, Original_S_AN_PERIBULBAR, Original_S_AN_TOPICAL, Original_PERITOMY, Original_SCLEROTOMISE, Original_SCLEROTOMISE_NOTE, Original_INFUSION_SIZE, Original_INFUSION_SIZE_NOTE, Original_CORE_VITRECTOMY, Original_CORE_VITRECTOMY_NOTE1, Original_CORE_VITRECTOMY_NOTE2, Original_PERIPHERAL_VITRECTORMY, Original_MEMBRANCE_PEELING, Original_PERFLUOCARBON, Original_ENDO, Original_ENDO_LASER, Original_ENDO_MW, Original_ENDO_SHOTS, Original_RETINOCRYOPEXY, Original_AIR_FLUID_EXCHANGE, Original_GAS_EXCHANGE, Original_SF6, Original_C6F8, Original_C6F8_NOTE, Original_SCLERAL_BUCHING, Original_SILICONE_OIL, Original_PAR_NOTE, Original_SCLEROTOMY_VICRYL, Original_SCLEROLOMY_NYLON, Original_SCLEROLOMY_DEXON, Original_CONJUNTIVAL_NYLON, Original_CONJUNTIVAL_VICRYL, Original_SUB_GENTAL2MG, Original_SUB_CEFAZOLIN50MG, Original_SUB_DEXAMETHASONE, Original_SUB_OTHERS, Original_TOPICAL_MAXITROL, Original_TOPICAL_PILOCARPINE, Original_TOPICAL_ATROPINE, Original_TOPICAL_ALPHAGAN, Original_TOPICAL_VIGAMOX, Original_TOPICAL_OTHERS, Original_SURGEON_SIGNATURE, Original_PA_PLANA_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertParPlana( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE_NOTE As String,  _
                    ByVal INFUSION_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal INFUSION_SIZE_NOTE As String,  _
                    ByVal CORE_VITRECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal PERIPHERAL_VITRECTORMY As Global.System.Nullable(Of Boolean),  _
                    ByVal MEMBRANCE_PEELING As Global.System.Nullable(Of Boolean),  _
                    ByVal PERFLUOCARBON As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO_LASER As String,  _
                    ByVal ENDO_MW As String,  _
                    ByVal ENDO_SHOTS As String,  _
                    ByVal RETINOCRYOPEXY As Global.System.Nullable(Of Boolean),  _
                    ByVal AIR_FLUID_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal GAS_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal SF6 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8_NOTE As String,  _
                    ByVal SCLERAL_BUCHING As Global.System.Nullable(Of Boolean),  _
                    ByVal SILICONE_OIL As Global.System.Nullable(Of Boolean),  _
                    ByVal PAR_NOTE As String,  _
                    ByVal SCLEROTOMY_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_DEXON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ALPHAGAN As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(11).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(13).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(15).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(16).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (PERITOMY.HasValue = true) Then
                command.Parameters(17).Value = CType(PERITOMY.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (SCLEROTOMISE.HasValue = true) Then
                command.Parameters(18).Value = CType(SCLEROTOMISE.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (SCLEROTOMISE_NOTE Is Nothing) Then
                command.Parameters(19).Value = Global.System.DBNull.Value
            Else
                command.Parameters(19).Value = CType(SCLEROTOMISE_NOTE,String)
            End If
            If (INFUSION_SIZE.HasValue = true) Then
                command.Parameters(20).Value = CType(INFUSION_SIZE.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (INFUSION_SIZE_NOTE Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(INFUSION_SIZE_NOTE,String)
            End If
            If (CORE_VITRECTOMY.HasValue = true) Then
                command.Parameters(22).Value = CType(CORE_VITRECTOMY.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CORE_VITRECTOMY_NOTE1 Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(CORE_VITRECTOMY_NOTE1,String)
            End If
            If (CORE_VITRECTOMY_NOTE2 Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(CORE_VITRECTOMY_NOTE2,String)
            End If
            If (PERIPHERAL_VITRECTORMY.HasValue = true) Then
                command.Parameters(25).Value = CType(PERIPHERAL_VITRECTORMY.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (MEMBRANCE_PEELING.HasValue = true) Then
                command.Parameters(26).Value = CType(MEMBRANCE_PEELING.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (PERFLUOCARBON.HasValue = true) Then
                command.Parameters(27).Value = CType(PERFLUOCARBON.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (ENDO.HasValue = true) Then
                command.Parameters(28).Value = CType(ENDO.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ENDO_LASER Is Nothing) Then
                command.Parameters(29).Value = Global.System.DBNull.Value
            Else
                command.Parameters(29).Value = CType(ENDO_LASER,String)
            End If
            If (ENDO_MW Is Nothing) Then
                command.Parameters(30).Value = Global.System.DBNull.Value
            Else
                command.Parameters(30).Value = CType(ENDO_MW,String)
            End If
            If (ENDO_SHOTS Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(ENDO_SHOTS,String)
            End If
            If (RETINOCRYOPEXY.HasValue = true) Then
                command.Parameters(32).Value = CType(RETINOCRYOPEXY.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (AIR_FLUID_EXCHANGE.HasValue = true) Then
                command.Parameters(33).Value = CType(AIR_FLUID_EXCHANGE.Value,Boolean)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (GAS_EXCHANGE.HasValue = true) Then
                command.Parameters(34).Value = CType(GAS_EXCHANGE.Value,Boolean)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (SF6.HasValue = true) Then
                command.Parameters(35).Value = CType(SF6.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (C6F8.HasValue = true) Then
                command.Parameters(36).Value = CType(C6F8.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (C6F8_NOTE Is Nothing) Then
                command.Parameters(37).Value = Global.System.DBNull.Value
            Else
                command.Parameters(37).Value = CType(C6F8_NOTE,String)
            End If
            If (SCLERAL_BUCHING.HasValue = true) Then
                command.Parameters(38).Value = CType(SCLERAL_BUCHING.Value,Boolean)
            Else
                command.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SILICONE_OIL.HasValue = true) Then
                command.Parameters(39).Value = CType(SILICONE_OIL.Value,Boolean)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (PAR_NOTE Is Nothing) Then
                command.Parameters(40).Value = Global.System.DBNull.Value
            Else
                command.Parameters(40).Value = CType(PAR_NOTE,String)
            End If
            If (SCLEROTOMY_VICRYL.HasValue = true) Then
                command.Parameters(41).Value = CType(SCLEROTOMY_VICRYL.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SCLEROLOMY_NYLON.HasValue = true) Then
                command.Parameters(42).Value = CType(SCLEROLOMY_NYLON.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (SCLEROLOMY_DEXON.HasValue = true) Then
                command.Parameters(43).Value = CType(SCLEROLOMY_DEXON.Value,Boolean)
            Else
                command.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (CONJUNTIVAL_NYLON.HasValue = true) Then
                command.Parameters(44).Value = CType(CONJUNTIVAL_NYLON.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (CONJUNTIVAL_VICRYL.HasValue = true) Then
                command.Parameters(45).Value = CType(CONJUNTIVAL_VICRYL.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (SUB_GENTAL2MG.HasValue = true) Then
                command.Parameters(46).Value = CType(SUB_GENTAL2MG.Value,Boolean)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN50MG.HasValue = true) Then
                command.Parameters(47).Value = CType(SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(48).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHERS Is Nothing) Then
                command.Parameters(49).Value = Global.System.DBNull.Value
            Else
                command.Parameters(49).Value = CType(SUB_OTHERS,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(50).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                command.Parameters(51).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ATROPINE.HasValue = true) Then
                command.Parameters(52).Value = CType(TOPICAL_ATROPINE.Value,Boolean)
            Else
                command.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ALPHAGAN.HasValue = true) Then
                command.Parameters(53).Value = CType(TOPICAL_ALPHAGAN.Value,Boolean)
            Else
                command.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_VIGAMOX.HasValue = true) Then
                command.Parameters(54).Value = CType(TOPICAL_VIGAMOX.Value,Boolean)
            Else
                command.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                command.Parameters(55).Value = Global.System.DBNull.Value
            Else
                command.Parameters(55).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(56).Value = Global.System.DBNull.Value
            Else
                command.Parameters(56).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdatePar( _
                    ByVal START_TIME As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PERITOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROTOMISE_NOTE As String,  _
                    ByVal INFUSION_SIZE As Global.System.Nullable(Of Boolean),  _
                    ByVal INFUSION_SIZE_NOTE As String,  _
                    ByVal CORE_VITRECTOMY As Global.System.Nullable(Of Boolean),  _
                    ByVal CORE_VITRECTOMY_NOTE1 As String,  _
                    ByVal CORE_VITRECTOMY_NOTE2 As String,  _
                    ByVal PERIPHERAL_VITRECTORMY As Global.System.Nullable(Of Boolean),  _
                    ByVal MEMBRANCE_PEELING As Global.System.Nullable(Of Boolean),  _
                    ByVal PERFLUOCARBON As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO As Global.System.Nullable(Of Boolean),  _
                    ByVal ENDO_LASER As String,  _
                    ByVal ENDO_MW As String,  _
                    ByVal ENDO_SHOTS As String,  _
                    ByVal RETINOCRYOPEXY As Global.System.Nullable(Of Boolean),  _
                    ByVal AIR_FLUID_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal GAS_EXCHANGE As Global.System.Nullable(Of Boolean),  _
                    ByVal SF6 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8 As Global.System.Nullable(Of Boolean),  _
                    ByVal C6F8_NOTE As String,  _
                    ByVal SCLERAL_BUCHING As Global.System.Nullable(Of Boolean),  _
                    ByVal SILICONE_OIL As Global.System.Nullable(Of Boolean),  _
                    ByVal PAR_NOTE As String,  _
                    ByVal SCLEROTOMY_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLEROLOMY_DEXON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNTIVAL_VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ATROPINE As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_ALPHAGAN As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PA_PLANA_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (START_TIME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(START_TIME,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(DIAGNOSIS,String)
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(5).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(6).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(7).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(8).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(9).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(10).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PERITOMY.HasValue = true) Then
                command.Parameters(11).Value = CType(PERITOMY.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (SCLEROTOMISE.HasValue = true) Then
                command.Parameters(12).Value = CType(SCLEROTOMISE.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (SCLEROTOMISE_NOTE Is Nothing) Then
                command.Parameters(13).Value = Global.System.DBNull.Value
            Else
                command.Parameters(13).Value = CType(SCLEROTOMISE_NOTE,String)
            End If
            If (INFUSION_SIZE.HasValue = true) Then
                command.Parameters(14).Value = CType(INFUSION_SIZE.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (INFUSION_SIZE_NOTE Is Nothing) Then
                command.Parameters(15).Value = Global.System.DBNull.Value
            Else
                command.Parameters(15).Value = CType(INFUSION_SIZE_NOTE,String)
            End If
            If (CORE_VITRECTOMY.HasValue = true) Then
                command.Parameters(16).Value = CType(CORE_VITRECTOMY.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CORE_VITRECTOMY_NOTE1 Is Nothing) Then
                command.Parameters(17).Value = Global.System.DBNull.Value
            Else
                command.Parameters(17).Value = CType(CORE_VITRECTOMY_NOTE1,String)
            End If
            If (CORE_VITRECTOMY_NOTE2 Is Nothing) Then
                command.Parameters(18).Value = Global.System.DBNull.Value
            Else
                command.Parameters(18).Value = CType(CORE_VITRECTOMY_NOTE2,String)
            End If
            If (PERIPHERAL_VITRECTORMY.HasValue = true) Then
                command.Parameters(19).Value = CType(PERIPHERAL_VITRECTORMY.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (MEMBRANCE_PEELING.HasValue = true) Then
                command.Parameters(20).Value = CType(MEMBRANCE_PEELING.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (PERFLUOCARBON.HasValue = true) Then
                command.Parameters(21).Value = CType(PERFLUOCARBON.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (ENDO.HasValue = true) Then
                command.Parameters(22).Value = CType(ENDO.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ENDO_LASER Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(ENDO_LASER,String)
            End If
            If (ENDO_MW Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(ENDO_MW,String)
            End If
            If (ENDO_SHOTS Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(ENDO_SHOTS,String)
            End If
            If (RETINOCRYOPEXY.HasValue = true) Then
                command.Parameters(26).Value = CType(RETINOCRYOPEXY.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (AIR_FLUID_EXCHANGE.HasValue = true) Then
                command.Parameters(27).Value = CType(AIR_FLUID_EXCHANGE.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (GAS_EXCHANGE.HasValue = true) Then
                command.Parameters(28).Value = CType(GAS_EXCHANGE.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (SF6.HasValue = true) Then
                command.Parameters(29).Value = CType(SF6.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (C6F8.HasValue = true) Then
                command.Parameters(30).Value = CType(C6F8.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (C6F8_NOTE Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(C6F8_NOTE,String)
            End If
            If (SCLERAL_BUCHING.HasValue = true) Then
                command.Parameters(32).Value = CType(SCLERAL_BUCHING.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (SILICONE_OIL.HasValue = true) Then
                command.Parameters(33).Value = CType(SILICONE_OIL.Value,Boolean)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (PAR_NOTE Is Nothing) Then
                command.Parameters(34).Value = Global.System.DBNull.Value
            Else
                command.Parameters(34).Value = CType(PAR_NOTE,String)
            End If
            If (SCLEROTOMY_VICRYL.HasValue = true) Then
                command.Parameters(35).Value = CType(SCLEROTOMY_VICRYL.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SCLEROLOMY_NYLON.HasValue = true) Then
                command.Parameters(36).Value = CType(SCLEROLOMY_NYLON.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (SCLEROLOMY_DEXON.HasValue = true) Then
                command.Parameters(37).Value = CType(SCLEROLOMY_DEXON.Value,Boolean)
            Else
                command.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (CONJUNTIVAL_NYLON.HasValue = true) Then
                command.Parameters(38).Value = CType(CONJUNTIVAL_NYLON.Value,Boolean)
            Else
                command.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (CONJUNTIVAL_VICRYL.HasValue = true) Then
                command.Parameters(39).Value = CType(CONJUNTIVAL_VICRYL.Value,Boolean)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (SUB_GENTAL2MG.HasValue = true) Then
                command.Parameters(40).Value = CType(SUB_GENTAL2MG.Value,Boolean)
            Else
                command.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN50MG.HasValue = true) Then
                command.Parameters(41).Value = CType(SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(42).Value = CType(SUB_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHERS Is Nothing) Then
                command.Parameters(43).Value = Global.System.DBNull.Value
            Else
                command.Parameters(43).Value = CType(SUB_OTHERS,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(44).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE.HasValue = true) Then
                command.Parameters(45).Value = CType(TOPICAL_PILOCARPINE.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ATROPINE.HasValue = true) Then
                command.Parameters(46).Value = CType(TOPICAL_ATROPINE.Value,Boolean)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_ALPHAGAN.HasValue = true) Then
                command.Parameters(47).Value = CType(TOPICAL_ALPHAGAN.Value,Boolean)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_VIGAMOX.HasValue = true) Then
                command.Parameters(48).Value = CType(TOPICAL_VIGAMOX.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                command.Parameters(49).Value = Global.System.DBNull.Value
            Else
                command.Parameters(49).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(50).Value = Global.System.DBNull.Value
            Else
                command.Parameters(50).Value = CType(SURGEON_SIGNATURE,String)
            End If
            command.Parameters(51).Value = CType(Original_PA_PLANA_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_OPER_TRABECULECTOMYTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_OPER_TRABECULECTOMY"
            tableMapping.ColumnMappings.Add("TRABECULECTIOMY_ID", "TRABECULECTIOMY_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("OPERA_NO", "OPERA_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NO", "PATIENT_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NAME", "PATIENT_NAME")
            tableMapping.ColumnMappings.Add("PATIENT_SEX", "PATIENT_SEX")
            tableMapping.ColumnMappings.Add("PATIENT_AGE", "PATIENT_AGE")
            tableMapping.ColumnMappings.Add("START_TIME", "START_TIME")
            tableMapping.ColumnMappings.Add("SURGEON", "SURGEON")
            tableMapping.ColumnMappings.Add("SCRUB", "SCRUB")
            tableMapping.ColumnMappings.Add("CIRCULATING", "CIRCULATING")
            tableMapping.ColumnMappings.Add("ANESTHESIONLOGIST", "ANESTHESIONLOGIST")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("RIGHT_EYE", "RIGHT_EYE")
            tableMapping.ColumnMappings.Add("LEFT_EYE", "LEFT_EYE")
            tableMapping.ColumnMappings.Add("S_AN_GA", "S_AN_GA")
            tableMapping.ColumnMappings.Add("S_AN_NEURO", "S_AN_NEURO")
            tableMapping.ColumnMappings.Add("S_AN_STANDBY", "S_AN_STANDBY")
            tableMapping.ColumnMappings.Add("S_AN_RETROBULBAR", "S_AN_RETROBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_PERIBULBAR", "S_AN_PERIBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_TOPICAL", "S_AN_TOPICAL")
            tableMapping.ColumnMappings.Add("S_AN_SUBCONJUNCTIVAL", "S_AN_SUBCONJUNCTIVAL")
            tableMapping.ColumnMappings.Add("CONJUNCTIVA_LIMBAL_BASE", "CONJUNCTIVA_LIMBAL_BASE")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_FORNIX_BASE", "CONJUNCTIVAL_FORNIX_BASE")
            tableMapping.ColumnMappings.Add("CONJUNC_NOTE_FROM", "CONJUNC_NOTE_FROM")
            tableMapping.ColumnMappings.Add("CONJUNC_NOTE_TO", "CONJUNC_NOTE_TO")
            tableMapping.ColumnMappings.Add("SHAPE1", "SHAPE1")
            tableMapping.ColumnMappings.Add("SHAPE2", "SHAPE2")
            tableMapping.ColumnMappings.Add("SHAPE_OTHER", "SHAPE_OTHER")
            tableMapping.ColumnMappings.Add("SIZE1", "SIZE1")
            tableMapping.ColumnMappings.Add("SIZE2", "SIZE2")
            tableMapping.ColumnMappings.Add("THICKNESS13", "THICKNESS13")
            tableMapping.ColumnMappings.Add("THICKNESS12", "THICKNESS12")
            tableMapping.ColumnMappings.Add("THICKNESS23", "THICKNESS23")
            tableMapping.ColumnMappings.Add("THICKNESS_OTHER", "THICKNESS_OTHER")
            tableMapping.ColumnMappings.Add("LOCATION", "LOCATION")
            tableMapping.ColumnMappings.Add("ADJUNCTIVE_NO", "ADJUNCTIVE_NO")
            tableMapping.ColumnMappings.Add("ADJUNCTIVE_YES", "ADJUNCTIVE_YES")
            tableMapping.ColumnMappings.Add("ADJUNCTIVE_MMC", "ADJUNCTIVE_MMC")
            tableMapping.ColumnMappings.Add("ADJUNCTIVE_MMC_NOTE", "ADJUNCTIVE_MMC_NOTE")
            tableMapping.ColumnMappings.Add("ADJUNCTIVE_5FU", "ADJUNCTIVE_5FU")
            tableMapping.ColumnMappings.Add("ADJUNCTIVE_5FU_NOTE", "ADJUNCTIVE_5FU_NOTE")
            tableMapping.ColumnMappings.Add("INTRABLE", "INTRABLE")
            tableMapping.ColumnMappings.Add("SOAKED", "SOAKED")
            tableMapping.ColumnMappings.Add("SOAKED_NOTE", "SOAKED_NOTE")
            tableMapping.ColumnMappings.Add("IRRIGATION_NO", "IRRIGATION_NO")
            tableMapping.ColumnMappings.Add("IRRIGATION_YES", "IRRIGATION_YES")
            tableMapping.ColumnMappings.Add("IRRIGATION_WITH", "IRRIGATION_WITH")
            tableMapping.ColumnMappings.Add("IRRIGATION_NOT_DONE", "IRRIGATION_NOT_DONE")
            tableMapping.ColumnMappings.Add("IRRIGATION_DONE", "IRRIGATION_DONE")
            tableMapping.ColumnMappings.Add("IRRIGATION_DONE_NOTE", "IRRIGATION_DONE_NOTE")
            tableMapping.ColumnMappings.Add("PARACENTESIS_NOTE_DONE", "PARACENTESIS_NOTE_DONE")
            tableMapping.ColumnMappings.Add("PARACENTESIS_DONE", "PARACENTESIS_DONE")
            tableMapping.ColumnMappings.Add("PARACENTESIS_DONE_NOTE", "PARACENTESIS_DONE_NOTE")
            tableMapping.ColumnMappings.Add("TRABECULECTOMY1", "TRABECULECTOMY1")
            tableMapping.ColumnMappings.Add("TRABECULECTOMY2", "TRABECULECTOMY2")
            tableMapping.ColumnMappings.Add("IRIDECTOMY_NOT_DONE", "IRIDECTOMY_NOT_DONE")
            tableMapping.ColumnMappings.Add("IRIDECTOMY_DONE", "IRIDECTOMY_DONE")
            tableMapping.ColumnMappings.Add("IRIDECTOMY_DONE_NOTE", "IRIDECTOMY_DONE_NOTE")
            tableMapping.ColumnMappings.Add("SCLERAL_NOTE_NO", "SCLERAL_NOTE_NO")
            tableMapping.ColumnMappings.Add("SCLERAL_100NYLON", "SCLERAL_100NYLON")
            tableMapping.ColumnMappings.Add("SCLERAL_100PROLENE", "SCLERAL_100PROLENE")
            tableMapping.ColumnMappings.Add("SCLERAL_RELEASABLE", "SCLERAL_RELEASABLE")
            tableMapping.ColumnMappings.Add("SCLERAL_NOTE", "SCLERAL_NOTE")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_CONTINUOS", "CONJUNCTIVAL_CONTINUOS")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_INTERRUPTED", "CONJUNCTIVAL_INTERRUPTED")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_INTERRUPTED_NOTE", "CONJUNCTIVAL_INTERRUPTED_NOTE")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_100NYLON", "CONJUNCTIVAL_100NYLON")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_100PROLENE", "CONJUNCTIVAL_100PROLENE")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_OTHERS", "CONJUNCTIVAL_OTHERS")
            tableMapping.ColumnMappings.Add("COPLICATION_NONE", "COPLICATION_NONE")
            tableMapping.ColumnMappings.Add("COPLICATION_YES", "COPLICATION_YES")
            tableMapping.ColumnMappings.Add("OTHER_PROCEDURES", "OTHER_PROCEDURES")
            tableMapping.ColumnMappings.Add("SUB_GENTAL2MG", "SUB_GENTAL2MG")
            tableMapping.ColumnMappings.Add("SUB_CEFAZOLIN50MG", "SUB_CEFAZOLIN50MG")
            tableMapping.ColumnMappings.Add("SUB_DEXAMETHASONE_25MG", "SUB_DEXAMETHASONE_25MG")
            tableMapping.ColumnMappings.Add("SUB_OTHER", "SUB_OTHER")
            tableMapping.ColumnMappings.Add("TOPICAL_MAXITROL", "TOPICAL_MAXITROL")
            tableMapping.ColumnMappings.Add("TOPICAL_PILOCARPINE2", "TOPICAL_PILOCARPINE2")
            tableMapping.ColumnMappings.Add("TOPICAL_VIGAMOX", "TOPICAL_VIGAMOX")
            tableMapping.ColumnMappings.Add("TOPICAL_OTHERS", "TOPICAL_OTHERS")
            tableMapping.ColumnMappings.Add("SURGEON_SIGNATURE", "SURGEON_SIGNATURE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[S_OPER_TRABECULECTOMY] WHERE (([TRABECULECTIOMY_ID] = @Origina"& _ 
                "l_TRABECULECTIOMY_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) O"& _ 
                "R ([CREATE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA"& _ 
                "_NO] IS NULL) OR ([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1"& _ 
                " AND [PATIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNu"& _ 
                "ll_PATIENT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_P"& _ 
                "ATIENT_NAME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATI"& _ 
                "ENT_SEX] = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AG"& _ 
                "E] IS NULL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME"& _ 
                " = 1 AND [START_TIME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@"& _ 
                "IsNull_SURGEON = 1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AN"& _ 
                "D ((@IsNull_SCRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ("& _ 
                "(@IsNull_CIRCULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Origina"& _ 
                "l_CIRCULATING)) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS N"& _ 
                "ULL) OR ([ANESTHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGN"& _ 
                "OSIS = 1 AND [DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND (("& _ 
                "@IsNull_RIGHT_EYE = 1 AND [RIGHT_EYE] IS NULL) OR ([RIGHT_EYE] = @Original_RIGHT"& _ 
                "_EYE)) AND ((@IsNull_LEFT_EYE = 1 AND [LEFT_EYE] IS NULL) OR ([LEFT_EYE] = @Orig"& _ 
                "inal_LEFT_EYE)) AND ((@IsNull_S_AN_GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] ="& _ 
                " @Original_S_AN_GA)) AND ((@IsNull_S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ("& _ 
                "[S_AN_NEURO] = @Original_S_AN_NEURO)) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_S"& _ 
                "TANDBY] IS NULL) OR ([S_AN_STANDBY] = @Original_S_AN_STANDBY)) AND ((@IsNull_S_A"& _ 
                "N_RETROBULBAR = 1 AND [S_AN_RETROBULBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Orig"& _ 
                "inal_S_AN_RETROBULBAR)) AND ((@IsNull_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] "& _ 
                "IS NULL) OR ([S_AN_PERIBULBAR] = @Original_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_"& _ 
                "TOPICAL = 1 AND [S_AN_TOPICAL] IS NULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPI"& _ 
                "CAL)) AND ((@IsNull_S_AN_SUBCONJUNCTIVAL = 1 AND [S_AN_SUBCONJUNCTIVAL] IS NULL)"& _ 
                " OR ([S_AN_SUBCONJUNCTIVAL] = @Original_S_AN_SUBCONJUNCTIVAL)) AND ((@IsNull_CON"& _ 
                "JUNCTIVA_LIMBAL_BASE = 1 AND [CONJUNCTIVA_LIMBAL_BASE] IS NULL) OR ([CONJUNCTIVA"& _ 
                "_LIMBAL_BASE] = @Original_CONJUNCTIVA_LIMBAL_BASE)) AND ((@IsNull_CONJUNCTIVAL_F"& _ 
                "ORNIX_BASE = 1 AND [CONJUNCTIVAL_FORNIX_BASE] IS NULL) OR ([CONJUNCTIVAL_FORNIX_"& _ 
                "BASE] = @Original_CONJUNCTIVAL_FORNIX_BASE)) AND ((@IsNull_CONJUNC_NOTE_FROM = 1"& _ 
                " AND [CONJUNC_NOTE_FROM] IS NULL) OR ([CONJUNC_NOTE_FROM] = @Original_CONJUNC_NO"& _ 
                "TE_FROM)) AND ((@IsNull_CONJUNC_NOTE_TO = 1 AND [CONJUNC_NOTE_TO] IS NULL) OR (["& _ 
                "CONJUNC_NOTE_TO] = @Original_CONJUNC_NOTE_TO)) AND ((@IsNull_SHAPE1 = 1 AND [SHA"& _ 
                "PE1] IS NULL) OR ([SHAPE1] = @Original_SHAPE1)) AND ((@IsNull_SHAPE2 = 1 AND [SH"& _ 
                "APE2] IS NULL) OR ([SHAPE2] = @Original_SHAPE2)) AND ((@IsNull_SHAPE_OTHER = 1 A"& _ 
                "ND [SHAPE_OTHER] IS NULL) OR ([SHAPE_OTHER] = @Original_SHAPE_OTHER)) AND ((@IsN"& _ 
                "ull_SIZE1 = 1 AND [SIZE1] IS NULL) OR ([SIZE1] = @Original_SIZE1)) AND ((@IsNull"& _ 
                "_SIZE2 = 1 AND [SIZE2] IS NULL) OR ([SIZE2] = @Original_SIZE2)) AND ((@IsNull_TH"& _ 
                "ICKNESS13 = 1 AND [THICKNESS13] IS NULL) OR ([THICKNESS13] = @Original_THICKNESS"& _ 
                "13)) AND ((@IsNull_THICKNESS12 = 1 AND [THICKNESS12] IS NULL) OR ([THICKNESS12] "& _ 
                "= @Original_THICKNESS12)) AND ((@IsNull_THICKNESS23 = 1 AND [THICKNESS23] IS NUL"& _ 
                "L) OR ([THICKNESS23] = @Original_THICKNESS23)) AND ((@IsNull_THICKNESS_OTHER = 1"& _ 
                " AND [THICKNESS_OTHER] IS NULL) OR ([THICKNESS_OTHER] = @Original_THICKNESS_OTHE"& _ 
                "R)) AND ((@IsNull_LOCATION = 1 AND [LOCATION] IS NULL) OR ([LOCATION] = @Origina"& _ 
                "l_LOCATION)) AND ((@IsNull_ADJUNCTIVE_NO = 1 AND [ADJUNCTIVE_NO] IS NULL) OR ([A"& _ 
                "DJUNCTIVE_NO] = @Original_ADJUNCTIVE_NO)) AND ((@IsNull_ADJUNCTIVE_YES = 1 AND ["& _ 
                "ADJUNCTIVE_YES] IS NULL) OR ([ADJUNCTIVE_YES] = @Original_ADJUNCTIVE_YES)) AND ("& _ 
                "(@IsNull_ADJUNCTIVE_MMC = 1 AND [ADJUNCTIVE_MMC] IS NULL) OR ([ADJUNCTIVE_MMC] ="& _ 
                " @Original_ADJUNCTIVE_MMC)) AND ((@IsNull_ADJUNCTIVE_MMC_NOTE = 1 AND [ADJUNCTIV"& _ 
                "E_MMC_NOTE] IS NULL) OR ([ADJUNCTIVE_MMC_NOTE] = @Original_ADJUNCTIVE_MMC_NOTE))"& _ 
                " AND ((@IsNull_ADJUNCTIVE_5FU = 1 AND [ADJUNCTIVE_5FU] IS NULL) OR ([ADJUNCTIVE_"& _ 
                "5FU] = @Original_ADJUNCTIVE_5FU)) AND ((@IsNull_ADJUNCTIVE_5FU_NOTE = 1 AND [ADJ"& _ 
                "UNCTIVE_5FU_NOTE] IS NULL) OR ([ADJUNCTIVE_5FU_NOTE] = @Original_ADJUNCTIVE_5FU_"& _ 
                "NOTE)) AND ((@IsNull_INTRABLE = 1 AND [INTRABLE] IS NULL) OR ([INTRABLE] = @Orig"& _ 
                "inal_INTRABLE)) AND ((@IsNull_SOAKED = 1 AND [SOAKED] IS NULL) OR ([SOAKED] = @O"& _ 
                "riginal_SOAKED)) AND ((@IsNull_SOAKED_NOTE = 1 AND [SOAKED_NOTE] IS NULL) OR ([S"& _ 
                "OAKED_NOTE] = @Original_SOAKED_NOTE)) AND ((@IsNull_IRRIGATION_NO = 1 AND [IRRIG"& _ 
                "ATION_NO] IS NULL) OR ([IRRIGATION_NO] = @Original_IRRIGATION_NO)) AND ((@IsNull"& _ 
                "_IRRIGATION_YES = 1 AND [IRRIGATION_YES] IS NULL) OR ([IRRIGATION_YES] = @Origin"& _ 
                "al_IRRIGATION_YES)) AND ((@IsNull_IRRIGATION_WITH = 1 AND [IRRIGATION_WITH] IS N"& _ 
                "ULL) OR ([IRRIGATION_WITH] = @Original_IRRIGATION_WITH)) AND ((@IsNull_IRRIGATIO"& _ 
                "N_NOT_DONE = 1 AND [IRRIGATION_NOT_DONE] IS NULL) OR ([IRRIGATION_NOT_DONE] = @O"& _ 
                "riginal_IRRIGATION_NOT_DONE)) AND ((@IsNull_IRRIGATION_DONE = 1 AND [IRRIGATION_"& _ 
                "DONE] IS NULL) OR ([IRRIGATION_DONE] = @Original_IRRIGATION_DONE)) AND ((@IsNull"& _ 
                "_IRRIGATION_DONE_NOTE = 1 AND [IRRIGATION_DONE_NOTE] IS NULL) OR ([IRRIGATION_DO"& _ 
                "NE_NOTE] = @Original_IRRIGATION_DONE_NOTE)) AND ((@IsNull_PARACENTESIS_NOTE_DONE"& _ 
                " = 1 AND [PARACENTESIS_NOTE_DONE] IS NULL) OR ([PARACENTESIS_NOTE_DONE] = @Origi"& _ 
                "nal_PARACENTESIS_NOTE_DONE)) AND ((@IsNull_PARACENTESIS_DONE = 1 AND [PARACENTES"& _ 
                "IS_DONE] IS NULL) OR ([PARACENTESIS_DONE] = @Original_PARACENTESIS_DONE)) AND (("& _ 
                "@IsNull_PARACENTESIS_DONE_NOTE = 1 AND [PARACENTESIS_DONE_NOTE] IS NULL) OR ([PA"& _ 
                "RACENTESIS_DONE_NOTE] = @Original_PARACENTESIS_DONE_NOTE)) AND ((@IsNull_TRABECU"& _ 
                "LECTOMY1 = 1 AND [TRABECULECTOMY1] IS NULL) OR ([TRABECULECTOMY1] = @Original_TR"& _ 
                "ABECULECTOMY1)) AND ((@IsNull_TRABECULECTOMY2 = 1 AND [TRABECULECTOMY2] IS NULL)"& _ 
                " OR ([TRABECULECTOMY2] = @Original_TRABECULECTOMY2)) AND ((@IsNull_IRIDECTOMY_NO"& _ 
                "T_DONE = 1 AND [IRIDECTOMY_NOT_DONE] IS NULL) OR ([IRIDECTOMY_NOT_DONE] = @Origi"& _ 
                "nal_IRIDECTOMY_NOT_DONE)) AND ((@IsNull_IRIDECTOMY_DONE = 1 AND [IRIDECTOMY_DONE"& _ 
                "] IS NULL) OR ([IRIDECTOMY_DONE] = @Original_IRIDECTOMY_DONE)) AND ((@IsNull_IRI"& _ 
                "DECTOMY_DONE_NOTE = 1 AND [IRIDECTOMY_DONE_NOTE] IS NULL) OR ([IRIDECTOMY_DONE_N"& _ 
                "OTE] = @Original_IRIDECTOMY_DONE_NOTE)) AND ((@IsNull_SCLERAL_NOTE_NO = 1 AND [S"& _ 
                "CLERAL_NOTE_NO] IS NULL) OR ([SCLERAL_NOTE_NO] = @Original_SCLERAL_NOTE_NO)) AND"& _ 
                " ((@IsNull_SCLERAL_100NYLON = 1 AND [SCLERAL_100NYLON] IS NULL) OR ([SCLERAL_100"& _ 
                "NYLON] = @Original_SCLERAL_100NYLON)) AND ((@IsNull_SCLERAL_100PROLENE = 1 AND ["& _ 
                "SCLERAL_100PROLENE] IS NULL) OR ([SCLERAL_100PROLENE] = @Original_SCLERAL_100PRO"& _ 
                "LENE)) AND ((@IsNull_SCLERAL_RELEASABLE = 1 AND [SCLERAL_RELEASABLE] IS NULL) OR"& _ 
                " ([SCLERAL_RELEASABLE] = @Original_SCLERAL_RELEASABLE)) AND ((@IsNull_SCLERAL_NO"& _ 
                "TE = 1 AND [SCLERAL_NOTE] IS NULL) OR ([SCLERAL_NOTE] = @Original_SCLERAL_NOTE))"& _ 
                " AND ((@IsNull_CONJUNCTIVAL_CONTINUOS = 1 AND [CONJUNCTIVAL_CONTINUOS] IS NULL) "& _ 
                "OR ([CONJUNCTIVAL_CONTINUOS] = @Original_CONJUNCTIVAL_CONTINUOS)) AND ((@IsNull_"& _ 
                "CONJUNCTIVAL_INTERRUPTED = 1 AND [CONJUNCTIVAL_INTERRUPTED] IS NULL) OR ([CONJUN"& _ 
                "CTIVAL_INTERRUPTED] = @Original_CONJUNCTIVAL_INTERRUPTED)) AND ((@IsNull_CONJUNC"& _ 
                "TIVAL_INTERRUPTED_NOTE = 1 AND [CONJUNCTIVAL_INTERRUPTED_NOTE] IS NULL) OR ([CON"& _ 
                "JUNCTIVAL_INTERRUPTED_NOTE] = @Original_CONJUNCTIVAL_INTERRUPTED_NOTE)) AND ((@I"& _ 
                "sNull_CONJUNCTIVAL_100NYLON = 1 AND [CONJUNCTIVAL_100NYLON] IS NULL) OR ([CONJUN"& _ 
                "CTIVAL_100NYLON] = @Original_CONJUNCTIVAL_100NYLON)) AND ((@IsNull_CONJUNCTIVAL_"& _ 
                "100PROLENE = 1 AND [CONJUNCTIVAL_100PROLENE] IS NULL) OR ([CONJUNCTIVAL_100PROLE"& _ 
                "NE] = @Original_CONJUNCTIVAL_100PROLENE)) AND ((@IsNull_CONJUNCTIVAL_OTHERS = 1 "& _ 
                "AND [CONJUNCTIVAL_OTHERS] IS NULL) OR ([CONJUNCTIVAL_OTHERS] = @Original_CONJUNC"& _ 
                "TIVAL_OTHERS)) AND ((@IsNull_COPLICATION_NONE = 1 AND [COPLICATION_NONE] IS NULL"& _ 
                ") OR ([COPLICATION_NONE] = @Original_COPLICATION_NONE)) AND ((@IsNull_COPLICATIO"& _ 
                "N_YES = 1 AND [COPLICATION_YES] IS NULL) OR ([COPLICATION_YES] = @Original_COPLI"& _ 
                "CATION_YES)) AND ((@IsNull_OTHER_PROCEDURES = 1 AND [OTHER_PROCEDURES] IS NULL) "& _ 
                "OR ([OTHER_PROCEDURES] = @Original_OTHER_PROCEDURES)) AND ((@IsNull_SUB_GENTAL2M"& _ 
                "G = 1 AND [SUB_GENTAL2MG] IS NULL) OR ([SUB_GENTAL2MG] = @Original_SUB_GENTAL2MG"& _ 
                ")) AND ((@IsNull_SUB_CEFAZOLIN50MG = 1 AND [SUB_CEFAZOLIN50MG] IS NULL) OR ([SUB"& _ 
                "_CEFAZOLIN50MG] = @Original_SUB_CEFAZOLIN50MG)) AND ((@IsNull_SUB_DEXAMETHASONE_"& _ 
                "25MG = 1 AND [SUB_DEXAMETHASONE_25MG] IS NULL) OR ([SUB_DEXAMETHASONE_25MG] = @O"& _ 
                "riginal_SUB_DEXAMETHASONE_25MG)) AND ((@IsNull_SUB_OTHER = 1 AND [SUB_OTHER] IS "& _ 
                "NULL) OR ([SUB_OTHER] = @Original_SUB_OTHER)) AND ((@IsNull_TOPICAL_MAXITROL = 1"& _ 
                " AND [TOPICAL_MAXITROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Original_TOPICAL_MAXI"& _ 
                "TROL)) AND ((@IsNull_TOPICAL_PILOCARPINE2 = 1 AND [TOPICAL_PILOCARPINE2] IS NULL"& _ 
                ") OR ([TOPICAL_PILOCARPINE2] = @Original_TOPICAL_PILOCARPINE2)) AND ((@IsNull_TO"& _ 
                "PICAL_VIGAMOX = 1 AND [TOPICAL_VIGAMOX] IS NULL) OR ([TOPICAL_VIGAMOX] = @Origin"& _ 
                "al_TOPICAL_VIGAMOX)) AND ((@IsNull_TOPICAL_OTHERS = 1 AND [TOPICAL_OTHERS] IS NU"& _ 
                "LL) OR ([TOPICAL_OTHERS] = @Original_TOPICAL_OTHERS)) AND ((@IsNull_SURGEON_SIGN"& _ 
                "ATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE] = @Original_S"& _ 
                "URGEON_SIGNATURE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRABECULECTIOMY_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TRABECULECTIOMY_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNC_NOTE_FROM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_FROM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNC_NOTE_FROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_FROM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNC_NOTE_TO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_TO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNC_NOTE_TO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_TO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SHAPE1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SHAPE1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SHAPE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SHAPE2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SHAPE_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SHAPE_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIZE1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIZE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIZE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIZE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THICKNESS13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS13", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THICKNESS13", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THICKNESS12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS12", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THICKNESS12", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THICKNESS23", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS23", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THICKNESS23", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS23", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THICKNESS_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THICKNESS_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOCATION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOCATION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_MMC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_MMC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_MMC_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_MMC_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_5FU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_5FU", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_5FU_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_5FU_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRABLE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SOAKED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SOAKED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SOAKED_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SOAKED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_WITH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_WITH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_WITH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_WITH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_NOT_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NOT_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NOT_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_DONE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PARACENTESIS_NOTE_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_NOTE_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PARACENTESIS_NOTE_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_NOTE_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PARACENTESIS_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PARACENTESIS_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PARACENTESIS_DONE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PARACENTESIS_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRABECULECTOMY1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRABECULECTOMY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRABECULECTOMY2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRABECULECTOMY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRIDECTOMY_NOT_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_NOT_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRIDECTOMY_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_NOT_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRIDECTOMY_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRIDECTOMY_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRIDECTOMY_DONE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRIDECTOMY_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_NOTE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_NOTE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_100NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_100PROLENE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100PROLENE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100PROLENE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_RELEASABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_RELEASABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_RELEASABLE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_RELEASABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_CONTINUOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_CONTINUOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_CONTINUOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_CONTINUOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_INTERRUPTED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_100NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_100PROLENE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100PROLENE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100PROLENE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COPLICATION_NONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_NONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COPLICATION_NONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_NONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COPLICATION_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COPLICATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PROCEDURES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_GENTAL2MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_DEXAMETHASONE_25MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE_25MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_DEXAMETHASONE_25MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE_25MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[S_OPER_TRABECULECTOMY] ([CREATE_DATE], [OPERA_NO], [PATIENT_NO"& _ 
                "], [PATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], [SCRUB"& _ 
                "], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [RIGHT_EYE], [LEFT_EYE], [S_"& _ 
                "AN_GA], [S_AN_NEURO], [S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_"& _ 
                "AN_TOPICAL], [S_AN_SUBCONJUNCTIVAL], [CONJUNCTIVA_LIMBAL_BASE], [CONJUNCTIVAL_FO"& _ 
                "RNIX_BASE], [CONJUNC_NOTE_FROM], [CONJUNC_NOTE_TO], [SHAPE1], [SHAPE2], [SHAPE_O"& _ 
                "THER], [SIZE1], [SIZE2], [THICKNESS13], [THICKNESS12], [THICKNESS23], [THICKNESS"& _ 
                "_OTHER], [LOCATION], [ADJUNCTIVE_NO], [ADJUNCTIVE_YES], [ADJUNCTIVE_MMC], [ADJUN"& _ 
                "CTIVE_MMC_NOTE], [ADJUNCTIVE_5FU], [ADJUNCTIVE_5FU_NOTE], [INTRABLE], [SOAKED], "& _ 
                "[SOAKED_NOTE], [IRRIGATION_NO], [IRRIGATION_YES], [IRRIGATION_WITH], [IRRIGATION"& _ 
                "_NOT_DONE], [IRRIGATION_DONE], [IRRIGATION_DONE_NOTE], [PARACENTESIS_NOTE_DONE],"& _ 
                " [PARACENTESIS_DONE], [PARACENTESIS_DONE_NOTE], [TRABECULECTOMY1], [TRABECULECTO"& _ 
                "MY2], [IRIDECTOMY_NOT_DONE], [IRIDECTOMY_DONE], [IRIDECTOMY_DONE_NOTE], [SCLERAL"& _ 
                "_NOTE_NO], [SCLERAL_100NYLON], [SCLERAL_100PROLENE], [SCLERAL_RELEASABLE], [SCLE"& _ 
                "RAL_NOTE], [CONJUNCTIVAL_CONTINUOS], [CONJUNCTIVAL_INTERRUPTED], [CONJUNCTIVAL_I"& _ 
                "NTERRUPTED_NOTE], [CONJUNCTIVAL_100NYLON], [CONJUNCTIVAL_100PROLENE], [CONJUNCTI"& _ 
                "VAL_OTHERS], [COPLICATION_NONE], [COPLICATION_YES], [OTHER_PROCEDURES], [SUB_GEN"& _ 
                "TAL2MG], [SUB_CEFAZOLIN50MG], [SUB_DEXAMETHASONE_25MG], [SUB_OTHER], [TOPICAL_MA"& _ 
                "XITROL], [TOPICAL_PILOCARPINE2], [TOPICAL_VIGAMOX], [TOPICAL_OTHERS], [SURGEON_S"& _ 
                "IGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PATIENT_NO, @PATIENT_NAME, @PATIENT"& _ 
                "_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @SCRUB, @CIRCULATING, @ANESTHESIONLOG"& _ 
                "IST, @DIAGNOSIS, @RIGHT_EYE, @LEFT_EYE, @S_AN_GA, @S_AN_NEURO, @S_AN_STANDBY, @S"& _ 
                "_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @S_AN_SUBCONJUNCTIVAL, @CONJUN"& _ 
                "CTIVA_LIMBAL_BASE, @CONJUNCTIVAL_FORNIX_BASE, @CONJUNC_NOTE_FROM, @CONJUNC_NOTE_"& _ 
                "TO, @SHAPE1, @SHAPE2, @SHAPE_OTHER, @SIZE1, @SIZE2, @THICKNESS13, @THICKNESS12, "& _ 
                "@THICKNESS23, @THICKNESS_OTHER, @LOCATION, @ADJUNCTIVE_NO, @ADJUNCTIVE_YES, @ADJ"& _ 
                "UNCTIVE_MMC, @ADJUNCTIVE_MMC_NOTE, @ADJUNCTIVE_5FU, @ADJUNCTIVE_5FU_NOTE, @INTRA"& _ 
                "BLE, @SOAKED, @SOAKED_NOTE, @IRRIGATION_NO, @IRRIGATION_YES, @IRRIGATION_WITH, @"& _ 
                "IRRIGATION_NOT_DONE, @IRRIGATION_DONE, @IRRIGATION_DONE_NOTE, @PARACENTESIS_NOTE"& _ 
                "_DONE, @PARACENTESIS_DONE, @PARACENTESIS_DONE_NOTE, @TRABECULECTOMY1, @TRABECULE"& _ 
                "CTOMY2, @IRIDECTOMY_NOT_DONE, @IRIDECTOMY_DONE, @IRIDECTOMY_DONE_NOTE, @SCLERAL_"& _ 
                "NOTE_NO, @SCLERAL_100NYLON, @SCLERAL_100PROLENE, @SCLERAL_RELEASABLE, @SCLERAL_N"& _ 
                "OTE, @CONJUNCTIVAL_CONTINUOS, @CONJUNCTIVAL_INTERRUPTED, @CONJUNCTIVAL_INTERRUPT"& _ 
                "ED_NOTE, @CONJUNCTIVAL_100NYLON, @CONJUNCTIVAL_100PROLENE, @CONJUNCTIVAL_OTHERS,"& _ 
                " @COPLICATION_NONE, @COPLICATION_YES, @OTHER_PROCEDURES, @SUB_GENTAL2MG, @SUB_CE"& _ 
                "FAZOLIN50MG, @SUB_DEXAMETHASONE_25MG, @SUB_OTHER, @TOPICAL_MAXITROL, @TOPICAL_PI"& _ 
                "LOCARPINE2, @TOPICAL_VIGAMOX, @TOPICAL_OTHERS, @SURGEON_SIGNATURE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TRAB"& _ 
                "ECULECTIOMY_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PA"& _ 
                "TIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS"& _ 
                ", RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN"& _ 
                "_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, CONJUNCTIVA_LIMBAL_BASE, CONJUN"& _ 
                "CTIVAL_FORNIX_BASE, CONJUNC_NOTE_FROM, CONJUNC_NOTE_TO, SHAPE1, SHAPE2, SHAPE_OT"& _ 
                "HER, SIZE1, SIZE2, THICKNESS13, THICKNESS12, THICKNESS23, THICKNESS_OTHER, LOCAT"& _ 
                "ION, ADJUNCTIVE_NO, ADJUNCTIVE_YES, ADJUNCTIVE_MMC, ADJUNCTIVE_MMC_NOTE, ADJUNCT"& _ 
                "IVE_5FU, ADJUNCTIVE_5FU_NOTE, INTRABLE, SOAKED, SOAKED_NOTE, IRRIGATION_NO, IRRI"& _ 
                "GATION_YES, IRRIGATION_WITH, IRRIGATION_NOT_DONE, IRRIGATION_DONE, IRRIGATION_DO"& _ 
                "NE_NOTE, PARACENTESIS_NOTE_DONE, PARACENTESIS_DONE, PARACENTESIS_DONE_NOTE, TRAB"& _ 
                "ECULECTOMY1, TRABECULECTOMY2, IRIDECTOMY_NOT_DONE, IRIDECTOMY_DONE, IRIDECTOMY_D"& _ 
                "ONE_NOTE, SCLERAL_NOTE_NO, SCLERAL_100NYLON, SCLERAL_100PROLENE, SCLERAL_RELEASA"& _ 
                "BLE, SCLERAL_NOTE, CONJUNCTIVAL_CONTINUOS, CONJUNCTIVAL_INTERRUPTED, CONJUNCTIVA"& _ 
                "L_INTERRUPTED_NOTE, CONJUNCTIVAL_100NYLON, CONJUNCTIVAL_100PROLENE, CONJUNCTIVAL"& _ 
                "_OTHERS, COPLICATION_NONE, COPLICATION_YES, OTHER_PROCEDURES, SUB_GENTAL2MG, SUB"& _ 
                "_CEFAZOLIN50MG, SUB_DEXAMETHASONE_25MG, SUB_OTHER, TOPICAL_MAXITROL, TOPICAL_PIL"& _ 
                "OCARPINE2, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE FROM S_OPER_TRABEC"& _ 
                "ULECTOMY WHERE (TRABECULECTIOMY_ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNC_NOTE_FROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_FROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNC_NOTE_TO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_TO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS13", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS12", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS23", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS23", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOCATION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_MMC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_MMC_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_5FU", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_5FU_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRABLE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAKED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAKED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_WITH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_WITH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_NOTE_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_NOTE_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTOMY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTOMY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_NOTE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100PROLENE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_RELEASABLE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_RELEASABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_CONTINUOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_CONTINUOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100PROLENE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPLICATION_NONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_NONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPLICATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE_25MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE_25MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_OPER_TRABECULECTOMY] SET [CREATE_DATE] = @CREATE_DATE, [OPERA_NO]"& _ 
                " = @OPERA_NO, [PATIENT_NO] = @PATIENT_NO, [PATIENT_NAME] = @PATIENT_NAME, [PATIE"& _ 
                "NT_SEX] = @PATIENT_SEX, [PATIENT_AGE] = @PATIENT_AGE, [START_TIME] = @START_TIME"& _ 
                ", [SURGEON] = @SURGEON, [SCRUB] = @SCRUB, [CIRCULATING] = @CIRCULATING, [ANESTHE"& _ 
                "SIONLOGIST] = @ANESTHESIONLOGIST, [DIAGNOSIS] = @DIAGNOSIS, [RIGHT_EYE] = @RIGHT"& _ 
                "_EYE, [LEFT_EYE] = @LEFT_EYE, [S_AN_GA] = @S_AN_GA, [S_AN_NEURO] = @S_AN_NEURO, "& _ 
                "[S_AN_STANDBY] = @S_AN_STANDBY, [S_AN_RETROBULBAR] = @S_AN_RETROBULBAR, [S_AN_PE"& _ 
                "RIBULBAR] = @S_AN_PERIBULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL, [S_AN_SUBCONJUNCTI"& _ 
                "VAL] = @S_AN_SUBCONJUNCTIVAL, [CONJUNCTIVA_LIMBAL_BASE] = @CONJUNCTIVA_LIMBAL_BA"& _ 
                "SE, [CONJUNCTIVAL_FORNIX_BASE] = @CONJUNCTIVAL_FORNIX_BASE, [CONJUNC_NOTE_FROM] "& _ 
                "= @CONJUNC_NOTE_FROM, [CONJUNC_NOTE_TO] = @CONJUNC_NOTE_TO, [SHAPE1] = @SHAPE1, "& _ 
                "[SHAPE2] = @SHAPE2, [SHAPE_OTHER] = @SHAPE_OTHER, [SIZE1] = @SIZE1, [SIZE2] = @S"& _ 
                "IZE2, [THICKNESS13] = @THICKNESS13, [THICKNESS12] = @THICKNESS12, [THICKNESS23] "& _ 
                "= @THICKNESS23, [THICKNESS_OTHER] = @THICKNESS_OTHER, [LOCATION] = @LOCATION, [A"& _ 
                "DJUNCTIVE_NO] = @ADJUNCTIVE_NO, [ADJUNCTIVE_YES] = @ADJUNCTIVE_YES, [ADJUNCTIVE_"& _ 
                "MMC] = @ADJUNCTIVE_MMC, [ADJUNCTIVE_MMC_NOTE] = @ADJUNCTIVE_MMC_NOTE, [ADJUNCTIV"& _ 
                "E_5FU] = @ADJUNCTIVE_5FU, [ADJUNCTIVE_5FU_NOTE] = @ADJUNCTIVE_5FU_NOTE, [INTRABL"& _ 
                "E] = @INTRABLE, [SOAKED] = @SOAKED, [SOAKED_NOTE] = @SOAKED_NOTE, [IRRIGATION_NO"& _ 
                "] = @IRRIGATION_NO, [IRRIGATION_YES] = @IRRIGATION_YES, [IRRIGATION_WITH] = @IRR"& _ 
                "IGATION_WITH, [IRRIGATION_NOT_DONE] = @IRRIGATION_NOT_DONE, [IRRIGATION_DONE] = "& _ 
                "@IRRIGATION_DONE, [IRRIGATION_DONE_NOTE] = @IRRIGATION_DONE_NOTE, [PARACENTESIS_"& _ 
                "NOTE_DONE] = @PARACENTESIS_NOTE_DONE, [PARACENTESIS_DONE] = @PARACENTESIS_DONE, "& _ 
                "[PARACENTESIS_DONE_NOTE] = @PARACENTESIS_DONE_NOTE, [TRABECULECTOMY1] = @TRABECU"& _ 
                "LECTOMY1, [TRABECULECTOMY2] = @TRABECULECTOMY2, [IRIDECTOMY_NOT_DONE] = @IRIDECT"& _ 
                "OMY_NOT_DONE, [IRIDECTOMY_DONE] = @IRIDECTOMY_DONE, [IRIDECTOMY_DONE_NOTE] = @IR"& _ 
                "IDECTOMY_DONE_NOTE, [SCLERAL_NOTE_NO] = @SCLERAL_NOTE_NO, [SCLERAL_100NYLON] = @"& _ 
                "SCLERAL_100NYLON, [SCLERAL_100PROLENE] = @SCLERAL_100PROLENE, [SCLERAL_RELEASABL"& _ 
                "E] = @SCLERAL_RELEASABLE, [SCLERAL_NOTE] = @SCLERAL_NOTE, [CONJUNCTIVAL_CONTINUO"& _ 
                "S] = @CONJUNCTIVAL_CONTINUOS, [CONJUNCTIVAL_INTERRUPTED] = @CONJUNCTIVAL_INTERRU"& _ 
                "PTED, [CONJUNCTIVAL_INTERRUPTED_NOTE] = @CONJUNCTIVAL_INTERRUPTED_NOTE, [CONJUNC"& _ 
                "TIVAL_100NYLON] = @CONJUNCTIVAL_100NYLON, [CONJUNCTIVAL_100PROLENE] = @CONJUNCTI"& _ 
                "VAL_100PROLENE, [CONJUNCTIVAL_OTHERS] = @CONJUNCTIVAL_OTHERS, [COPLICATION_NONE]"& _ 
                " = @COPLICATION_NONE, [COPLICATION_YES] = @COPLICATION_YES, [OTHER_PROCEDURES] ="& _ 
                " @OTHER_PROCEDURES, [SUB_GENTAL2MG] = @SUB_GENTAL2MG, [SUB_CEFAZOLIN50MG] = @SUB"& _ 
                "_CEFAZOLIN50MG, [SUB_DEXAMETHASONE_25MG] = @SUB_DEXAMETHASONE_25MG, [SUB_OTHER] "& _ 
                "= @SUB_OTHER, [TOPICAL_MAXITROL] = @TOPICAL_MAXITROL, [TOPICAL_PILOCARPINE2] = @"& _ 
                "TOPICAL_PILOCARPINE2, [TOPICAL_VIGAMOX] = @TOPICAL_VIGAMOX, [TOPICAL_OTHERS] = @"& _ 
                "TOPICAL_OTHERS, [SURGEON_SIGNATURE] = @SURGEON_SIGNATURE WHERE (([TRABECULECTIOM"& _ 
                "Y_ID] = @Original_TRABECULECTIOMY_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_"& _ 
                "DATE] IS NULL) OR ([CREATE_DATE] = @Original_CREATE_DATE)) AND ((@IsNull_OPERA_N"& _ 
                "O = 1 AND [OPERA_NO] IS NULL) OR ([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNul"& _ 
                "l_PATIENT_NO = 1 AND [PATIENT_NO] IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_"& _ 
                "NO)) AND ((@IsNull_PATIENT_NAME = 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAM"& _ 
                "E] = @Original_PATIENT_NAME)) AND ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS"& _ 
                " NULL) OR ([PATIENT_SEX] = @Original_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1"& _ 
                " AND [PATIENT_AGE] IS NULL) OR ([PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@I"& _ 
                "sNull_START_TIME = 1 AND [START_TIME] IS NULL) OR ([START_TIME] = @Original_STAR"& _ 
                "T_TIME)) AND ((@IsNull_SURGEON = 1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Origi"& _ 
                "nal_SURGEON)) AND ((@IsNull_SCRUB = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Origin"& _ 
                "al_SCRUB)) AND ((@IsNull_CIRCULATING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULA"& _ 
                "TING] = @Original_CIRCULATING)) AND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHE"& _ 
                "SIONLOGIST] IS NULL) OR ([ANESTHESIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND"& _ 
                " ((@IsNull_DIAGNOSIS = 1 AND [DIAGNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DI"& _ 
                "AGNOSIS)) AND ((@IsNull_RIGHT_EYE = 1 AND [RIGHT_EYE] IS NULL) OR ([RIGHT_EYE] ="& _ 
                " @Original_RIGHT_EYE)) AND ((@IsNull_LEFT_EYE = 1 AND [LEFT_EYE] IS NULL) OR ([L"& _ 
                "EFT_EYE] = @Original_LEFT_EYE)) AND ((@IsNull_S_AN_GA = 1 AND [S_AN_GA] IS NULL)"& _ 
                " OR ([S_AN_GA] = @Original_S_AN_GA)) AND ((@IsNull_S_AN_NEURO = 1 AND [S_AN_NEUR"& _ 
                "O] IS NULL) OR ([S_AN_NEURO] = @Original_S_AN_NEURO)) AND ((@IsNull_S_AN_STANDBY"& _ 
                " = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_AN_STANDBY] = @Original_S_AN_STANDBY)) A"& _ 
                "ND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_AN_RETROBULBAR] IS NULL) OR ([S_AN_RETR"& _ 
                "OBULBAR] = @Original_S_AN_RETROBULBAR)) AND ((@IsNull_S_AN_PERIBULBAR = 1 AND [S"& _ 
                "_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBULBAR] = @Original_S_AN_PERIBULBAR)) AND"& _ 
                " ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOPICAL] IS NULL) OR ([S_AN_TOPICAL] = @Or"& _ 
                "iginal_S_AN_TOPICAL)) AND ((@IsNull_S_AN_SUBCONJUNCTIVAL = 1 AND [S_AN_SUBCONJUN"& _ 
                "CTIVAL] IS NULL) OR ([S_AN_SUBCONJUNCTIVAL] = @Original_S_AN_SUBCONJUNCTIVAL)) A"& _ 
                "ND ((@IsNull_CONJUNCTIVA_LIMBAL_BASE = 1 AND [CONJUNCTIVA_LIMBAL_BASE] IS NULL) "& _ 
                "OR ([CONJUNCTIVA_LIMBAL_BASE] = @Original_CONJUNCTIVA_LIMBAL_BASE)) AND ((@IsNul"& _ 
                "l_CONJUNCTIVAL_FORNIX_BASE = 1 AND [CONJUNCTIVAL_FORNIX_BASE] IS NULL) OR ([CONJ"& _ 
                "UNCTIVAL_FORNIX_BASE] = @Original_CONJUNCTIVAL_FORNIX_BASE)) AND ((@IsNull_CONJU"& _ 
                "NC_NOTE_FROM = 1 AND [CONJUNC_NOTE_FROM] IS NULL) OR ([CONJUNC_NOTE_FROM] = @Ori"& _ 
                "ginal_CONJUNC_NOTE_FROM)) AND ((@IsNull_CONJUNC_NOTE_TO = 1 AND [CONJUNC_NOTE_TO"& _ 
                "] IS NULL) OR ([CONJUNC_NOTE_TO] = @Original_CONJUNC_NOTE_TO)) AND ((@IsNull_SHA"& _ 
                "PE1 = 1 AND [SHAPE1] IS NULL) OR ([SHAPE1] = @Original_SHAPE1)) AND ((@IsNull_SH"& _ 
                "APE2 = 1 AND [SHAPE2] IS NULL) OR ([SHAPE2] = @Original_SHAPE2)) AND ((@IsNull_S"& _ 
                "HAPE_OTHER = 1 AND [SHAPE_OTHER] IS NULL) OR ([SHAPE_OTHER] = @Original_SHAPE_OT"& _ 
                "HER)) AND ((@IsNull_SIZE1 = 1 AND [SIZE1] IS NULL) OR ([SIZE1] = @Original_SIZE1"& _ 
                ")) AND ((@IsNull_SIZE2 = 1 AND [SIZE2] IS NULL) OR ([SIZE2] = @Original_SIZE2)) "& _ 
                "AND ((@IsNull_THICKNESS13 = 1 AND [THICKNESS13] IS NULL) OR ([THICKNESS13] = @Or"& _ 
                "iginal_THICKNESS13)) AND ((@IsNull_THICKNESS12 = 1 AND [THICKNESS12] IS NULL) OR"& _ 
                " ([THICKNESS12] = @Original_THICKNESS12)) AND ((@IsNull_THICKNESS23 = 1 AND [THI"& _ 
                "CKNESS23] IS NULL) OR ([THICKNESS23] = @Original_THICKNESS23)) AND ((@IsNull_THI"& _ 
                "CKNESS_OTHER = 1 AND [THICKNESS_OTHER] IS NULL) OR ([THICKNESS_OTHER] = @Origina"& _ 
                "l_THICKNESS_OTHER)) AND ((@IsNull_LOCATION = 1 AND [LOCATION] IS NULL) OR ([LOCA"& _ 
                "TION] = @Original_LOCATION)) AND ((@IsNull_ADJUNCTIVE_NO = 1 AND [ADJUNCTIVE_NO]"& _ 
                " IS NULL) OR ([ADJUNCTIVE_NO] = @Original_ADJUNCTIVE_NO)) AND ((@IsNull_ADJUNCTI"& _ 
                "VE_YES = 1 AND [ADJUNCTIVE_YES] IS NULL) OR ([ADJUNCTIVE_YES] = @Original_ADJUNC"& _ 
                "TIVE_YES)) AND ((@IsNull_ADJUNCTIVE_MMC = 1 AND [ADJUNCTIVE_MMC] IS NULL) OR ([A"& _ 
                "DJUNCTIVE_MMC] = @Original_ADJUNCTIVE_MMC)) AND ((@IsNull_ADJUNCTIVE_MMC_NOTE = "& _ 
                "1 AND [ADJUNCTIVE_MMC_NOTE] IS NULL) OR ([ADJUNCTIVE_MMC_NOTE] = @Original_ADJUN"& _ 
                "CTIVE_MMC_NOTE)) AND ((@IsNull_ADJUNCTIVE_5FU = 1 AND [ADJUNCTIVE_5FU] IS NULL) "& _ 
                "OR ([ADJUNCTIVE_5FU] = @Original_ADJUNCTIVE_5FU)) AND ((@IsNull_ADJUNCTIVE_5FU_N"& _ 
                "OTE = 1 AND [ADJUNCTIVE_5FU_NOTE] IS NULL) OR ([ADJUNCTIVE_5FU_NOTE] = @Original"& _ 
                "_ADJUNCTIVE_5FU_NOTE)) AND ((@IsNull_INTRABLE = 1 AND [INTRABLE] IS NULL) OR ([I"& _ 
                "NTRABLE] = @Original_INTRABLE)) AND ((@IsNull_SOAKED = 1 AND [SOAKED] IS NULL) O"& _ 
                "R ([SOAKED] = @Original_SOAKED)) AND ((@IsNull_SOAKED_NOTE = 1 AND [SOAKED_NOTE]"& _ 
                " IS NULL) OR ([SOAKED_NOTE] = @Original_SOAKED_NOTE)) AND ((@IsNull_IRRIGATION_N"& _ 
                "O = 1 AND [IRRIGATION_NO] IS NULL) OR ([IRRIGATION_NO] = @Original_IRRIGATION_NO"& _ 
                ")) AND ((@IsNull_IRRIGATION_YES = 1 AND [IRRIGATION_YES] IS NULL) OR ([IRRIGATIO"& _ 
                "N_YES] = @Original_IRRIGATION_YES)) AND ((@IsNull_IRRIGATION_WITH = 1 AND [IRRIG"& _ 
                "ATION_WITH] IS NULL) OR ([IRRIGATION_WITH] = @Original_IRRIGATION_WITH)) AND ((@"& _ 
                "IsNull_IRRIGATION_NOT_DONE = 1 AND [IRRIGATION_NOT_DONE] IS NULL) OR ([IRRIGATIO"& _ 
                "N_NOT_DONE] = @Original_IRRIGATION_NOT_DONE)) AND ((@IsNull_IRRIGATION_DONE = 1 "& _ 
                "AND [IRRIGATION_DONE] IS NULL) OR ([IRRIGATION_DONE] = @Original_IRRIGATION_DONE"& _ 
                ")) AND ((@IsNull_IRRIGATION_DONE_NOTE = 1 AND [IRRIGATION_DONE_NOTE] IS NULL) OR"& _ 
                " ([IRRIGATION_DONE_NOTE] = @Original_IRRIGATION_DONE_NOTE)) AND ((@IsNull_PARACE"& _ 
                "NTESIS_NOTE_DONE = 1 AND [PARACENTESIS_NOTE_DONE] IS NULL) OR ([PARACENTESIS_NOT"& _ 
                "E_DONE] = @Original_PARACENTESIS_NOTE_DONE)) AND ((@IsNull_PARACENTESIS_DONE = 1"& _ 
                " AND [PARACENTESIS_DONE] IS NULL) OR ([PARACENTESIS_DONE] = @Original_PARACENTES"& _ 
                "IS_DONE)) AND ((@IsNull_PARACENTESIS_DONE_NOTE = 1 AND [PARACENTESIS_DONE_NOTE] "& _ 
                "IS NULL) OR ([PARACENTESIS_DONE_NOTE] = @Original_PARACENTESIS_DONE_NOTE)) AND ("& _ 
                "(@IsNull_TRABECULECTOMY1 = 1 AND [TRABECULECTOMY1] IS NULL) OR ([TRABECULECTOMY1"& _ 
                "] = @Original_TRABECULECTOMY1)) AND ((@IsNull_TRABECULECTOMY2 = 1 AND [TRABECULE"& _ 
                "CTOMY2] IS NULL) OR ([TRABECULECTOMY2] = @Original_TRABECULECTOMY2)) AND ((@IsNu"& _ 
                "ll_IRIDECTOMY_NOT_DONE = 1 AND [IRIDECTOMY_NOT_DONE] IS NULL) OR ([IRIDECTOMY_NO"& _ 
                "T_DONE] = @Original_IRIDECTOMY_NOT_DONE)) AND ((@IsNull_IRIDECTOMY_DONE = 1 AND "& _ 
                "[IRIDECTOMY_DONE] IS NULL) OR ([IRIDECTOMY_DONE] = @Original_IRIDECTOMY_DONE)) A"& _ 
                "ND ((@IsNull_IRIDECTOMY_DONE_NOTE = 1 AND [IRIDECTOMY_DONE_NOTE] IS NULL) OR ([I"& _ 
                "RIDECTOMY_DONE_NOTE] = @Original_IRIDECTOMY_DONE_NOTE)) AND ((@IsNull_SCLERAL_NO"& _ 
                "TE_NO = 1 AND [SCLERAL_NOTE_NO] IS NULL) OR ([SCLERAL_NOTE_NO] = @Original_SCLER"& _ 
                "AL_NOTE_NO)) AND ((@IsNull_SCLERAL_100NYLON = 1 AND [SCLERAL_100NYLON] IS NULL) "& _ 
                "OR ([SCLERAL_100NYLON] = @Original_SCLERAL_100NYLON)) AND ((@IsNull_SCLERAL_100P"& _ 
                "ROLENE = 1 AND [SCLERAL_100PROLENE] IS NULL) OR ([SCLERAL_100PROLENE] = @Origina"& _ 
                "l_SCLERAL_100PROLENE)) AND ((@IsNull_SCLERAL_RELEASABLE = 1 AND [SCLERAL_RELEASA"& _ 
                "BLE] IS NULL) OR ([SCLERAL_RELEASABLE] = @Original_SCLERAL_RELEASABLE)) AND ((@I"& _ 
                "sNull_SCLERAL_NOTE = 1 AND [SCLERAL_NOTE] IS NULL) OR ([SCLERAL_NOTE] = @Origina"& _ 
                "l_SCLERAL_NOTE)) AND ((@IsNull_CONJUNCTIVAL_CONTINUOS = 1 AND [CONJUNCTIVAL_CONT"& _ 
                "INUOS] IS NULL) OR ([CONJUNCTIVAL_CONTINUOS] = @Original_CONJUNCTIVAL_CONTINUOS)"& _ 
                ") AND ((@IsNull_CONJUNCTIVAL_INTERRUPTED = 1 AND [CONJUNCTIVAL_INTERRUPTED] IS N"& _ 
                "ULL) OR ([CONJUNCTIVAL_INTERRUPTED] = @Original_CONJUNCTIVAL_INTERRUPTED)) AND ("& _ 
                "(@IsNull_CONJUNCTIVAL_INTERRUPTED_NOTE = 1 AND [CONJUNCTIVAL_INTERRUPTED_NOTE] I"& _ 
                "S NULL) OR ([CONJUNCTIVAL_INTERRUPTED_NOTE] = @Original_CONJUNCTIVAL_INTERRUPTED"& _ 
                "_NOTE)) AND ((@IsNull_CONJUNCTIVAL_100NYLON = 1 AND [CONJUNCTIVAL_100NYLON] IS N"& _ 
                "ULL) OR ([CONJUNCTIVAL_100NYLON] = @Original_CONJUNCTIVAL_100NYLON)) AND ((@IsNu"& _ 
                "ll_CONJUNCTIVAL_100PROLENE = 1 AND [CONJUNCTIVAL_100PROLENE] IS NULL) OR ([CONJU"& _ 
                "NCTIVAL_100PROLENE] = @Original_CONJUNCTIVAL_100PROLENE)) AND ((@IsNull_CONJUNCT"& _ 
                "IVAL_OTHERS = 1 AND [CONJUNCTIVAL_OTHERS] IS NULL) OR ([CONJUNCTIVAL_OTHERS] = @"& _ 
                "Original_CONJUNCTIVAL_OTHERS)) AND ((@IsNull_COPLICATION_NONE = 1 AND [COPLICATI"& _ 
                "ON_NONE] IS NULL) OR ([COPLICATION_NONE] = @Original_COPLICATION_NONE)) AND ((@I"& _ 
                "sNull_COPLICATION_YES = 1 AND [COPLICATION_YES] IS NULL) OR ([COPLICATION_YES] ="& _ 
                " @Original_COPLICATION_YES)) AND ((@IsNull_OTHER_PROCEDURES = 1 AND [OTHER_PROCE"& _ 
                "DURES] IS NULL) OR ([OTHER_PROCEDURES] = @Original_OTHER_PROCEDURES)) AND ((@IsN"& _ 
                "ull_SUB_GENTAL2MG = 1 AND [SUB_GENTAL2MG] IS NULL) OR ([SUB_GENTAL2MG] = @Origin"& _ 
                "al_SUB_GENTAL2MG)) AND ((@IsNull_SUB_CEFAZOLIN50MG = 1 AND [SUB_CEFAZOLIN50MG] I"& _ 
                "S NULL) OR ([SUB_CEFAZOLIN50MG] = @Original_SUB_CEFAZOLIN50MG)) AND ((@IsNull_SU"& _ 
                "B_DEXAMETHASONE_25MG = 1 AND [SUB_DEXAMETHASONE_25MG] IS NULL) OR ([SUB_DEXAMETH"& _ 
                "ASONE_25MG] = @Original_SUB_DEXAMETHASONE_25MG)) AND ((@IsNull_SUB_OTHER = 1 AND"& _ 
                " [SUB_OTHER] IS NULL) OR ([SUB_OTHER] = @Original_SUB_OTHER)) AND ((@IsNull_TOPI"& _ 
                "CAL_MAXITROL = 1 AND [TOPICAL_MAXITROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Origi"& _ 
                "nal_TOPICAL_MAXITROL)) AND ((@IsNull_TOPICAL_PILOCARPINE2 = 1 AND [TOPICAL_PILOC"& _ 
                "ARPINE2] IS NULL) OR ([TOPICAL_PILOCARPINE2] = @Original_TOPICAL_PILOCARPINE2)) "& _ 
                "AND ((@IsNull_TOPICAL_VIGAMOX = 1 AND [TOPICAL_VIGAMOX] IS NULL) OR ([TOPICAL_VI"& _ 
                "GAMOX] = @Original_TOPICAL_VIGAMOX)) AND ((@IsNull_TOPICAL_OTHERS = 1 AND [TOPIC"& _ 
                "AL_OTHERS] IS NULL) OR ([TOPICAL_OTHERS] = @Original_TOPICAL_OTHERS)) AND ((@IsN"& _ 
                "ull_SURGEON_SIGNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATUR"& _ 
                "E] = @Original_SURGEON_SIGNATURE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT TRABECULECTIOMY_ID, CREATE_DATE, OP"& _ 
                "ERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON,"& _ 
                " SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA,"& _ 
                " S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN"& _ 
                "_SUBCONJUNCTIVAL, CONJUNCTIVA_LIMBAL_BASE, CONJUNCTIVAL_FORNIX_BASE, CONJUNC_NOT"& _ 
                "E_FROM, CONJUNC_NOTE_TO, SHAPE1, SHAPE2, SHAPE_OTHER, SIZE1, SIZE2, THICKNESS13,"& _ 
                " THICKNESS12, THICKNESS23, THICKNESS_OTHER, LOCATION, ADJUNCTIVE_NO, ADJUNCTIVE_"& _ 
                "YES, ADJUNCTIVE_MMC, ADJUNCTIVE_MMC_NOTE, ADJUNCTIVE_5FU, ADJUNCTIVE_5FU_NOTE, I"& _ 
                "NTRABLE, SOAKED, SOAKED_NOTE, IRRIGATION_NO, IRRIGATION_YES, IRRIGATION_WITH, IR"& _ 
                "RIGATION_NOT_DONE, IRRIGATION_DONE, IRRIGATION_DONE_NOTE, PARACENTESIS_NOTE_DONE"& _ 
                ", PARACENTESIS_DONE, PARACENTESIS_DONE_NOTE, TRABECULECTOMY1, TRABECULECTOMY2, I"& _ 
                "RIDECTOMY_NOT_DONE, IRIDECTOMY_DONE, IRIDECTOMY_DONE_NOTE, SCLERAL_NOTE_NO, SCLE"& _ 
                "RAL_100NYLON, SCLERAL_100PROLENE, SCLERAL_RELEASABLE, SCLERAL_NOTE, CONJUNCTIVAL"& _ 
                "_CONTINUOS, CONJUNCTIVAL_INTERRUPTED, CONJUNCTIVAL_INTERRUPTED_NOTE, CONJUNCTIVA"& _ 
                "L_100NYLON, CONJUNCTIVAL_100PROLENE, CONJUNCTIVAL_OTHERS, COPLICATION_NONE, COPL"& _ 
                "ICATION_YES, OTHER_PROCEDURES, SUB_GENTAL2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASO"& _ 
                "NE_25MG, SUB_OTHER, TOPICAL_MAXITROL, TOPICAL_PILOCARPINE2, TOPICAL_VIGAMOX, TOP"& _ 
                "ICAL_OTHERS, SURGEON_SIGNATURE FROM S_OPER_TRABECULECTOMY WHERE (TRABECULECTIOMY"& _ 
                "_ID = @TRABECULECTIOMY_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNC_NOTE_FROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_FROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNC_NOTE_TO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_TO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS13", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS12", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS23", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS23", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOCATION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_MMC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_MMC_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_5FU", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_5FU_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRABLE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAKED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAKED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_WITH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_WITH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_NOTE_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_NOTE_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTOMY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTOMY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_NOTE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100PROLENE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_RELEASABLE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_RELEASABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_CONTINUOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_CONTINUOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100PROLENE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPLICATION_NONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_NONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPLICATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE_25MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE_25MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRABECULECTIOMY_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "TRABECULECTIOMY_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNC_NOTE_FROM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_FROM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNC_NOTE_FROM", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_FROM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNC_NOTE_TO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_TO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNC_NOTE_TO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_TO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SHAPE1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SHAPE1", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SHAPE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SHAPE2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SHAPE_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SHAPE_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIZE1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIZE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIZE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIZE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THICKNESS13", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS13", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THICKNESS13", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS13", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THICKNESS12", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS12", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THICKNESS12", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS12", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THICKNESS23", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS23", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THICKNESS23", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS23", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_THICKNESS_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_THICKNESS_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LOCATION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LOCATION", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_MMC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_MMC", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_MMC_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_MMC_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_5FU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_5FU", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ADJUNCTIVE_5FU_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ADJUNCTIVE_5FU_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTRABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTRABLE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SOAKED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SOAKED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SOAKED_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SOAKED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_NO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_WITH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_WITH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_WITH", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_WITH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_NOT_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NOT_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NOT_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRRIGATION_DONE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRRIGATION_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PARACENTESIS_NOTE_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_NOTE_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PARACENTESIS_NOTE_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_NOTE_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PARACENTESIS_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PARACENTESIS_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PARACENTESIS_DONE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PARACENTESIS_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRABECULECTOMY1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRABECULECTOMY1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TRABECULECTOMY2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRABECULECTOMY2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRIDECTOMY_NOT_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_NOT_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRIDECTOMY_NOT_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_NOT_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRIDECTOMY_DONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRIDECTOMY_DONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IRIDECTOMY_DONE_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IRIDECTOMY_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_NOTE_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_NOTE_NO", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_100NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_100PROLENE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100PROLENE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100PROLENE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_RELEASABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_RELEASABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_RELEASABLE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_RELEASABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCLERAL_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCLERAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_CONTINUOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_CONTINUOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_CONTINUOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_CONTINUOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_INTERRUPTED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_100NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_100PROLENE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100PROLENE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100PROLENE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COPLICATION_NONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_NONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COPLICATION_NONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_NONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COPLICATION_YES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_YES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COPLICATION_YES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_YES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OTHER_PROCEDURES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_GENTAL2MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_DEXAMETHASONE_25MG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE_25MG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_DEXAMETHASONE_25MG", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE_25MG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUB_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_PILOCARPINE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_PILOCARPINE2", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTIOMY_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "TRABECULECTIOMY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TRABECULECTIOMY_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIE"& _ 
                "NT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST,"& _ 
                " DIAGNOSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBU"& _ 
                "LBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, CONJUNCTIVA_LIMBAL_BA"& _ 
                "SE, CONJUNCTIVAL_FORNIX_BASE, CONJUNC_NOTE_FROM, CONJUNC_NOTE_TO, SHAPE1, SHAPE2"& _ 
                ", SHAPE_OTHER, SIZE1, SIZE2, THICKNESS13, THICKNESS12, THICKNESS23, THICKNESS_OT"& _ 
                "HER, LOCATION, ADJUNCTIVE_NO, ADJUNCTIVE_YES, ADJUNCTIVE_MMC, ADJUNCTIVE_MMC_NOT"& _ 
                "E, ADJUNCTIVE_5FU, ADJUNCTIVE_5FU_NOTE, INTRABLE, SOAKED, SOAKED_NOTE, IRRIGATIO"& _ 
                "N_NO, IRRIGATION_YES, IRRIGATION_WITH, IRRIGATION_NOT_DONE, IRRIGATION_DONE, IRR"& _ 
                "IGATION_DONE_NOTE, PARACENTESIS_NOTE_DONE, PARACENTESIS_DONE, PARACENTESIS_DONE_"& _ 
                "NOTE, TRABECULECTOMY1, TRABECULECTOMY2, IRIDECTOMY_NOT_DONE, IRIDECTOMY_DONE, IR"& _ 
                "IDECTOMY_DONE_NOTE, SCLERAL_NOTE_NO, SCLERAL_100NYLON, SCLERAL_100PROLENE, SCLER"& _ 
                "AL_RELEASABLE, SCLERAL_NOTE, CONJUNCTIVAL_CONTINUOS, CONJUNCTIVAL_INTERRUPTED, C"& _ 
                "ONJUNCTIVAL_INTERRUPTED_NOTE, CONJUNCTIVAL_100NYLON, CONJUNCTIVAL_100PROLENE, CO"& _ 
                "NJUNCTIVAL_OTHERS, COPLICATION_NONE, COPLICATION_YES, OTHER_PROCEDURES, SUB_GENT"& _ 
                "AL2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE_25MG, SUB_OTHER, TOPICAL_MAXITROL, T"& _ 
                "OPICAL_PILOCARPINE2, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE FROM dbo"& _ 
                ".S_OPER_TRABECULECTOMY"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT TRABECULECTIOMY_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIE"& _ 
                "NT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST,"& _ 
                " DIAGNOSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBU"& _ 
                "LBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, CONJUNCTIVA_LIMBAL_BA"& _ 
                "SE, CONJUNCTIVAL_FORNIX_BASE, CONJUNC_NOTE_FROM, CONJUNC_NOTE_TO, SHAPE1, SHAPE2"& _ 
                ", SHAPE_OTHER, SIZE1, SIZE2, THICKNESS13, THICKNESS12, THICKNESS23, THICKNESS_OT"& _ 
                "HER, LOCATION, ADJUNCTIVE_NO, ADJUNCTIVE_YES, ADJUNCTIVE_MMC, ADJUNCTIVE_MMC_NOT"& _ 
                "E, ADJUNCTIVE_5FU, ADJUNCTIVE_5FU_NOTE, INTRABLE, SOAKED, SOAKED_NOTE, IRRIGATIO"& _ 
                "N_NO, IRRIGATION_YES, IRRIGATION_WITH, IRRIGATION_NOT_DONE, IRRIGATION_DONE, IRR"& _ 
                "IGATION_DONE_NOTE, PARACENTESIS_NOTE_DONE, PARACENTESIS_DONE, PARACENTESIS_DONE_"& _ 
                "NOTE, TRABECULECTOMY1, TRABECULECTOMY2, IRIDECTOMY_NOT_DONE, IRIDECTOMY_DONE, IR"& _ 
                "IDECTOMY_DONE_NOTE, SCLERAL_NOTE_NO, SCLERAL_100NYLON, SCLERAL_100PROLENE, SCLER"& _ 
                "AL_RELEASABLE, SCLERAL_NOTE, CONJUNCTIVAL_CONTINUOS, CONJUNCTIVAL_INTERRUPTED, C"& _ 
                "ONJUNCTIVAL_INTERRUPTED_NOTE, CONJUNCTIVAL_100NYLON, CONJUNCTIVAL_100PROLENE, CO"& _ 
                "NJUNCTIVAL_OTHERS, COPLICATION_NONE, COPLICATION_YES, OTHER_PROCEDURES, SUB_GENT"& _ 
                "AL2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE_25MG, SUB_OTHER, TOPICAL_MAXITROL, T"& _ 
                "OPICAL_PILOCARPINE2, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE FROM dbo"& _ 
                ".S_OPER_TRABECULECTOMY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE TRABECULECTIOMY_ID=@TRABECULECTIOMY_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTIOMY_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "TRABECULECTIOMY_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [dbo].[S_OPER_TRABECULECTOMY] ([CREATE_DATE], [OPERA_NO], [PATIENT_NO"& _ 
                "], [PATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], [SCRUB"& _ 
                "], [CIRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [RIGHT_EYE], [LEFT_EYE], [S_"& _ 
                "AN_GA], [S_AN_NEURO], [S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_"& _ 
                "AN_TOPICAL], [S_AN_SUBCONJUNCTIVAL], [CONJUNCTIVA_LIMBAL_BASE], [CONJUNCTIVAL_FO"& _ 
                "RNIX_BASE], [CONJUNC_NOTE_FROM], [CONJUNC_NOTE_TO], [SHAPE1], [SHAPE2], [SHAPE_O"& _ 
                "THER], [SIZE1], [SIZE2], [THICKNESS13], [THICKNESS12], [THICKNESS23], [THICKNESS"& _ 
                "_OTHER], [LOCATION], [ADJUNCTIVE_NO], [ADJUNCTIVE_YES], [ADJUNCTIVE_MMC], [ADJUN"& _ 
                "CTIVE_MMC_NOTE], [ADJUNCTIVE_5FU], [ADJUNCTIVE_5FU_NOTE], [INTRABLE], [SOAKED], "& _ 
                "[SOAKED_NOTE], [IRRIGATION_NO], [IRRIGATION_YES], [IRRIGATION_WITH], [IRRIGATION"& _ 
                "_NOT_DONE], [IRRIGATION_DONE], [IRRIGATION_DONE_NOTE], [PARACENTESIS_NOTE_DONE],"& _ 
                " [PARACENTESIS_DONE], [PARACENTESIS_DONE_NOTE], [TRABECULECTOMY1], [TRABECULECTO"& _ 
                "MY2], [IRIDECTOMY_NOT_DONE], [IRIDECTOMY_DONE], [IRIDECTOMY_DONE_NOTE], [SCLERAL"& _ 
                "_NOTE_NO], [SCLERAL_100NYLON], [SCLERAL_100PROLENE], [SCLERAL_RELEASABLE], [SCLE"& _ 
                "RAL_NOTE], [CONJUNCTIVAL_CONTINUOS], [CONJUNCTIVAL_INTERRUPTED], [CONJUNCTIVAL_I"& _ 
                "NTERRUPTED_NOTE], [CONJUNCTIVAL_100NYLON], [CONJUNCTIVAL_100PROLENE], [CONJUNCTI"& _ 
                "VAL_OTHERS], [COPLICATION_NONE], [COPLICATION_YES], [OTHER_PROCEDURES], [SUB_GEN"& _ 
                "TAL2MG], [SUB_CEFAZOLIN50MG], [SUB_DEXAMETHASONE_25MG], [SUB_OTHER], [TOPICAL_MA"& _ 
                "XITROL], [TOPICAL_PILOCARPINE2], [TOPICAL_VIGAMOX], [TOPICAL_OTHERS], [SURGEON_S"& _ 
                "IGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PATIENT_NO, @PATIENT_NAME, @PATIENT"& _ 
                "_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @SCRUB, @CIRCULATING, @ANESTHESIONLOG"& _ 
                "IST, @DIAGNOSIS, @RIGHT_EYE, @LEFT_EYE, @S_AN_GA, @S_AN_NEURO, @S_AN_STANDBY, @S"& _ 
                "_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @S_AN_SUBCONJUNCTIVAL, @CONJUN"& _ 
                "CTIVA_LIMBAL_BASE, @CONJUNCTIVAL_FORNIX_BASE, @CONJUNC_NOTE_FROM, @CONJUNC_NOTE_"& _ 
                "TO, @SHAPE1, @SHAPE2, @SHAPE_OTHER, @SIZE1, @SIZE2, @THICKNESS13, @THICKNESS12, "& _ 
                "@THICKNESS23, @THICKNESS_OTHER, @LOCATION, @ADJUNCTIVE_NO, @ADJUNCTIVE_YES, @ADJ"& _ 
                "UNCTIVE_MMC, @ADJUNCTIVE_MMC_NOTE, @ADJUNCTIVE_5FU, @ADJUNCTIVE_5FU_NOTE, @INTRA"& _ 
                "BLE, @SOAKED, @SOAKED_NOTE, @IRRIGATION_NO, @IRRIGATION_YES, @IRRIGATION_WITH, @"& _ 
                "IRRIGATION_NOT_DONE, @IRRIGATION_DONE, @IRRIGATION_DONE_NOTE, @PARACENTESIS_NOTE"& _ 
                "_DONE, @PARACENTESIS_DONE, @PARACENTESIS_DONE_NOTE, @TRABECULECTOMY1, @TRABECULE"& _ 
                "CTOMY2, @IRIDECTOMY_NOT_DONE, @IRIDECTOMY_DONE, @IRIDECTOMY_DONE_NOTE, @SCLERAL_"& _ 
                "NOTE_NO, @SCLERAL_100NYLON, @SCLERAL_100PROLENE, @SCLERAL_RELEASABLE, @SCLERAL_N"& _ 
                "OTE, @CONJUNCTIVAL_CONTINUOS, @CONJUNCTIVAL_INTERRUPTED, @CONJUNCTIVAL_INTERRUPT"& _ 
                "ED_NOTE, @CONJUNCTIVAL_100NYLON, @CONJUNCTIVAL_100PROLENE, @CONJUNCTIVAL_OTHERS,"& _ 
                " @COPLICATION_NONE, @COPLICATION_YES, @OTHER_PROCEDURES, @SUB_GENTAL2MG, @SUB_CE"& _ 
                "FAZOLIN50MG, @SUB_DEXAMETHASONE_25MG, @SUB_OTHER, @TOPICAL_MAXITROL, @TOPICAL_PI"& _ 
                "LOCARPINE2, @TOPICAL_VIGAMOX, @TOPICAL_OTHERS, @SURGEON_SIGNATURE);"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNC_NOTE_FROM", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_FROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNC_NOTE_TO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_TO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE1", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE2", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE_OTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE2", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS13", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS12", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS23", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS23", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS_OTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOCATION", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_MMC", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_MMC_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_5FU", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_5FU_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRABLE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAKED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAKED_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_WITH", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_WITH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_NOT_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_NOTE_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_NOTE_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTOMY1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTOMY2", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_NOT_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_NOTE_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_100NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100PROLENE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_RELEASABLE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_RELEASABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_CONTINUOS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_CONTINUOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_100NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100PROLENE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPLICATION_NONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_NONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPLICATION_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE_25MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE_25MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE2", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE       S_OPER_TRABECULECTOMY"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                START_TIME = @START_TIME, "& _ 
                "SURGEON = @SURGEON, SCRUB = @SCRUB, CIRCULATING = @CIRCULATING, ANESTHESIONLOGIS"& _ 
                "T = @ANESTHESIONLOGIST, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DIAGNOSIS = @DIAGNOSIS, RIGHT"& _ 
                "_EYE = @RIGHT_EYE, LEFT_EYE = @LEFT_EYE, S_AN_GA = @S_AN_GA, S_AN_NEURO = @S_AN_"& _ 
                "NEURO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_AN_STANDBY = @S_AN_STANDBY, S_AN_RETROBULBAR"& _ 
                " = @S_AN_RETROBULBAR, S_AN_PERIBULBAR = @S_AN_PERIBULBAR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     S_AN_TOPICAL = @S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL = @S_AN_SUBCONJUNCTIVAL,"& _ 
                " CONJUNCTIVA_LIMBAL_BASE = @CONJUNCTIVA_LIMBAL_BASE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "CONJUNCTIVAL_FORNIX_BASE = @CONJUNCTIVAL_FORNIX_BASE, CONJUNC_NOTE_FROM = @CONJU"& _ 
                "NC_NOTE_FROM, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CONJUNC_NOTE_TO = @CONJUNC_NOTE_TO, SHA"& _ 
                "PE1 = @SHAPE1, SHAPE2 = @SHAPE2, SHAPE_OTHER = @SHAPE_OTHER, SIZE1 = @SIZE1, SIZ"& _ 
                "E2 = @SIZE2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         THICKNESS13 = @THICKNESS13, THICKNESS12 "& _ 
                "= @THICKNESS12, THICKNESS23 = @THICKNESS23, THICKNESS_OTHER = @THICKNESS_OTHER, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LOCATION = @LOCATION, ADJUNCTIVE_NO = @ADJUNCTIVE_NO,"& _ 
                " ADJUNCTIVE_YES = @ADJUNCTIVE_YES, ADJUNCTIVE_MMC = @ADJUNCTIVE_MMC, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                ADJUNCTIVE_MMC_NOTE = @ADJUNCTIVE_MMC_NOTE, ADJUNCTIVE_5FU = @AD"& _ 
                "JUNCTIVE_5FU, ADJUNCTIVE_5FU_NOTE = @ADJUNCTIVE_5FU_NOTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     INTRABLE = @INTRABLE, SOAKED = @SOAKED, SOAKED_NOTE = @SOAKED_NOTE, IRRIGAT"& _ 
                "ION_NO = @IRRIGATION_NO, IRRIGATION_YES = @IRRIGATION_YES, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      IRRIGATION_WITH = @IRRIGATION_WITH, IRRIGATION_NOT_DONE = @IRRIGATION_NOT_"& _ 
                "DONE, IRRIGATION_DONE = @IRRIGATION_DONE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         IRRIGATION_"& _ 
                "DONE_NOTE = @IRRIGATION_DONE_NOTE, PARACENTESIS_NOTE_DONE = @PARACENTESIS_NOTE_D"& _ 
                "ONE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PARACENTESIS_DONE = @PARACENTESIS_DONE, PARACENT"& _ 
                "ESIS_DONE_NOTE = @PARACENTESIS_DONE_NOTE, TRABECULECTOMY1 = @TRABECULECTOMY1,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                         TRABECULECTOMY2 = @TRABECULECTOMY2, IRIDECTOMY_NOT_DONE"& _ 
                " = @IRIDECTOMY_NOT_DONE, IRIDECTOMY_DONE = @IRIDECTOMY_DONE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        IRIDECTOMY_DONE_NOTE = @IRIDECTOMY_DONE_NOTE, SCLERAL_NOTE_NO = @SCLERAL"& _ 
                "_NOTE_NO, SCLERAL_100NYLON = @SCLERAL_100NYLON, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SCLER"& _ 
                "AL_100PROLENE = @SCLERAL_100PROLENE, SCLERAL_RELEASABLE = @SCLERAL_RELEASABLE, S"& _ 
                "CLERAL_NOTE = @SCLERAL_NOTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CONJUNCTIVAL_CONTINUOS ="& _ 
                " @CONJUNCTIVAL_CONTINUOS, CONJUNCTIVAL_INTERRUPTED = @CONJUNCTIVAL_INTERRUPTED, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CONJUNCTIVAL_INTERRUPTED_NOTE = @CONJUNCTIVAL_INTERRU"& _ 
                "PTED_NOTE, CONJUNCTIVAL_100NYLON = @CONJUNCTIVAL_100NYLON, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      CONJUNCTIVAL_100PROLENE = @CONJUNCTIVAL_100PROLENE, CONJUNCTIVAL_OTHERS = "& _ 
                "@CONJUNCTIVAL_OTHERS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         COPLICATION_NONE = @COPLICATION"& _ 
                "_NONE, COPLICATION_YES = @COPLICATION_YES, OTHER_PROCEDURES = @OTHER_PROCEDURES,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUB_GENTAL2MG = @SUB_GENTAL2MG, SUB_CEFAZOLIN50MG = "& _ 
                "@SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE_25MG = @SUB_DEXAMETHASONE_25MG, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 SUB_OTHER = @SUB_OTHER, TOPICAL_MAXITROL = @TOPICAL_MAXITROL, T"& _ 
                "OPICAL_PILOCARPINE2 = @TOPICAL_PILOCARPINE2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TOPICAL_"& _ 
                "VIGAMOX = @TOPICAL_VIGAMOX, TOPICAL_OTHERS = @TOPICAL_OTHERS, SURGEON_SIGNATURE "& _ 
                "= @SURGEON_SIGNATURE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (TRABECULECTIOMY_ID = @Original_TRABECULECTIO"& _ 
                "MY_ID); "
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVA_LIMBAL_BASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_FORNIX_BASE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNC_NOTE_FROM", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_FROM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNC_NOTE_TO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNC_NOTE_TO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE1", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE2", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SHAPE_OTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SHAPE_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE2", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS13", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS13", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS12", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS12", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS23", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS23", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@THICKNESS_OTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "THICKNESS_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LOCATION", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "LOCATION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_MMC", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_MMC_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_MMC_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_5FU", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ADJUNCTIVE_5FU_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ADJUNCTIVE_5FU_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTRABLE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "INTRABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAKED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SOAKED_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SOAKED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_NO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_WITH", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_WITH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_NOT_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRRIGATION_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IRRIGATION_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_NOTE_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_NOTE_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PARACENTESIS_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PARACENTESIS_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTOMY1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TRABECULECTOMY2", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TRABECULECTOMY2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_NOT_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_NOT_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_DONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IRIDECTOMY_DONE_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "IRIDECTOMY_DONE_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_NOTE_NO", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_100NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_100PROLENE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_RELEASABLE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_RELEASABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCLERAL_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCLERAL_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_CONTINUOS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_CONTINUOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_INTERRUPTED_NOTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_100NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_100PROLENE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_100PROLENE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPLICATION_NONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_NONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COPLICATION_YES", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "COPLICATION_YES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OTHER_PROCEDURES", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "OTHER_PROCEDURES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_GENTAL2MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_GENTAL2MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_CEFAZOLIN50MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_CEFAZOLIN50MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_DEXAMETHASONE_25MG", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_DEXAMETHASONE_25MG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUB_OTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SUB_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_PILOCARPINE2", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_PILOCARPINE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_VIGAMOX", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_VIGAMOX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TRABECULECTIOMY_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "TRABECULECTIOMY_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable = New DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable, ByVal TRABECULECTIOMY_ID As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(TRABECULECTIOMY_ID,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectTrabeculectomy(ByVal TRABECULECTIOMY_ID As Decimal) As DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(TRABECULECTIOMY_ID,Decimal)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable = New DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.S_OPER_TRABECULECTOMYDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "S_OPER_TRABECULECTOMY")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_TRABECULECTIOMY_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVA_LIMBAL_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_FORNIX_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNC_NOTE_FROM As String,  _
                    ByVal Original_CONJUNC_NOTE_TO As String,  _
                    ByVal Original_SHAPE1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SHAPE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SHAPE_OTHER As String,  _
                    ByVal Original_SIZE1 As String,  _
                    ByVal Original_SIZE2 As String,  _
                    ByVal Original_THICKNESS13 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS12 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS23 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS_OTHER As String,  _
                    ByVal Original_LOCATION As String,  _
                    ByVal Original_ADJUNCTIVE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_MMC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal Original_ADJUNCTIVE_5FU As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal Original_INTRABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SOAKED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SOAKED_NOTE As String,  _
                    ByVal Original_IRRIGATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_WITH As String,  _
                    ByVal Original_IRRIGATION_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_DONE_NOTE As String,  _
                    ByVal Original_PARACENTESIS_NOTE_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PARACENTESIS_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PARACENTESIS_DONE_NOTE As String,  _
                    ByVal Original_TRABECULECTOMY1 As String,  _
                    ByVal Original_TRABECULECTOMY2 As String,  _
                    ByVal Original_IRIDECTOMY_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRIDECTOMY_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal Original_SCLERAL_NOTE_NO As String,  _
                    ByVal Original_SCLERAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_RELEASABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_NOTE As String,  _
                    ByVal Original_CONJUNCTIVAL_CONTINUOS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal Original_CONJUNCTIVAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_OTHERS As String,  _
                    ByVal Original_COPLICATION_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PROCEDURES As String,  _
                    ByVal Original_SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE_25MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHER As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_TRABECULECTIOMY_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVA_LIMBAL_BASE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CONJUNCTIVA_LIMBAL_BASE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_FORNIX_BASE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_CONJUNCTIVAL_FORNIX_BASE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNC_NOTE_FROM Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_CONJUNC_NOTE_FROM,String)
            End If
            If (Original_CONJUNC_NOTE_TO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_CONJUNC_NOTE_TO,String)
            End If
            If (Original_SHAPE1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_SHAPE1.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_SHAPE2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_SHAPE2.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_SHAPE_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_SHAPE_OTHER,String)
            End If
            If (Original_SIZE1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_SIZE1,String)
            End If
            If (Original_SIZE2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_SIZE2,String)
            End If
            If (Original_THICKNESS13.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_THICKNESS13.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_THICKNESS12.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_THICKNESS12.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_THICKNESS23.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_THICKNESS23.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_THICKNESS_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_THICKNESS_OTHER,String)
            End If
            If (Original_LOCATION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_LOCATION,String)
            End If
            If (Original_ADJUNCTIVE_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_ADJUNCTIVE_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_ADJUNCTIVE_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_ADJUNCTIVE_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_ADJUNCTIVE_MMC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_ADJUNCTIVE_MMC.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_ADJUNCTIVE_MMC_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_ADJUNCTIVE_MMC_NOTE,String)
            End If
            If (Original_ADJUNCTIVE_5FU.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_ADJUNCTIVE_5FU.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_ADJUNCTIVE_5FU_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_ADJUNCTIVE_5FU_NOTE,String)
            End If
            If (Original_INTRABLE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_INTRABLE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_SOAKED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_SOAKED.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_SOAKED_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_SOAKED_NOTE,String)
            End If
            If (Original_IRRIGATION_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_IRRIGATION_NO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_IRRIGATION_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_IRRIGATION_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_IRRIGATION_WITH Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_IRRIGATION_WITH,String)
            End If
            If (Original_IRRIGATION_NOT_DONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_IRRIGATION_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_IRRIGATION_DONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_IRRIGATION_DONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_IRRIGATION_DONE_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_IRRIGATION_DONE_NOTE,String)
            End If
            If (Original_PARACENTESIS_NOTE_DONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_PARACENTESIS_NOTE_DONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_PARACENTESIS_DONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_PARACENTESIS_DONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_PARACENTESIS_DONE_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_PARACENTESIS_DONE_NOTE,String)
            End If
            If (Original_TRABECULECTOMY1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_TRABECULECTOMY1,String)
            End If
            If (Original_TRABECULECTOMY2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_TRABECULECTOMY2,String)
            End If
            If (Original_IRIDECTOMY_NOT_DONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_IRIDECTOMY_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_IRIDECTOMY_DONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = CType(Original_IRIDECTOMY_DONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_IRIDECTOMY_DONE_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(116).Value = CType(Original_IRIDECTOMY_DONE_NOTE,String)
            End If
            If (Original_SCLERAL_NOTE_NO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(118).Value = CType(Original_SCLERAL_NOTE_NO,String)
            End If
            If (Original_SCLERAL_100NYLON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = CType(Original_SCLERAL_100NYLON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(120).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLERAL_100PROLENE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = CType(Original_SCLERAL_100PROLENE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLERAL_RELEASABLE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = CType(Original_SCLERAL_RELEASABLE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLERAL_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(126).Value = CType(Original_SCLERAL_NOTE,String)
            End If
            If (Original_CONJUNCTIVAL_CONTINUOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = CType(Original_CONJUNCTIVAL_CONTINUOS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_INTERRUPTED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = CType(Original_CONJUNCTIVAL_INTERRUPTED.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_INTERRUPTED_NOTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(132).Value = CType(Original_CONJUNCTIVAL_INTERRUPTED_NOTE,String)
            End If
            If (Original_CONJUNCTIVAL_100NYLON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = CType(Original_CONJUNCTIVAL_100NYLON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(134).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_100PROLENE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = CType(Original_CONJUNCTIVAL_100PROLENE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(136).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(138).Value = CType(Original_CONJUNCTIVAL_OTHERS,String)
            End If
            If (Original_COPLICATION_NONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = CType(Original_COPLICATION_NONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_COPLICATION_YES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = CType(Original_COPLICATION_YES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(142).Value = Global.System.DBNull.Value
            End If
            If (Original_OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(144).Value = CType(Original_OTHER_PROCEDURES,String)
            End If
            If (Original_SUB_GENTAL2MG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = CType(Original_SUB_GENTAL2MG.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_CEFAZOLIN50MG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = CType(Original_SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_DEXAMETHASONE_25MG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = CType(Original_SUB_DEXAMETHASONE_25MG.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(152).Value = CType(Original_SUB_OTHER,String)
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_PILOCARPINE2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = CType(Original_TOPICAL_PILOCARPINE2.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_VIGAMOX.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = CType(Original_TOPICAL_VIGAMOX.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(158).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(160).Value = CType(Original_TOPICAL_OTHERS,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(162).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVA_LIMBAL_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_FORNIX_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNC_NOTE_FROM As String,  _
                    ByVal CONJUNC_NOTE_TO As String,  _
                    ByVal SHAPE1 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE_OTHER As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal THICKNESS13 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS12 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS23 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS_OTHER As String,  _
                    ByVal LOCATION As String,  _
                    ByVal ADJUNCTIVE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal ADJUNCTIVE_5FU As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal INTRABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED_NOTE As String,  _
                    ByVal IRRIGATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_WITH As String,  _
                    ByVal IRRIGATION_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE_NOTE As String,  _
                    ByVal PARACENTESIS_NOTE_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE_NOTE As String,  _
                    ByVal TRABECULECTOMY1 As String,  _
                    ByVal TRABECULECTOMY2 As String,  _
                    ByVal IRIDECTOMY_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal SCLERAL_NOTE_NO As String,  _
                    ByVal SCLERAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_RELEASABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_NOTE As String,  _
                    ByVal CONJUNCTIVAL_CONTINUOS As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal CONJUNCTIVAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHERS As String,  _
                    ByVal COPLICATION_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal COPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE_25MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (RIGHT_EYE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVA_LIMBAL_BASE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CONJUNCTIVA_LIMBAL_BASE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_FORNIX_BASE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CONJUNCTIVAL_FORNIX_BASE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CONJUNC_NOTE_FROM Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CONJUNC_NOTE_FROM,String)
            End If
            If (CONJUNC_NOTE_TO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CONJUNC_NOTE_TO,String)
            End If
            If (SHAPE1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(SHAPE1.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (SHAPE2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(SHAPE2.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (SHAPE_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(SHAPE_OTHER,String)
            End If
            If (SIZE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(SIZE1,String)
            End If
            If (SIZE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(SIZE2,String)
            End If
            If (THICKNESS13.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(THICKNESS13.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS12.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(THICKNESS12.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS23.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(THICKNESS23.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(THICKNESS_OTHER,String)
            End If
            If (LOCATION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(LOCATION,String)
            End If
            If (ADJUNCTIVE_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(ADJUNCTIVE_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(ADJUNCTIVE_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_MMC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(ADJUNCTIVE_MMC.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_MMC_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(ADJUNCTIVE_MMC_NOTE,String)
            End If
            If (ADJUNCTIVE_5FU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(ADJUNCTIVE_5FU.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_5FU_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ADJUNCTIVE_5FU_NOTE,String)
            End If
            If (INTRABLE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(INTRABLE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SOAKED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(SOAKED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (SOAKED_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(SOAKED_NOTE,String)
            End If
            If (IRRIGATION_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(IRRIGATION_NO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(IRRIGATION_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_WITH Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(IRRIGATION_WITH,String)
            End If
            If (IRRIGATION_NOT_DONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(IRRIGATION_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_DONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(IRRIGATION_DONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_DONE_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(IRRIGATION_DONE_NOTE,String)
            End If
            If (PARACENTESIS_NOTE_DONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(PARACENTESIS_NOTE_DONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (PARACENTESIS_DONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(PARACENTESIS_DONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (PARACENTESIS_DONE_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(PARACENTESIS_DONE_NOTE,String)
            End If
            If (TRABECULECTOMY1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(TRABECULECTOMY1,String)
            End If
            If (TRABECULECTOMY2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(TRABECULECTOMY2,String)
            End If
            If (IRIDECTOMY_NOT_DONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(IRIDECTOMY_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (IRIDECTOMY_DONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(56).Value = CType(IRIDECTOMY_DONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (IRIDECTOMY_DONE_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(57).Value = CType(IRIDECTOMY_DONE_NOTE,String)
            End If
            If (SCLERAL_NOTE_NO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(58).Value = CType(SCLERAL_NOTE_NO,String)
            End If
            If (SCLERAL_100NYLON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(59).Value = CType(SCLERAL_100NYLON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_100PROLENE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(60).Value = CType(SCLERAL_100PROLENE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_RELEASABLE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(61).Value = CType(SCLERAL_RELEASABLE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(62).Value = CType(SCLERAL_NOTE,String)
            End If
            If (CONJUNCTIVAL_CONTINUOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(63).Value = CType(CONJUNCTIVAL_CONTINUOS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_INTERRUPTED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(64).Value = CType(CONJUNCTIVAL_INTERRUPTED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_INTERRUPTED_NOTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(65).Value = CType(CONJUNCTIVAL_INTERRUPTED_NOTE,String)
            End If
            If (CONJUNCTIVAL_100NYLON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(66).Value = CType(CONJUNCTIVAL_100NYLON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_100PROLENE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(67).Value = CType(CONJUNCTIVAL_100PROLENE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(68).Value = CType(CONJUNCTIVAL_OTHERS,String)
            End If
            If (COPLICATION_NONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(69).Value = CType(COPLICATION_NONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (COPLICATION_YES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(70).Value = CType(COPLICATION_YES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(71).Value = CType(OTHER_PROCEDURES,String)
            End If
            If (SUB_GENTAL2MG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(72).Value = CType(SUB_GENTAL2MG.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN50MG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(73).Value = CType(SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE_25MG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(74).Value = CType(SUB_DEXAMETHASONE_25MG.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(75).Value = CType(SUB_OTHER,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(76).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(77).Value = CType(TOPICAL_PILOCARPINE2.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_VIGAMOX.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(78).Value = CType(TOPICAL_VIGAMOX.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(79).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(80).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVA_LIMBAL_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_FORNIX_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNC_NOTE_FROM As String,  _
                    ByVal CONJUNC_NOTE_TO As String,  _
                    ByVal SHAPE1 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE_OTHER As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal THICKNESS13 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS12 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS23 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS_OTHER As String,  _
                    ByVal LOCATION As String,  _
                    ByVal ADJUNCTIVE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal ADJUNCTIVE_5FU As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal INTRABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED_NOTE As String,  _
                    ByVal IRRIGATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_WITH As String,  _
                    ByVal IRRIGATION_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE_NOTE As String,  _
                    ByVal PARACENTESIS_NOTE_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE_NOTE As String,  _
                    ByVal TRABECULECTOMY1 As String,  _
                    ByVal TRABECULECTOMY2 As String,  _
                    ByVal IRIDECTOMY_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal SCLERAL_NOTE_NO As String,  _
                    ByVal SCLERAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_RELEASABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_NOTE As String,  _
                    ByVal CONJUNCTIVAL_CONTINUOS As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal CONJUNCTIVAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHERS As String,  _
                    ByVal COPLICATION_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal COPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE_25MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_TRABECULECTIOMY_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVA_LIMBAL_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_FORNIX_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNC_NOTE_FROM As String,  _
                    ByVal Original_CONJUNC_NOTE_TO As String,  _
                    ByVal Original_SHAPE1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SHAPE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SHAPE_OTHER As String,  _
                    ByVal Original_SIZE1 As String,  _
                    ByVal Original_SIZE2 As String,  _
                    ByVal Original_THICKNESS13 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS12 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS23 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS_OTHER As String,  _
                    ByVal Original_LOCATION As String,  _
                    ByVal Original_ADJUNCTIVE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_MMC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal Original_ADJUNCTIVE_5FU As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal Original_INTRABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SOAKED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SOAKED_NOTE As String,  _
                    ByVal Original_IRRIGATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_WITH As String,  _
                    ByVal Original_IRRIGATION_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_DONE_NOTE As String,  _
                    ByVal Original_PARACENTESIS_NOTE_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PARACENTESIS_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PARACENTESIS_DONE_NOTE As String,  _
                    ByVal Original_TRABECULECTOMY1 As String,  _
                    ByVal Original_TRABECULECTOMY2 As String,  _
                    ByVal Original_IRIDECTOMY_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRIDECTOMY_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal Original_SCLERAL_NOTE_NO As String,  _
                    ByVal Original_SCLERAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_RELEASABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_NOTE As String,  _
                    ByVal Original_CONJUNCTIVAL_CONTINUOS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal Original_CONJUNCTIVAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_OTHERS As String,  _
                    ByVal Original_COPLICATION_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PROCEDURES As String,  _
                    ByVal Original_SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE_25MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHER As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String,  _
                    ByVal TRABECULECTIOMY_ID As Decimal) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (RIGHT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVA_LIMBAL_BASE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CONJUNCTIVA_LIMBAL_BASE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_FORNIX_BASE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CONJUNCTIVAL_FORNIX_BASE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CONJUNC_NOTE_FROM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CONJUNC_NOTE_FROM,String)
            End If
            If (CONJUNC_NOTE_TO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CONJUNC_NOTE_TO,String)
            End If
            If (SHAPE1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(SHAPE1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (SHAPE2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(SHAPE2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (SHAPE_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(SHAPE_OTHER,String)
            End If
            If (SIZE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(SIZE1,String)
            End If
            If (SIZE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(SIZE2,String)
            End If
            If (THICKNESS13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(THICKNESS13.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS12.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(THICKNESS12.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(THICKNESS23.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(THICKNESS_OTHER,String)
            End If
            If (LOCATION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(LOCATION,String)
            End If
            If (ADJUNCTIVE_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(ADJUNCTIVE_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(ADJUNCTIVE_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_MMC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(ADJUNCTIVE_MMC.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_MMC_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(ADJUNCTIVE_MMC_NOTE,String)
            End If
            If (ADJUNCTIVE_5FU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(ADJUNCTIVE_5FU.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_5FU_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ADJUNCTIVE_5FU_NOTE,String)
            End If
            If (INTRABLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(INTRABLE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SOAKED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(SOAKED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (SOAKED_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(SOAKED_NOTE,String)
            End If
            If (IRRIGATION_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(IRRIGATION_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(IRRIGATION_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_WITH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(IRRIGATION_WITH,String)
            End If
            If (IRRIGATION_NOT_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(IRRIGATION_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(IRRIGATION_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_DONE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(IRRIGATION_DONE_NOTE,String)
            End If
            If (PARACENTESIS_NOTE_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(PARACENTESIS_NOTE_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (PARACENTESIS_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(PARACENTESIS_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (PARACENTESIS_DONE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(PARACENTESIS_DONE_NOTE,String)
            End If
            If (TRABECULECTOMY1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(TRABECULECTOMY1,String)
            End If
            If (TRABECULECTOMY2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(TRABECULECTOMY2,String)
            End If
            If (IRIDECTOMY_NOT_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(IRIDECTOMY_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (IRIDECTOMY_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(IRIDECTOMY_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (IRIDECTOMY_DONE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(IRIDECTOMY_DONE_NOTE,String)
            End If
            If (SCLERAL_NOTE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(SCLERAL_NOTE_NO,String)
            End If
            If (SCLERAL_100NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(SCLERAL_100NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_100PROLENE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(SCLERAL_100PROLENE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_RELEASABLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(SCLERAL_RELEASABLE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(SCLERAL_NOTE,String)
            End If
            If (CONJUNCTIVAL_CONTINUOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(CONJUNCTIVAL_CONTINUOS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_INTERRUPTED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(CONJUNCTIVAL_INTERRUPTED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_INTERRUPTED_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(CONJUNCTIVAL_INTERRUPTED_NOTE,String)
            End If
            If (CONJUNCTIVAL_100NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(CONJUNCTIVAL_100NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_100PROLENE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(CONJUNCTIVAL_100PROLENE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(CONJUNCTIVAL_OTHERS,String)
            End If
            If (COPLICATION_NONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(COPLICATION_NONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (COPLICATION_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(COPLICATION_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(OTHER_PROCEDURES,String)
            End If
            If (SUB_GENTAL2MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(SUB_GENTAL2MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN50MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE_25MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(SUB_DEXAMETHASONE_25MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(SUB_OTHER,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(TOPICAL_PILOCARPINE2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_VIGAMOX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(TOPICAL_VIGAMOX.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_TRABECULECTIOMY_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVA_LIMBAL_BASE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_CONJUNCTIVA_LIMBAL_BASE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_FORNIX_BASE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_CONJUNCTIVAL_FORNIX_BASE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNC_NOTE_FROM Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_CONJUNC_NOTE_FROM,String)
            End If
            If (Original_CONJUNC_NOTE_TO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_CONJUNC_NOTE_TO,String)
            End If
            If (Original_SHAPE1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_SHAPE1.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            End If
            If (Original_SHAPE2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_SHAPE2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            If (Original_SHAPE_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(Original_SHAPE_OTHER,String)
            End If
            If (Original_SIZE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(Original_SIZE1,String)
            End If
            If (Original_SIZE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(Original_SIZE2,String)
            End If
            If (Original_THICKNESS13.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(Original_THICKNESS13.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(143).Value = Global.System.DBNull.Value
            End If
            If (Original_THICKNESS12.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(Original_THICKNESS12.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(145).Value = Global.System.DBNull.Value
            End If
            If (Original_THICKNESS23.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(Original_THICKNESS23.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(147).Value = Global.System.DBNull.Value
            End If
            If (Original_THICKNESS_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(Original_THICKNESS_OTHER,String)
            End If
            If (Original_LOCATION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(Original_LOCATION,String)
            End If
            If (Original_ADJUNCTIVE_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(Original_ADJUNCTIVE_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(153).Value = Global.System.DBNull.Value
            End If
            If (Original_ADJUNCTIVE_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(Original_ADJUNCTIVE_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(155).Value = Global.System.DBNull.Value
            End If
            If (Original_ADJUNCTIVE_MMC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(Original_ADJUNCTIVE_MMC.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(157).Value = Global.System.DBNull.Value
            End If
            If (Original_ADJUNCTIVE_MMC_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(Original_ADJUNCTIVE_MMC_NOTE,String)
            End If
            If (Original_ADJUNCTIVE_5FU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(Original_ADJUNCTIVE_5FU.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(161).Value = Global.System.DBNull.Value
            End If
            If (Original_ADJUNCTIVE_5FU_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(Original_ADJUNCTIVE_5FU_NOTE,String)
            End If
            If (Original_INTRABLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(Original_INTRABLE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(165).Value = Global.System.DBNull.Value
            End If
            If (Original_SOAKED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(Original_SOAKED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(167).Value = Global.System.DBNull.Value
            End If
            If (Original_SOAKED_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(169).Value = CType(Original_SOAKED_NOTE,String)
            End If
            If (Original_IRRIGATION_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = CType(Original_IRRIGATION_NO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(170).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(171).Value = Global.System.DBNull.Value
            End If
            If (Original_IRRIGATION_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = CType(Original_IRRIGATION_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(172).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(173).Value = Global.System.DBNull.Value
            End If
            If (Original_IRRIGATION_WITH Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(174).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(175).Value = CType(Original_IRRIGATION_WITH,String)
            End If
            If (Original_IRRIGATION_NOT_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = CType(Original_IRRIGATION_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(176).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(177).Value = Global.System.DBNull.Value
            End If
            If (Original_IRRIGATION_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = CType(Original_IRRIGATION_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(178).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(179).Value = Global.System.DBNull.Value
            End If
            If (Original_IRRIGATION_DONE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(180).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(181).Value = CType(Original_IRRIGATION_DONE_NOTE,String)
            End If
            If (Original_PARACENTESIS_NOTE_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = CType(Original_PARACENTESIS_NOTE_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(182).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(183).Value = Global.System.DBNull.Value
            End If
            If (Original_PARACENTESIS_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = CType(Original_PARACENTESIS_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(184).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(185).Value = Global.System.DBNull.Value
            End If
            If (Original_PARACENTESIS_DONE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(186).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(187).Value = CType(Original_PARACENTESIS_DONE_NOTE,String)
            End If
            If (Original_TRABECULECTOMY1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(188).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(189).Value = CType(Original_TRABECULECTOMY1,String)
            End If
            If (Original_TRABECULECTOMY2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(190).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(191).Value = CType(Original_TRABECULECTOMY2,String)
            End If
            If (Original_IRIDECTOMY_NOT_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = CType(Original_IRIDECTOMY_NOT_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(192).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(193).Value = Global.System.DBNull.Value
            End If
            If (Original_IRIDECTOMY_DONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = CType(Original_IRIDECTOMY_DONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(194).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(195).Value = Global.System.DBNull.Value
            End If
            If (Original_IRIDECTOMY_DONE_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(196).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(197).Value = CType(Original_IRIDECTOMY_DONE_NOTE,String)
            End If
            If (Original_SCLERAL_NOTE_NO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(198).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(199).Value = CType(Original_SCLERAL_NOTE_NO,String)
            End If
            If (Original_SCLERAL_100NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = CType(Original_SCLERAL_100NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(200).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(201).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLERAL_100PROLENE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = CType(Original_SCLERAL_100PROLENE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(202).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(203).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLERAL_RELEASABLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = CType(Original_SCLERAL_RELEASABLE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(204).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(205).Value = Global.System.DBNull.Value
            End If
            If (Original_SCLERAL_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(206).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(207).Value = CType(Original_SCLERAL_NOTE,String)
            End If
            If (Original_CONJUNCTIVAL_CONTINUOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = CType(Original_CONJUNCTIVAL_CONTINUOS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(208).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(209).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_INTERRUPTED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = CType(Original_CONJUNCTIVAL_INTERRUPTED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(210).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(211).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_INTERRUPTED_NOTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(212).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(213).Value = CType(Original_CONJUNCTIVAL_INTERRUPTED_NOTE,String)
            End If
            If (Original_CONJUNCTIVAL_100NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = CType(Original_CONJUNCTIVAL_100NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(214).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(215).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_100PROLENE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = CType(Original_CONJUNCTIVAL_100PROLENE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(216).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(217).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(218).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(219).Value = CType(Original_CONJUNCTIVAL_OTHERS,String)
            End If
            If (Original_COPLICATION_NONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(221).Value = CType(Original_COPLICATION_NONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(220).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(221).Value = Global.System.DBNull.Value
            End If
            If (Original_COPLICATION_YES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = CType(Original_COPLICATION_YES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(222).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(223).Value = Global.System.DBNull.Value
            End If
            If (Original_OTHER_PROCEDURES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(225).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(224).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(225).Value = CType(Original_OTHER_PROCEDURES,String)
            End If
            If (Original_SUB_GENTAL2MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(227).Value = CType(Original_SUB_GENTAL2MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(226).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(227).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_CEFAZOLIN50MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(229).Value = CType(Original_SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(228).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(229).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_DEXAMETHASONE_25MG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(231).Value = CType(Original_SUB_DEXAMETHASONE_25MG.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(230).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(231).Value = Global.System.DBNull.Value
            End If
            If (Original_SUB_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(233).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(232).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(233).Value = CType(Original_SUB_OTHER,String)
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(235).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(234).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(235).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_PILOCARPINE2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(237).Value = CType(Original_TOPICAL_PILOCARPINE2.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(236).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(237).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_VIGAMOX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(239).Value = CType(Original_TOPICAL_VIGAMOX.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(238).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(239).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(241).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(240).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(241).Value = CType(Original_TOPICAL_OTHERS,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(243).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(242).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(243).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(244).Value = CType(TRABECULECTIOMY_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVA_LIMBAL_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_FORNIX_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNC_NOTE_FROM As String,  _
                    ByVal CONJUNC_NOTE_TO As String,  _
                    ByVal SHAPE1 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE_OTHER As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal THICKNESS13 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS12 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS23 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS_OTHER As String,  _
                    ByVal LOCATION As String,  _
                    ByVal ADJUNCTIVE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal ADJUNCTIVE_5FU As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal INTRABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED_NOTE As String,  _
                    ByVal IRRIGATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_WITH As String,  _
                    ByVal IRRIGATION_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE_NOTE As String,  _
                    ByVal PARACENTESIS_NOTE_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE_NOTE As String,  _
                    ByVal TRABECULECTOMY1 As String,  _
                    ByVal TRABECULECTOMY2 As String,  _
                    ByVal IRIDECTOMY_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal SCLERAL_NOTE_NO As String,  _
                    ByVal SCLERAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_RELEASABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_NOTE As String,  _
                    ByVal CONJUNCTIVAL_CONTINUOS As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal CONJUNCTIVAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHERS As String,  _
                    ByVal COPLICATION_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal COPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE_25MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_TRABECULECTIOMY_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVA_LIMBAL_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_FORNIX_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNC_NOTE_FROM As String,  _
                    ByVal Original_CONJUNC_NOTE_TO As String,  _
                    ByVal Original_SHAPE1 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SHAPE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SHAPE_OTHER As String,  _
                    ByVal Original_SIZE1 As String,  _
                    ByVal Original_SIZE2 As String,  _
                    ByVal Original_THICKNESS13 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS12 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS23 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_THICKNESS_OTHER As String,  _
                    ByVal Original_LOCATION As String,  _
                    ByVal Original_ADJUNCTIVE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_MMC As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal Original_ADJUNCTIVE_5FU As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal Original_INTRABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SOAKED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SOAKED_NOTE As String,  _
                    ByVal Original_IRRIGATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_WITH As String,  _
                    ByVal Original_IRRIGATION_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRRIGATION_DONE_NOTE As String,  _
                    ByVal Original_PARACENTESIS_NOTE_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PARACENTESIS_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PARACENTESIS_DONE_NOTE As String,  _
                    ByVal Original_TRABECULECTOMY1 As String,  _
                    ByVal Original_TRABECULECTOMY2 As String,  _
                    ByVal Original_IRIDECTOMY_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRIDECTOMY_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal Original_SCLERAL_NOTE_NO As String,  _
                    ByVal Original_SCLERAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_RELEASABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SCLERAL_NOTE As String,  _
                    ByVal Original_CONJUNCTIVAL_CONTINUOS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal Original_CONJUNCTIVAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_OTHERS As String,  _
                    ByVal Original_COPLICATION_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_COPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_OTHER_PROCEDURES As String,  _
                    ByVal Original_SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_DEXAMETHASONE_25MG As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUB_OTHER As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_PILOCARPINE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHERS As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Return Me.Update(CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, CONJUNCTIVA_LIMBAL_BASE, CONJUNCTIVAL_FORNIX_BASE, CONJUNC_NOTE_FROM, CONJUNC_NOTE_TO, SHAPE1, SHAPE2, SHAPE_OTHER, SIZE1, SIZE2, THICKNESS13, THICKNESS12, THICKNESS23, THICKNESS_OTHER, LOCATION, ADJUNCTIVE_NO, ADJUNCTIVE_YES, ADJUNCTIVE_MMC, ADJUNCTIVE_MMC_NOTE, ADJUNCTIVE_5FU, ADJUNCTIVE_5FU_NOTE, INTRABLE, SOAKED, SOAKED_NOTE, IRRIGATION_NO, IRRIGATION_YES, IRRIGATION_WITH, IRRIGATION_NOT_DONE, IRRIGATION_DONE, IRRIGATION_DONE_NOTE, PARACENTESIS_NOTE_DONE, PARACENTESIS_DONE, PARACENTESIS_DONE_NOTE, TRABECULECTOMY1, TRABECULECTOMY2, IRIDECTOMY_NOT_DONE, IRIDECTOMY_DONE, IRIDECTOMY_DONE_NOTE, SCLERAL_NOTE_NO, SCLERAL_100NYLON, SCLERAL_100PROLENE, SCLERAL_RELEASABLE, SCLERAL_NOTE, CONJUNCTIVAL_CONTINUOS, CONJUNCTIVAL_INTERRUPTED, CONJUNCTIVAL_INTERRUPTED_NOTE, CONJUNCTIVAL_100NYLON, CONJUNCTIVAL_100PROLENE, CONJUNCTIVAL_OTHERS, COPLICATION_NONE, COPLICATION_YES, OTHER_PROCEDURES, SUB_GENTAL2MG, SUB_CEFAZOLIN50MG, SUB_DEXAMETHASONE_25MG, SUB_OTHER, TOPICAL_MAXITROL, TOPICAL_PILOCARPINE2, TOPICAL_VIGAMOX, TOPICAL_OTHERS, SURGEON_SIGNATURE, Original_TRABECULECTIOMY_ID, Original_CREATE_DATE, Original_OPERA_NO, Original_PATIENT_NO, Original_PATIENT_NAME, Original_PATIENT_SEX, Original_PATIENT_AGE, Original_START_TIME, Original_SURGEON, Original_SCRUB, Original_CIRCULATING, Original_ANESTHESIONLOGIST, Original_DIAGNOSIS, Original_RIGHT_EYE, Original_LEFT_EYE, Original_S_AN_GA, Original_S_AN_NEURO, Original_S_AN_STANDBY, Original_S_AN_RETROBULBAR, Original_S_AN_PERIBULBAR, Original_S_AN_TOPICAL, Original_S_AN_SUBCONJUNCTIVAL, Original_CONJUNCTIVA_LIMBAL_BASE, Original_CONJUNCTIVAL_FORNIX_BASE, Original_CONJUNC_NOTE_FROM, Original_CONJUNC_NOTE_TO, Original_SHAPE1, Original_SHAPE2, Original_SHAPE_OTHER, Original_SIZE1, Original_SIZE2, Original_THICKNESS13, Original_THICKNESS12, Original_THICKNESS23, Original_THICKNESS_OTHER, Original_LOCATION, Original_ADJUNCTIVE_NO, Original_ADJUNCTIVE_YES, Original_ADJUNCTIVE_MMC, Original_ADJUNCTIVE_MMC_NOTE, Original_ADJUNCTIVE_5FU, Original_ADJUNCTIVE_5FU_NOTE, Original_INTRABLE, Original_SOAKED, Original_SOAKED_NOTE, Original_IRRIGATION_NO, Original_IRRIGATION_YES, Original_IRRIGATION_WITH, Original_IRRIGATION_NOT_DONE, Original_IRRIGATION_DONE, Original_IRRIGATION_DONE_NOTE, Original_PARACENTESIS_NOTE_DONE, Original_PARACENTESIS_DONE, Original_PARACENTESIS_DONE_NOTE, Original_TRABECULECTOMY1, Original_TRABECULECTOMY2, Original_IRIDECTOMY_NOT_DONE, Original_IRIDECTOMY_DONE, Original_IRIDECTOMY_DONE_NOTE, Original_SCLERAL_NOTE_NO, Original_SCLERAL_100NYLON, Original_SCLERAL_100PROLENE, Original_SCLERAL_RELEASABLE, Original_SCLERAL_NOTE, Original_CONJUNCTIVAL_CONTINUOS, Original_CONJUNCTIVAL_INTERRUPTED, Original_CONJUNCTIVAL_INTERRUPTED_NOTE, Original_CONJUNCTIVAL_100NYLON, Original_CONJUNCTIVAL_100PROLENE, Original_CONJUNCTIVAL_OTHERS, Original_COPLICATION_NONE, Original_COPLICATION_YES, Original_OTHER_PROCEDURES, Original_SUB_GENTAL2MG, Original_SUB_CEFAZOLIN50MG, Original_SUB_DEXAMETHASONE_25MG, Original_SUB_OTHER, Original_TOPICAL_MAXITROL, Original_TOPICAL_PILOCARPINE2, Original_TOPICAL_VIGAMOX, Original_TOPICAL_OTHERS, Original_SURGEON_SIGNATURE, Original_TRABECULECTIOMY_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertOperTrab( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVA_LIMBAL_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_FORNIX_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNC_NOTE_FROM As String,  _
                    ByVal CONJUNC_NOTE_TO As String,  _
                    ByVal SHAPE1 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE_OTHER As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal THICKNESS13 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS12 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS23 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS_OTHER As String,  _
                    ByVal LOCATION As String,  _
                    ByVal ADJUNCTIVE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal ADJUNCTIVE_5FU As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal INTRABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED_NOTE As String,  _
                    ByVal IRRIGATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_WITH As String,  _
                    ByVal IRRIGATION_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE_NOTE As String,  _
                    ByVal PARACENTESIS_NOTE_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE_NOTE As String,  _
                    ByVal TRABECULECTOMY1 As String,  _
                    ByVal TRABECULECTOMY2 As String,  _
                    ByVal IRIDECTOMY_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal SCLERAL_NOTE_NO As String,  _
                    ByVal SCLERAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_RELEASABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_NOTE As String,  _
                    ByVal CONJUNCTIVAL_CONTINUOS As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal CONJUNCTIVAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHERS As String,  _
                    ByVal COPLICATION_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal COPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE_25MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (RIGHT_EYE.HasValue = true) Then
                command.Parameters(12).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                command.Parameters(13).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                command.Parameters(20).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVA_LIMBAL_BASE.HasValue = true) Then
                command.Parameters(21).Value = CType(CONJUNCTIVA_LIMBAL_BASE.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_FORNIX_BASE.HasValue = true) Then
                command.Parameters(22).Value = CType(CONJUNCTIVAL_FORNIX_BASE.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CONJUNC_NOTE_FROM Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(CONJUNC_NOTE_FROM,String)
            End If
            If (CONJUNC_NOTE_TO Is Nothing) Then
                command.Parameters(24).Value = Global.System.DBNull.Value
            Else
                command.Parameters(24).Value = CType(CONJUNC_NOTE_TO,String)
            End If
            If (SHAPE1.HasValue = true) Then
                command.Parameters(25).Value = CType(SHAPE1.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (SHAPE2.HasValue = true) Then
                command.Parameters(26).Value = CType(SHAPE2.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (SHAPE_OTHER Is Nothing) Then
                command.Parameters(27).Value = Global.System.DBNull.Value
            Else
                command.Parameters(27).Value = CType(SHAPE_OTHER,String)
            End If
            If (SIZE1 Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(SIZE1,String)
            End If
            If (SIZE2 Is Nothing) Then
                command.Parameters(29).Value = Global.System.DBNull.Value
            Else
                command.Parameters(29).Value = CType(SIZE2,String)
            End If
            If (THICKNESS13.HasValue = true) Then
                command.Parameters(30).Value = CType(THICKNESS13.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS12.HasValue = true) Then
                command.Parameters(31).Value = CType(THICKNESS12.Value,Boolean)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS23.HasValue = true) Then
                command.Parameters(32).Value = CType(THICKNESS23.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS_OTHER Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(THICKNESS_OTHER,String)
            End If
            If (LOCATION Is Nothing) Then
                command.Parameters(34).Value = Global.System.DBNull.Value
            Else
                command.Parameters(34).Value = CType(LOCATION,String)
            End If
            If (ADJUNCTIVE_NO.HasValue = true) Then
                command.Parameters(35).Value = CType(ADJUNCTIVE_NO.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_YES.HasValue = true) Then
                command.Parameters(36).Value = CType(ADJUNCTIVE_YES.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_MMC.HasValue = true) Then
                command.Parameters(37).Value = CType(ADJUNCTIVE_MMC.Value,Boolean)
            Else
                command.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_MMC_NOTE Is Nothing) Then
                command.Parameters(38).Value = Global.System.DBNull.Value
            Else
                command.Parameters(38).Value = CType(ADJUNCTIVE_MMC_NOTE,String)
            End If
            If (ADJUNCTIVE_5FU.HasValue = true) Then
                command.Parameters(39).Value = CType(ADJUNCTIVE_5FU.Value,Boolean)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_5FU_NOTE Is Nothing) Then
                command.Parameters(40).Value = Global.System.DBNull.Value
            Else
                command.Parameters(40).Value = CType(ADJUNCTIVE_5FU_NOTE,String)
            End If
            If (INTRABLE.HasValue = true) Then
                command.Parameters(41).Value = CType(INTRABLE.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SOAKED.HasValue = true) Then
                command.Parameters(42).Value = CType(SOAKED.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (SOAKED_NOTE Is Nothing) Then
                command.Parameters(43).Value = Global.System.DBNull.Value
            Else
                command.Parameters(43).Value = CType(SOAKED_NOTE,String)
            End If
            If (IRRIGATION_NO.HasValue = true) Then
                command.Parameters(44).Value = CType(IRRIGATION_NO.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_YES.HasValue = true) Then
                command.Parameters(45).Value = CType(IRRIGATION_YES.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_WITH Is Nothing) Then
                command.Parameters(46).Value = Global.System.DBNull.Value
            Else
                command.Parameters(46).Value = CType(IRRIGATION_WITH,String)
            End If
            If (IRRIGATION_NOT_DONE.HasValue = true) Then
                command.Parameters(47).Value = CType(IRRIGATION_NOT_DONE.Value,Boolean)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_DONE.HasValue = true) Then
                command.Parameters(48).Value = CType(IRRIGATION_DONE.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_DONE_NOTE Is Nothing) Then
                command.Parameters(49).Value = Global.System.DBNull.Value
            Else
                command.Parameters(49).Value = CType(IRRIGATION_DONE_NOTE,String)
            End If
            If (PARACENTESIS_NOTE_DONE.HasValue = true) Then
                command.Parameters(50).Value = CType(PARACENTESIS_NOTE_DONE.Value,Boolean)
            Else
                command.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (PARACENTESIS_DONE.HasValue = true) Then
                command.Parameters(51).Value = CType(PARACENTESIS_DONE.Value,Boolean)
            Else
                command.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (PARACENTESIS_DONE_NOTE Is Nothing) Then
                command.Parameters(52).Value = Global.System.DBNull.Value
            Else
                command.Parameters(52).Value = CType(PARACENTESIS_DONE_NOTE,String)
            End If
            If (TRABECULECTOMY1 Is Nothing) Then
                command.Parameters(53).Value = Global.System.DBNull.Value
            Else
                command.Parameters(53).Value = CType(TRABECULECTOMY1,String)
            End If
            If (TRABECULECTOMY2 Is Nothing) Then
                command.Parameters(54).Value = Global.System.DBNull.Value
            Else
                command.Parameters(54).Value = CType(TRABECULECTOMY2,String)
            End If
            If (IRIDECTOMY_NOT_DONE.HasValue = true) Then
                command.Parameters(55).Value = CType(IRIDECTOMY_NOT_DONE.Value,Boolean)
            Else
                command.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (IRIDECTOMY_DONE.HasValue = true) Then
                command.Parameters(56).Value = CType(IRIDECTOMY_DONE.Value,Boolean)
            Else
                command.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (IRIDECTOMY_DONE_NOTE Is Nothing) Then
                command.Parameters(57).Value = Global.System.DBNull.Value
            Else
                command.Parameters(57).Value = CType(IRIDECTOMY_DONE_NOTE,String)
            End If
            If (SCLERAL_NOTE_NO Is Nothing) Then
                command.Parameters(58).Value = Global.System.DBNull.Value
            Else
                command.Parameters(58).Value = CType(SCLERAL_NOTE_NO,String)
            End If
            If (SCLERAL_100NYLON.HasValue = true) Then
                command.Parameters(59).Value = CType(SCLERAL_100NYLON.Value,Boolean)
            Else
                command.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_100PROLENE.HasValue = true) Then
                command.Parameters(60).Value = CType(SCLERAL_100PROLENE.Value,Boolean)
            Else
                command.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_RELEASABLE.HasValue = true) Then
                command.Parameters(61).Value = CType(SCLERAL_RELEASABLE.Value,Boolean)
            Else
                command.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_NOTE Is Nothing) Then
                command.Parameters(62).Value = Global.System.DBNull.Value
            Else
                command.Parameters(62).Value = CType(SCLERAL_NOTE,String)
            End If
            If (CONJUNCTIVAL_CONTINUOS.HasValue = true) Then
                command.Parameters(63).Value = CType(CONJUNCTIVAL_CONTINUOS.Value,Boolean)
            Else
                command.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_INTERRUPTED.HasValue = true) Then
                command.Parameters(64).Value = CType(CONJUNCTIVAL_INTERRUPTED.Value,Boolean)
            Else
                command.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_INTERRUPTED_NOTE Is Nothing) Then
                command.Parameters(65).Value = Global.System.DBNull.Value
            Else
                command.Parameters(65).Value = CType(CONJUNCTIVAL_INTERRUPTED_NOTE,String)
            End If
            If (CONJUNCTIVAL_100NYLON.HasValue = true) Then
                command.Parameters(66).Value = CType(CONJUNCTIVAL_100NYLON.Value,Boolean)
            Else
                command.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_100PROLENE.HasValue = true) Then
                command.Parameters(67).Value = CType(CONJUNCTIVAL_100PROLENE.Value,Boolean)
            Else
                command.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_OTHERS Is Nothing) Then
                command.Parameters(68).Value = Global.System.DBNull.Value
            Else
                command.Parameters(68).Value = CType(CONJUNCTIVAL_OTHERS,String)
            End If
            If (COPLICATION_NONE.HasValue = true) Then
                command.Parameters(69).Value = CType(COPLICATION_NONE.Value,Boolean)
            Else
                command.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (COPLICATION_YES.HasValue = true) Then
                command.Parameters(70).Value = CType(COPLICATION_YES.Value,Boolean)
            Else
                command.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PROCEDURES Is Nothing) Then
                command.Parameters(71).Value = Global.System.DBNull.Value
            Else
                command.Parameters(71).Value = CType(OTHER_PROCEDURES,String)
            End If
            If (SUB_GENTAL2MG.HasValue = true) Then
                command.Parameters(72).Value = CType(SUB_GENTAL2MG.Value,Boolean)
            Else
                command.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN50MG.HasValue = true) Then
                command.Parameters(73).Value = CType(SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                command.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE_25MG.HasValue = true) Then
                command.Parameters(74).Value = CType(SUB_DEXAMETHASONE_25MG.Value,Boolean)
            Else
                command.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHER Is Nothing) Then
                command.Parameters(75).Value = Global.System.DBNull.Value
            Else
                command.Parameters(75).Value = CType(SUB_OTHER,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(76).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE2.HasValue = true) Then
                command.Parameters(77).Value = CType(TOPICAL_PILOCARPINE2.Value,Boolean)
            Else
                command.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_VIGAMOX.HasValue = true) Then
                command.Parameters(78).Value = CType(TOPICAL_VIGAMOX.Value,Boolean)
            Else
                command.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                command.Parameters(79).Value = Global.System.DBNull.Value
            Else
                command.Parameters(79).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(80).Value = Global.System.DBNull.Value
            Else
                command.Parameters(80).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateTrabecule( _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVA_LIMBAL_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_FORNIX_BASE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNC_NOTE_FROM As String,  _
                    ByVal CONJUNC_NOTE_TO As String,  _
                    ByVal SHAPE1 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal SHAPE_OTHER As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal THICKNESS13 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS12 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS23 As Global.System.Nullable(Of Boolean),  _
                    ByVal THICKNESS_OTHER As String,  _
                    ByVal LOCATION As String,  _
                    ByVal ADJUNCTIVE_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_MMC_NOTE As String,  _
                    ByVal ADJUNCTIVE_5FU As Global.System.Nullable(Of Boolean),  _
                    ByVal ADJUNCTIVE_5FU_NOTE As String,  _
                    ByVal INTRABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED As Global.System.Nullable(Of Boolean),  _
                    ByVal SOAKED_NOTE As String,  _
                    ByVal IRRIGATION_NO As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_WITH As String,  _
                    ByVal IRRIGATION_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRRIGATION_DONE_NOTE As String,  _
                    ByVal PARACENTESIS_NOTE_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PARACENTESIS_DONE_NOTE As String,  _
                    ByVal TRABECULECTOMY1 As String,  _
                    ByVal TRABECULECTOMY2 As String,  _
                    ByVal IRIDECTOMY_NOT_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE As Global.System.Nullable(Of Boolean),  _
                    ByVal IRIDECTOMY_DONE_NOTE As String,  _
                    ByVal SCLERAL_NOTE_NO As String,  _
                    ByVal SCLERAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_RELEASABLE As Global.System.Nullable(Of Boolean),  _
                    ByVal SCLERAL_NOTE As String,  _
                    ByVal CONJUNCTIVAL_CONTINUOS As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_INTERRUPTED_NOTE As String,  _
                    ByVal CONJUNCTIVAL_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_100PROLENE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHERS As String,  _
                    ByVal COPLICATION_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal COPLICATION_YES As Global.System.Nullable(Of Boolean),  _
                    ByVal OTHER_PROCEDURES As String,  _
                    ByVal SUB_GENTAL2MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_CEFAZOLIN50MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_DEXAMETHASONE_25MG As Global.System.Nullable(Of Boolean),  _
                    ByVal SUB_OTHER As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_PILOCARPINE2 As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_VIGAMOX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHERS As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_TRABECULECTIOMY_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (START_TIME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(DIAGNOSIS,String)
            End If
            If (RIGHT_EYE.HasValue = true) Then
                command.Parameters(6).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                command.Parameters(7).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(8).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(9).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(10).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(11).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(13).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVA_LIMBAL_BASE.HasValue = true) Then
                command.Parameters(15).Value = CType(CONJUNCTIVA_LIMBAL_BASE.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_FORNIX_BASE.HasValue = true) Then
                command.Parameters(16).Value = CType(CONJUNCTIVAL_FORNIX_BASE.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CONJUNC_NOTE_FROM Is Nothing) Then
                command.Parameters(17).Value = Global.System.DBNull.Value
            Else
                command.Parameters(17).Value = CType(CONJUNC_NOTE_FROM,String)
            End If
            If (CONJUNC_NOTE_TO Is Nothing) Then
                command.Parameters(18).Value = Global.System.DBNull.Value
            Else
                command.Parameters(18).Value = CType(CONJUNC_NOTE_TO,String)
            End If
            If (SHAPE1.HasValue = true) Then
                command.Parameters(19).Value = CType(SHAPE1.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (SHAPE2.HasValue = true) Then
                command.Parameters(20).Value = CType(SHAPE2.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (SHAPE_OTHER Is Nothing) Then
                command.Parameters(21).Value = Global.System.DBNull.Value
            Else
                command.Parameters(21).Value = CType(SHAPE_OTHER,String)
            End If
            If (SIZE1 Is Nothing) Then
                command.Parameters(22).Value = Global.System.DBNull.Value
            Else
                command.Parameters(22).Value = CType(SIZE1,String)
            End If
            If (SIZE2 Is Nothing) Then
                command.Parameters(23).Value = Global.System.DBNull.Value
            Else
                command.Parameters(23).Value = CType(SIZE2,String)
            End If
            If (THICKNESS13.HasValue = true) Then
                command.Parameters(24).Value = CType(THICKNESS13.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS12.HasValue = true) Then
                command.Parameters(25).Value = CType(THICKNESS12.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS23.HasValue = true) Then
                command.Parameters(26).Value = CType(THICKNESS23.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (THICKNESS_OTHER Is Nothing) Then
                command.Parameters(27).Value = Global.System.DBNull.Value
            Else
                command.Parameters(27).Value = CType(THICKNESS_OTHER,String)
            End If
            If (LOCATION Is Nothing) Then
                command.Parameters(28).Value = Global.System.DBNull.Value
            Else
                command.Parameters(28).Value = CType(LOCATION,String)
            End If
            If (ADJUNCTIVE_NO.HasValue = true) Then
                command.Parameters(29).Value = CType(ADJUNCTIVE_NO.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_YES.HasValue = true) Then
                command.Parameters(30).Value = CType(ADJUNCTIVE_YES.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_MMC.HasValue = true) Then
                command.Parameters(31).Value = CType(ADJUNCTIVE_MMC.Value,Boolean)
            Else
                command.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_MMC_NOTE Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(ADJUNCTIVE_MMC_NOTE,String)
            End If
            If (ADJUNCTIVE_5FU.HasValue = true) Then
                command.Parameters(33).Value = CType(ADJUNCTIVE_5FU.Value,Boolean)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (ADJUNCTIVE_5FU_NOTE Is Nothing) Then
                command.Parameters(34).Value = Global.System.DBNull.Value
            Else
                command.Parameters(34).Value = CType(ADJUNCTIVE_5FU_NOTE,String)
            End If
            If (INTRABLE.HasValue = true) Then
                command.Parameters(35).Value = CType(INTRABLE.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (SOAKED.HasValue = true) Then
                command.Parameters(36).Value = CType(SOAKED.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (SOAKED_NOTE Is Nothing) Then
                command.Parameters(37).Value = Global.System.DBNull.Value
            Else
                command.Parameters(37).Value = CType(SOAKED_NOTE,String)
            End If
            If (IRRIGATION_NO.HasValue = true) Then
                command.Parameters(38).Value = CType(IRRIGATION_NO.Value,Boolean)
            Else
                command.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_YES.HasValue = true) Then
                command.Parameters(39).Value = CType(IRRIGATION_YES.Value,Boolean)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_WITH Is Nothing) Then
                command.Parameters(40).Value = Global.System.DBNull.Value
            Else
                command.Parameters(40).Value = CType(IRRIGATION_WITH,String)
            End If
            If (IRRIGATION_NOT_DONE.HasValue = true) Then
                command.Parameters(41).Value = CType(IRRIGATION_NOT_DONE.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_DONE.HasValue = true) Then
                command.Parameters(42).Value = CType(IRRIGATION_DONE.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (IRRIGATION_DONE_NOTE Is Nothing) Then
                command.Parameters(43).Value = Global.System.DBNull.Value
            Else
                command.Parameters(43).Value = CType(IRRIGATION_DONE_NOTE,String)
            End If
            If (PARACENTESIS_NOTE_DONE.HasValue = true) Then
                command.Parameters(44).Value = CType(PARACENTESIS_NOTE_DONE.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (PARACENTESIS_DONE.HasValue = true) Then
                command.Parameters(45).Value = CType(PARACENTESIS_DONE.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (PARACENTESIS_DONE_NOTE Is Nothing) Then
                command.Parameters(46).Value = Global.System.DBNull.Value
            Else
                command.Parameters(46).Value = CType(PARACENTESIS_DONE_NOTE,String)
            End If
            If (TRABECULECTOMY1 Is Nothing) Then
                command.Parameters(47).Value = Global.System.DBNull.Value
            Else
                command.Parameters(47).Value = CType(TRABECULECTOMY1,String)
            End If
            If (TRABECULECTOMY2 Is Nothing) Then
                command.Parameters(48).Value = Global.System.DBNull.Value
            Else
                command.Parameters(48).Value = CType(TRABECULECTOMY2,String)
            End If
            If (IRIDECTOMY_NOT_DONE.HasValue = true) Then
                command.Parameters(49).Value = CType(IRIDECTOMY_NOT_DONE.Value,Boolean)
            Else
                command.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (IRIDECTOMY_DONE.HasValue = true) Then
                command.Parameters(50).Value = CType(IRIDECTOMY_DONE.Value,Boolean)
            Else
                command.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (IRIDECTOMY_DONE_NOTE Is Nothing) Then
                command.Parameters(51).Value = Global.System.DBNull.Value
            Else
                command.Parameters(51).Value = CType(IRIDECTOMY_DONE_NOTE,String)
            End If
            If (SCLERAL_NOTE_NO Is Nothing) Then
                command.Parameters(52).Value = Global.System.DBNull.Value
            Else
                command.Parameters(52).Value = CType(SCLERAL_NOTE_NO,String)
            End If
            If (SCLERAL_100NYLON.HasValue = true) Then
                command.Parameters(53).Value = CType(SCLERAL_100NYLON.Value,Boolean)
            Else
                command.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_100PROLENE.HasValue = true) Then
                command.Parameters(54).Value = CType(SCLERAL_100PROLENE.Value,Boolean)
            Else
                command.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_RELEASABLE.HasValue = true) Then
                command.Parameters(55).Value = CType(SCLERAL_RELEASABLE.Value,Boolean)
            Else
                command.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (SCLERAL_NOTE Is Nothing) Then
                command.Parameters(56).Value = Global.System.DBNull.Value
            Else
                command.Parameters(56).Value = CType(SCLERAL_NOTE,String)
            End If
            If (CONJUNCTIVAL_CONTINUOS.HasValue = true) Then
                command.Parameters(57).Value = CType(CONJUNCTIVAL_CONTINUOS.Value,Boolean)
            Else
                command.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_INTERRUPTED.HasValue = true) Then
                command.Parameters(58).Value = CType(CONJUNCTIVAL_INTERRUPTED.Value,Boolean)
            Else
                command.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_INTERRUPTED_NOTE Is Nothing) Then
                command.Parameters(59).Value = Global.System.DBNull.Value
            Else
                command.Parameters(59).Value = CType(CONJUNCTIVAL_INTERRUPTED_NOTE,String)
            End If
            If (CONJUNCTIVAL_100NYLON.HasValue = true) Then
                command.Parameters(60).Value = CType(CONJUNCTIVAL_100NYLON.Value,Boolean)
            Else
                command.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_100PROLENE.HasValue = true) Then
                command.Parameters(61).Value = CType(CONJUNCTIVAL_100PROLENE.Value,Boolean)
            Else
                command.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_OTHERS Is Nothing) Then
                command.Parameters(62).Value = Global.System.DBNull.Value
            Else
                command.Parameters(62).Value = CType(CONJUNCTIVAL_OTHERS,String)
            End If
            If (COPLICATION_NONE.HasValue = true) Then
                command.Parameters(63).Value = CType(COPLICATION_NONE.Value,Boolean)
            Else
                command.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (COPLICATION_YES.HasValue = true) Then
                command.Parameters(64).Value = CType(COPLICATION_YES.Value,Boolean)
            Else
                command.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (OTHER_PROCEDURES Is Nothing) Then
                command.Parameters(65).Value = Global.System.DBNull.Value
            Else
                command.Parameters(65).Value = CType(OTHER_PROCEDURES,String)
            End If
            If (SUB_GENTAL2MG.HasValue = true) Then
                command.Parameters(66).Value = CType(SUB_GENTAL2MG.Value,Boolean)
            Else
                command.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (SUB_CEFAZOLIN50MG.HasValue = true) Then
                command.Parameters(67).Value = CType(SUB_CEFAZOLIN50MG.Value,Boolean)
            Else
                command.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (SUB_DEXAMETHASONE_25MG.HasValue = true) Then
                command.Parameters(68).Value = CType(SUB_DEXAMETHASONE_25MG.Value,Boolean)
            Else
                command.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (SUB_OTHER Is Nothing) Then
                command.Parameters(69).Value = Global.System.DBNull.Value
            Else
                command.Parameters(69).Value = CType(SUB_OTHER,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(70).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_PILOCARPINE2.HasValue = true) Then
                command.Parameters(71).Value = CType(TOPICAL_PILOCARPINE2.Value,Boolean)
            Else
                command.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_VIGAMOX.HasValue = true) Then
                command.Parameters(72).Value = CType(TOPICAL_VIGAMOX.Value,Boolean)
            Else
                command.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHERS Is Nothing) Then
                command.Parameters(73).Value = Global.System.DBNull.Value
            Else
                command.Parameters(73).Value = CType(TOPICAL_OTHERS,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(74).Value = Global.System.DBNull.Value
            Else
                command.Parameters(74).Value = CType(SURGEON_SIGNATURE,String)
            End If
            command.Parameters(75).Value = CType(Original_TRABECULECTIOMY_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class S_OPER_PTERYGIUMTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "S_OPER_PTERYGIUM"
            tableMapping.ColumnMappings.Add("PTERYGIUM_ID", "PTERYGIUM_ID")
            tableMapping.ColumnMappings.Add("CREATE_DATE", "CREATE_DATE")
            tableMapping.ColumnMappings.Add("OPERA_NO", "OPERA_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NO", "PATIENT_NO")
            tableMapping.ColumnMappings.Add("PATIENT_NAME", "PATIENT_NAME")
            tableMapping.ColumnMappings.Add("PATIENT_SEX", "PATIENT_SEX")
            tableMapping.ColumnMappings.Add("PATIENT_AGE", "PATIENT_AGE")
            tableMapping.ColumnMappings.Add("START_TIME", "START_TIME")
            tableMapping.ColumnMappings.Add("SURGEON", "SURGEON")
            tableMapping.ColumnMappings.Add("SCRUB", "SCRUB")
            tableMapping.ColumnMappings.Add("CIRCULATING", "CIRCULATING")
            tableMapping.ColumnMappings.Add("ANESTHESIONLOGIST", "ANESTHESIONLOGIST")
            tableMapping.ColumnMappings.Add("DIAGNOSIS", "DIAGNOSIS")
            tableMapping.ColumnMappings.Add("RIGHT_EYE", "RIGHT_EYE")
            tableMapping.ColumnMappings.Add("LEFT_EYE", "LEFT_EYE")
            tableMapping.ColumnMappings.Add("S_AN_GA", "S_AN_GA")
            tableMapping.ColumnMappings.Add("S_AN_NEURO", "S_AN_NEURO")
            tableMapping.ColumnMappings.Add("S_AN_STANDBY", "S_AN_STANDBY")
            tableMapping.ColumnMappings.Add("S_AN_RETROBULBAR", "S_AN_RETROBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_PERIBULBAR", "S_AN_PERIBULBAR")
            tableMapping.ColumnMappings.Add("S_AN_TOPICAL", "S_AN_TOPICAL")
            tableMapping.ColumnMappings.Add("S_AN_SUBCONJUNCTIVAL", "S_AN_SUBCONJUNCTIVAL")
            tableMapping.ColumnMappings.Add("PTERYGIUM_NASAL", "PTERYGIUM_NASAL")
            tableMapping.ColumnMappings.Add("PTERYGIUM_TEMPORAL", "PTERYGIUM_TEMPORAL")
            tableMapping.ColumnMappings.Add("BRIDAL_SUPERIOR", "BRIDAL_SUPERIOR")
            tableMapping.ColumnMappings.Add("BRIDAL_70VICRYL", "BRIDAL_70VICRYL")
            tableMapping.ColumnMappings.Add("BRIDAL_80SILK", "BRIDAL_80SILK")
            tableMapping.ColumnMappings.Add("BRIDAL_OTHERS", "BRIDAL_OTHERS")
            tableMapping.ColumnMappings.Add("SUBCONJUNCTIVAL_XYLOCAIN_WITH", "SUBCONJUNCTIVAL_XYLOCAIN_WITH")
            tableMapping.ColumnMappings.Add("SUBCONJUNCTIVAL_XYLOCAIN", "SUBCONJUNCTIVAL_XYLOCAIN")
            tableMapping.ColumnMappings.Add("SUBCONJUNCTIVAL_NONE", "SUBCONJUNCTIVAL_NONE")
            tableMapping.ColumnMappings.Add("PTERYGIUM_SCISSORS", "PTERYGIUM_SCISSORS")
            tableMapping.ColumnMappings.Add("PTERYGIUM_OTHER", "PTERYGIUM_OTHER")
            tableMapping.ColumnMappings.Add("CAUTERY_MILD", "CAUTERY_MILD")
            tableMapping.ColumnMappings.Add("CAUTERY_69BLADE", "CAUTERY_69BLADE")
            tableMapping.ColumnMappings.Add("CAUTERY_MODRATE", "CAUTERY_MODRATE")
            tableMapping.ColumnMappings.Add("CAUTERY_EXTENSIVE", "CAUTERY_EXTENSIVE")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_SUPERIOR", "CONJUNCTIVAL_SUPERIOR")
            tableMapping.ColumnMappings.Add("CONJUNCTIVAL_OTHER_SITE", "CONJUNCTIVAL_OTHER_SITE")
            tableMapping.ColumnMappings.Add("SIZE1", "SIZE1")
            tableMapping.ColumnMappings.Add("SIZE2", "SIZE2")
            tableMapping.ColumnMappings.Add("GRAFT_80VERGIN", "GRAFT_80VERGIN")
            tableMapping.ColumnMappings.Add("GRAFT_100NYLON", "GRAFT_100NYLON")
            tableMapping.ColumnMappings.Add("GRAFT_OTHER", "GRAFT_OTHER")
            tableMapping.ColumnMappings.Add("GRAFT_90NYLON", "GRAFT_90NYLON")
            tableMapping.ColumnMappings.Add("GRAFT_RUNNING", "GRAFT_RUNNING")
            tableMapping.ColumnMappings.Add("GRAFT_INTERRUPTED", "GRAFT_INTERRUPTED")
            tableMapping.ColumnMappings.Add("GRAFT_COMBINED", "GRAFT_COMBINED")
            tableMapping.ColumnMappings.Add("SUBCONJUNCTIVAL_GENTAL", "SUBCONJUNCTIVAL_GENTAL")
            tableMapping.ColumnMappings.Add("SUBCONJUNCTIVAL_CEFAZOLIN", "SUBCONJUNCTIVAL_CEFAZOLIN")
            tableMapping.ColumnMappings.Add("SUBCONJUNCTIVAL_DEXAMETHASONE", "SUBCONJUNCTIVAL_DEXAMETHASONE")
            tableMapping.ColumnMappings.Add("SUBCONJUNCTIVAL_OTHERS", "SUBCONJUNCTIVAL_OTHERS")
            tableMapping.ColumnMappings.Add("TOPICAL_MAXITROL", "TOPICAL_MAXITROL")
            tableMapping.ColumnMappings.Add("TOPICAL_TOBRADEX", "TOPICAL_TOBRADEX")
            tableMapping.ColumnMappings.Add("TOPICAL_OTHER", "TOPICAL_OTHER")
            tableMapping.ColumnMappings.Add("EXTRA_NOTES", "EXTRA_NOTES")
            tableMapping.ColumnMappings.Add("SURGEON_SIGNATURE", "SURGEON_SIGNATURE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[S_OPER_PTERYGIUM] WHERE (([PTERYGIUM_ID] = @Original_PTERYGIUM"& _ 
                "_ID) AND ((@IsNull_CREATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DATE] "& _ 
                "= @Original_CREATE_DATE)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL) OR "& _ 
                "([OPERA_NO] = @Original_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [PATIENT_NO]"& _ 
                " IS NULL) OR ([PATIENT_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATIENT_NAME ="& _ 
                " 1 AND [PATIENT_NAME] IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_NAME)) AND"& _ 
                " ((@IsNull_PATIENT_SEX = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX] = @Origi"& _ 
                "nal_PATIENT_SEX)) AND ((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS NULL) OR (["& _ 
                "PATIENT_AGE] = @Original_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AND [START_T"& _ 
                "IME] IS NULL) OR ([START_TIME] = @Original_START_TIME)) AND ((@IsNull_SURGEON = "& _ 
                "1 AND [SURGEON] IS NULL) OR ([SURGEON] = @Original_SURGEON)) AND ((@IsNull_SCRUB"& _ 
                " = 1 AND [SCRUB] IS NULL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_CIRCULAT"& _ 
                "ING = 1 AND [CIRCULATING] IS NULL) OR ([CIRCULATING] = @Original_CIRCULATING)) A"& _ 
                "ND ((@IsNull_ANESTHESIONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ([ANESTHE"& _ 
                "SIONLOGIST] = @Original_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 AND [DIA"& _ 
                "GNOSIS] IS NULL) OR ([DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_RIGHT_EYE"& _ 
                " = 1 AND [RIGHT_EYE] IS NULL) OR ([RIGHT_EYE] = @Original_RIGHT_EYE)) AND ((@IsN"& _ 
                "ull_LEFT_EYE = 1 AND [LEFT_EYE] IS NULL) OR ([LEFT_EYE] = @Original_LEFT_EYE)) A"& _ 
                "ND ((@IsNull_S_AN_GA = 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_G"& _ 
                "A)) AND ((@IsNull_S_AN_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @O"& _ 
                "riginal_S_AN_NEURO)) AND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) "& _ 
                "OR ([S_AN_STANDBY] = @Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1"& _ 
                " AND [S_AN_RETROBULBAR] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBU"& _ 
                "LBAR)) AND ((@IsNull_S_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_A"& _ 
                "N_PERIBULBAR] = @Original_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND ["& _ 
                "S_AN_TOPICAL] IS NULL) OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNu"& _ 
                "ll_S_AN_SUBCONJUNCTIVAL = 1 AND [S_AN_SUBCONJUNCTIVAL] IS NULL) OR ([S_AN_SUBCON"& _ 
                "JUNCTIVAL] = @Original_S_AN_SUBCONJUNCTIVAL)) AND ((@IsNull_PTERYGIUM_NASAL = 1 "& _ 
                "AND [PTERYGIUM_NASAL] IS NULL) OR ([PTERYGIUM_NASAL] = @Original_PTERYGIUM_NASAL"& _ 
                ")) AND ((@IsNull_PTERYGIUM_TEMPORAL = 1 AND [PTERYGIUM_TEMPORAL] IS NULL) OR ([P"& _ 
                "TERYGIUM_TEMPORAL] = @Original_PTERYGIUM_TEMPORAL)) AND ((@IsNull_BRIDAL_SUPERIO"& _ 
                "R = 1 AND [BRIDAL_SUPERIOR] IS NULL) OR ([BRIDAL_SUPERIOR] = @Original_BRIDAL_SU"& _ 
                "PERIOR)) AND ((@IsNull_BRIDAL_70VICRYL = 1 AND [BRIDAL_70VICRYL] IS NULL) OR ([B"& _ 
                "RIDAL_70VICRYL] = @Original_BRIDAL_70VICRYL)) AND ((@IsNull_BRIDAL_80SILK = 1 AN"& _ 
                "D [BRIDAL_80SILK] IS NULL) OR ([BRIDAL_80SILK] = @Original_BRIDAL_80SILK)) AND ("& _ 
                "(@IsNull_BRIDAL_OTHERS = 1 AND [BRIDAL_OTHERS] IS NULL) OR ([BRIDAL_OTHERS] = @O"& _ 
                "riginal_BRIDAL_OTHERS)) AND ((@IsNull_SUBCONJUNCTIVAL_XYLOCAIN_WITH = 1 AND [SUB"& _ 
                "CONJUNCTIVAL_XYLOCAIN_WITH] IS NULL) OR ([SUBCONJUNCTIVAL_XYLOCAIN_WITH] = @Orig"& _ 
                "inal_SUBCONJUNCTIVAL_XYLOCAIN_WITH)) AND ((@IsNull_SUBCONJUNCTIVAL_XYLOCAIN = 1 "& _ 
                "AND [SUBCONJUNCTIVAL_XYLOCAIN] IS NULL) OR ([SUBCONJUNCTIVAL_XYLOCAIN] = @Origin"& _ 
                "al_SUBCONJUNCTIVAL_XYLOCAIN)) AND ((@IsNull_SUBCONJUNCTIVAL_NONE = 1 AND [SUBCON"& _ 
                "JUNCTIVAL_NONE] IS NULL) OR ([SUBCONJUNCTIVAL_NONE] = @Original_SUBCONJUNCTIVAL_"& _ 
                "NONE)) AND ((@IsNull_PTERYGIUM_SCISSORS = 1 AND [PTERYGIUM_SCISSORS] IS NULL) OR"& _ 
                " ([PTERYGIUM_SCISSORS] = @Original_PTERYGIUM_SCISSORS)) AND ((@IsNull_PTERYGIUM_"& _ 
                "OTHER = 1 AND [PTERYGIUM_OTHER] IS NULL) OR ([PTERYGIUM_OTHER] = @Original_PTERY"& _ 
                "GIUM_OTHER)) AND ((@IsNull_CAUTERY_MILD = 1 AND [CAUTERY_MILD] IS NULL) OR ([CAU"& _ 
                "TERY_MILD] = @Original_CAUTERY_MILD)) AND ((@IsNull_CAUTERY_69BLADE = 1 AND [CAU"& _ 
                "TERY_69BLADE] IS NULL) OR ([CAUTERY_69BLADE] = @Original_CAUTERY_69BLADE)) AND ("& _ 
                "(@IsNull_CAUTERY_MODRATE = 1 AND [CAUTERY_MODRATE] IS NULL) OR ([CAUTERY_MODRATE"& _ 
                "] = @Original_CAUTERY_MODRATE)) AND ((@IsNull_CAUTERY_EXTENSIVE = 1 AND [CAUTERY"& _ 
                "_EXTENSIVE] IS NULL) OR ([CAUTERY_EXTENSIVE] = @Original_CAUTERY_EXTENSIVE)) AND"& _ 
                " ((@IsNull_CONJUNCTIVAL_SUPERIOR = 1 AND [CONJUNCTIVAL_SUPERIOR] IS NULL) OR ([C"& _ 
                "ONJUNCTIVAL_SUPERIOR] = @Original_CONJUNCTIVAL_SUPERIOR)) AND ((@IsNull_CONJUNCT"& _ 
                "IVAL_OTHER_SITE = 1 AND [CONJUNCTIVAL_OTHER_SITE] IS NULL) OR ([CONJUNCTIVAL_OTH"& _ 
                "ER_SITE] = @Original_CONJUNCTIVAL_OTHER_SITE)) AND ((@IsNull_SIZE1 = 1 AND [SIZE"& _ 
                "1] IS NULL) OR ([SIZE1] = @Original_SIZE1)) AND ((@IsNull_SIZE2 = 1 AND [SIZE2] "& _ 
                "IS NULL) OR ([SIZE2] = @Original_SIZE2)) AND ((@IsNull_GRAFT_80VERGIN = 1 AND [G"& _ 
                "RAFT_80VERGIN] IS NULL) OR ([GRAFT_80VERGIN] = @Original_GRAFT_80VERGIN)) AND (("& _ 
                "@IsNull_GRAFT_100NYLON = 1 AND [GRAFT_100NYLON] IS NULL) OR ([GRAFT_100NYLON] = "& _ 
                "@Original_GRAFT_100NYLON)) AND ((@IsNull_GRAFT_OTHER = 1 AND [GRAFT_OTHER] IS NU"& _ 
                "LL) OR ([GRAFT_OTHER] = @Original_GRAFT_OTHER)) AND ((@IsNull_GRAFT_90NYLON = 1 "& _ 
                "AND [GRAFT_90NYLON] IS NULL) OR ([GRAFT_90NYLON] = @Original_GRAFT_90NYLON)) AND"& _ 
                " ((@IsNull_GRAFT_RUNNING = 1 AND [GRAFT_RUNNING] IS NULL) OR ([GRAFT_RUNNING] = "& _ 
                "@Original_GRAFT_RUNNING)) AND ((@IsNull_GRAFT_INTERRUPTED = 1 AND [GRAFT_INTERRU"& _ 
                "PTED] IS NULL) OR ([GRAFT_INTERRUPTED] = @Original_GRAFT_INTERRUPTED)) AND ((@Is"& _ 
                "Null_GRAFT_COMBINED = 1 AND [GRAFT_COMBINED] IS NULL) OR ([GRAFT_COMBINED] = @Or"& _ 
                "iginal_GRAFT_COMBINED)) AND ((@IsNull_SUBCONJUNCTIVAL_GENTAL = 1 AND [SUBCONJUNC"& _ 
                "TIVAL_GENTAL] IS NULL) OR ([SUBCONJUNCTIVAL_GENTAL] = @Original_SUBCONJUNCTIVAL_"& _ 
                "GENTAL)) AND ((@IsNull_SUBCONJUNCTIVAL_CEFAZOLIN = 1 AND [SUBCONJUNCTIVAL_CEFAZO"& _ 
                "LIN] IS NULL) OR ([SUBCONJUNCTIVAL_CEFAZOLIN] = @Original_SUBCONJUNCTIVAL_CEFAZO"& _ 
                "LIN)) AND ((@IsNull_SUBCONJUNCTIVAL_DEXAMETHASONE = 1 AND [SUBCONJUNCTIVAL_DEXAM"& _ 
                "ETHASONE] IS NULL) OR ([SUBCONJUNCTIVAL_DEXAMETHASONE] = @Original_SUBCONJUNCTIV"& _ 
                "AL_DEXAMETHASONE)) AND ((@IsNull_SUBCONJUNCTIVAL_OTHERS = 1 AND [SUBCONJUNCTIVAL"& _ 
                "_OTHERS] IS NULL) OR ([SUBCONJUNCTIVAL_OTHERS] = @Original_SUBCONJUNCTIVAL_OTHER"& _ 
                "S)) AND ((@IsNull_TOPICAL_MAXITROL = 1 AND [TOPICAL_MAXITROL] IS NULL) OR ([TOPI"& _ 
                "CAL_MAXITROL] = @Original_TOPICAL_MAXITROL)) AND ((@IsNull_TOPICAL_TOBRADEX = 1 "& _ 
                "AND [TOPICAL_TOBRADEX] IS NULL) OR ([TOPICAL_TOBRADEX] = @Original_TOPICAL_TOBRA"& _ 
                "DEX)) AND ((@IsNull_TOPICAL_OTHER = 1 AND [TOPICAL_OTHER] IS NULL) OR ([TOPICAL_"& _ 
                "OTHER] = @Original_TOPICAL_OTHER)) AND ((@IsNull_EXTRA_NOTES = 1 AND [EXTRA_NOTE"& _ 
                "S] IS NULL) OR ([EXTRA_NOTES] = @Original_EXTRA_NOTES)) AND ((@IsNull_SURGEON_SI"& _ 
                "GNATURE = 1 AND [SURGEON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE] = @Original"& _ 
                "_SURGEON_SIGNATURE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PTERYGIUM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PTERYGIUM_NASAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_NASAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_NASAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_NASAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PTERYGIUM_TEMPORAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_TEMPORAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_TEMPORAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_TEMPORAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BRIDAL_SUPERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_SUPERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BRIDAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_SUPERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BRIDAL_70VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_70VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BRIDAL_70VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_70VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BRIDAL_80SILK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_80SILK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BRIDAL_80SILK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_80SILK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BRIDAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BRIDAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_NONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_NONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_NONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_NONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PTERYGIUM_SCISSORS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_SCISSORS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_SCISSORS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_SCISSORS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PTERYGIUM_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_MILD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MILD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_MILD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MILD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_69BLADE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_69BLADE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_69BLADE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_69BLADE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_MODRATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MODRATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_MODRATE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MODRATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_SUPERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_SUPERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_SUPERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_OTHER_SITE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHER_SITE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_OTHER_SITE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHER_SITE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIZE1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIZE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIZE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIZE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_80VERGIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_80VERGIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_80VERGIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_80VERGIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_100NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_100NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_100NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_90NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_90NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_90NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_90NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_RUNNING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_RUNNING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_RUNNING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_RUNNING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_INTERRUPTED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_INTERRUPTED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_INTERRUPTED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_COMBINED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_COMBINED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_COMBINED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_COMBINED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_GENTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_GENTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_GENTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_TOBRADEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_TOBRADEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_TOBRADEX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_TOBRADEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[S_OPER_PTERYGIUM] ([CREATE_DATE], [OPERA_NO], [PATIENT_NO], [P"& _ 
                "ATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], [SCRUB], [C"& _ 
                "IRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [RIGHT_EYE], [LEFT_EYE], [S_AN_GA"& _ 
                "], [S_AN_NEURO], [S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TO"& _ 
                "PICAL], [S_AN_SUBCONJUNCTIVAL], [PTERYGIUM_NASAL], [PTERYGIUM_TEMPORAL], [BRIDAL"& _ 
                "_SUPERIOR], [BRIDAL_70VICRYL], [BRIDAL_80SILK], [BRIDAL_OTHERS], [SUBCONJUNCTIVA"& _ 
                "L_XYLOCAIN_WITH], [SUBCONJUNCTIVAL_XYLOCAIN], [SUBCONJUNCTIVAL_NONE], [PTERYGIUM"& _ 
                "_SCISSORS], [PTERYGIUM_OTHER], [CAUTERY_MILD], [CAUTERY_69BLADE], [CAUTERY_MODRA"& _ 
                "TE], [CAUTERY_EXTENSIVE], [CONJUNCTIVAL_SUPERIOR], [CONJUNCTIVAL_OTHER_SITE], [S"& _ 
                "IZE1], [SIZE2], [GRAFT_80VERGIN], [GRAFT_100NYLON], [GRAFT_OTHER], [GRAFT_90NYLO"& _ 
                "N], [GRAFT_RUNNING], [GRAFT_INTERRUPTED], [GRAFT_COMBINED], [SUBCONJUNCTIVAL_GEN"& _ 
                "TAL], [SUBCONJUNCTIVAL_CEFAZOLIN], [SUBCONJUNCTIVAL_DEXAMETHASONE], [SUBCONJUNCT"& _ 
                "IVAL_OTHERS], [TOPICAL_MAXITROL], [TOPICAL_TOBRADEX], [TOPICAL_OTHER], [EXTRA_NO"& _ 
                "TES], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PATIENT_NO, @PATIEN"& _ 
                "T_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @SCRUB, @CIRCULATING,"& _ 
                " @ANESTHESIONLOGIST, @DIAGNOSIS, @RIGHT_EYE, @LEFT_EYE, @S_AN_GA, @S_AN_NEURO, @"& _ 
                "S_AN_STANDBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @S_AN_SUBCONJU"& _ 
                "NCTIVAL, @PTERYGIUM_NASAL, @PTERYGIUM_TEMPORAL, @BRIDAL_SUPERIOR, @BRIDAL_70VICR"& _ 
                "YL, @BRIDAL_80SILK, @BRIDAL_OTHERS, @SUBCONJUNCTIVAL_XYLOCAIN_WITH, @SUBCONJUNCT"& _ 
                "IVAL_XYLOCAIN, @SUBCONJUNCTIVAL_NONE, @PTERYGIUM_SCISSORS, @PTERYGIUM_OTHER, @CA"& _ 
                "UTERY_MILD, @CAUTERY_69BLADE, @CAUTERY_MODRATE, @CAUTERY_EXTENSIVE, @CONJUNCTIVA"& _ 
                "L_SUPERIOR, @CONJUNCTIVAL_OTHER_SITE, @SIZE1, @SIZE2, @GRAFT_80VERGIN, @GRAFT_10"& _ 
                "0NYLON, @GRAFT_OTHER, @GRAFT_90NYLON, @GRAFT_RUNNING, @GRAFT_INTERRUPTED, @GRAFT"& _ 
                "_COMBINED, @SUBCONJUNCTIVAL_GENTAL, @SUBCONJUNCTIVAL_CEFAZOLIN, @SUBCONJUNCTIVAL"& _ 
                "_DEXAMETHASONE, @SUBCONJUNCTIVAL_OTHERS, @TOPICAL_MAXITROL, @TOPICAL_TOBRADEX, @"& _ 
                "TOPICAL_OTHER, @EXTRA_NOTES, @SURGEON_SIGNATURE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PTERYGIUM_ID, CREATE_D"& _ 
                "ATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, S"& _ 
                "URGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, RIGHT_EYE, LEFT_EYE, S"& _ 
                "_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICA"& _ 
                "L, S_AN_SUBCONJUNCTIVAL, PTERYGIUM_NASAL, PTERYGIUM_TEMPORAL, BRIDAL_SUPERIOR, B"& _ 
                "RIDAL_70VICRYL, BRIDAL_80SILK, BRIDAL_OTHERS, SUBCONJUNCTIVAL_XYLOCAIN_WITH, SUB"& _ 
                "CONJUNCTIVAL_XYLOCAIN, SUBCONJUNCTIVAL_NONE, PTERYGIUM_SCISSORS, PTERYGIUM_OTHER"& _ 
                ", CAUTERY_MILD, CAUTERY_69BLADE, CAUTERY_MODRATE, CAUTERY_EXTENSIVE, CONJUNCTIVA"& _ 
                "L_SUPERIOR, CONJUNCTIVAL_OTHER_SITE, SIZE1, SIZE2, GRAFT_80VERGIN, GRAFT_100NYLO"& _ 
                "N, GRAFT_OTHER, GRAFT_90NYLON, GRAFT_RUNNING, GRAFT_INTERRUPTED, GRAFT_COMBINED,"& _ 
                " SUBCONJUNCTIVAL_GENTAL, SUBCONJUNCTIVAL_CEFAZOLIN, SUBCONJUNCTIVAL_DEXAMETHASON"& _ 
                "E, SUBCONJUNCTIVAL_OTHERS, TOPICAL_MAXITROL, TOPICAL_TOBRADEX, TOPICAL_OTHER, EX"& _ 
                "TRA_NOTES, SURGEON_SIGNATURE FROM S_OPER_PTERYGIUM WHERE (PTERYGIUM_ID = SCOPE_I"& _ 
                "DENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_NASAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_NASAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_TEMPORAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_TEMPORAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_SUPERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_70VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_70VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_80SILK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_80SILK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_NONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_NONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_SCISSORS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_SCISSORS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_MILD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MILD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_69BLADE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_69BLADE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_MODRATE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MODRATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_SUPERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_OTHER_SITE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHER_SITE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_80VERGIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_80VERGIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_90NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_90NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_RUNNING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_RUNNING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_INTERRUPTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_COMBINED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_COMBINED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_TOBRADEX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_TOBRADEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[S_OPER_PTERYGIUM] SET [CREATE_DATE] = @CREATE_DATE, [OPERA_NO] = @O"& _ 
                "PERA_NO, [PATIENT_NO] = @PATIENT_NO, [PATIENT_NAME] = @PATIENT_NAME, [PATIENT_SE"& _ 
                "X] = @PATIENT_SEX, [PATIENT_AGE] = @PATIENT_AGE, [START_TIME] = @START_TIME, [SU"& _ 
                "RGEON] = @SURGEON, [SCRUB] = @SCRUB, [CIRCULATING] = @CIRCULATING, [ANESTHESIONL"& _ 
                "OGIST] = @ANESTHESIONLOGIST, [DIAGNOSIS] = @DIAGNOSIS, [RIGHT_EYE] = @RIGHT_EYE,"& _ 
                " [LEFT_EYE] = @LEFT_EYE, [S_AN_GA] = @S_AN_GA, [S_AN_NEURO] = @S_AN_NEURO, [S_AN"& _ 
                "_STANDBY] = @S_AN_STANDBY, [S_AN_RETROBULBAR] = @S_AN_RETROBULBAR, [S_AN_PERIBUL"& _ 
                "BAR] = @S_AN_PERIBULBAR, [S_AN_TOPICAL] = @S_AN_TOPICAL, [S_AN_SUBCONJUNCTIVAL] "& _ 
                "= @S_AN_SUBCONJUNCTIVAL, [PTERYGIUM_NASAL] = @PTERYGIUM_NASAL, [PTERYGIUM_TEMPOR"& _ 
                "AL] = @PTERYGIUM_TEMPORAL, [BRIDAL_SUPERIOR] = @BRIDAL_SUPERIOR, [BRIDAL_70VICRY"& _ 
                "L] = @BRIDAL_70VICRYL, [BRIDAL_80SILK] = @BRIDAL_80SILK, [BRIDAL_OTHERS] = @BRID"& _ 
                "AL_OTHERS, [SUBCONJUNCTIVAL_XYLOCAIN_WITH] = @SUBCONJUNCTIVAL_XYLOCAIN_WITH, [SU"& _ 
                "BCONJUNCTIVAL_XYLOCAIN] = @SUBCONJUNCTIVAL_XYLOCAIN, [SUBCONJUNCTIVAL_NONE] = @S"& _ 
                "UBCONJUNCTIVAL_NONE, [PTERYGIUM_SCISSORS] = @PTERYGIUM_SCISSORS, [PTERYGIUM_OTHE"& _ 
                "R] = @PTERYGIUM_OTHER, [CAUTERY_MILD] = @CAUTERY_MILD, [CAUTERY_69BLADE] = @CAUT"& _ 
                "ERY_69BLADE, [CAUTERY_MODRATE] = @CAUTERY_MODRATE, [CAUTERY_EXTENSIVE] = @CAUTER"& _ 
                "Y_EXTENSIVE, [CONJUNCTIVAL_SUPERIOR] = @CONJUNCTIVAL_SUPERIOR, [CONJUNCTIVAL_OTH"& _ 
                "ER_SITE] = @CONJUNCTIVAL_OTHER_SITE, [SIZE1] = @SIZE1, [SIZE2] = @SIZE2, [GRAFT_"& _ 
                "80VERGIN] = @GRAFT_80VERGIN, [GRAFT_100NYLON] = @GRAFT_100NYLON, [GRAFT_OTHER] ="& _ 
                " @GRAFT_OTHER, [GRAFT_90NYLON] = @GRAFT_90NYLON, [GRAFT_RUNNING] = @GRAFT_RUNNIN"& _ 
                "G, [GRAFT_INTERRUPTED] = @GRAFT_INTERRUPTED, [GRAFT_COMBINED] = @GRAFT_COMBINED,"& _ 
                " [SUBCONJUNCTIVAL_GENTAL] = @SUBCONJUNCTIVAL_GENTAL, [SUBCONJUNCTIVAL_CEFAZOLIN]"& _ 
                " = @SUBCONJUNCTIVAL_CEFAZOLIN, [SUBCONJUNCTIVAL_DEXAMETHASONE] = @SUBCONJUNCTIVA"& _ 
                "L_DEXAMETHASONE, [SUBCONJUNCTIVAL_OTHERS] = @SUBCONJUNCTIVAL_OTHERS, [TOPICAL_MA"& _ 
                "XITROL] = @TOPICAL_MAXITROL, [TOPICAL_TOBRADEX] = @TOPICAL_TOBRADEX, [TOPICAL_OT"& _ 
                "HER] = @TOPICAL_OTHER, [EXTRA_NOTES] = @EXTRA_NOTES, [SURGEON_SIGNATURE] = @SURG"& _ 
                "EON_SIGNATURE WHERE (([PTERYGIUM_ID] = @Original_PTERYGIUM_ID) AND ((@IsNull_CRE"& _ 
                "ATE_DATE = 1 AND [CREATE_DATE] IS NULL) OR ([CREATE_DATE] = @Original_CREATE_DAT"& _ 
                "E)) AND ((@IsNull_OPERA_NO = 1 AND [OPERA_NO] IS NULL) OR ([OPERA_NO] = @Origina"& _ 
                "l_OPERA_NO)) AND ((@IsNull_PATIENT_NO = 1 AND [PATIENT_NO] IS NULL) OR ([PATIENT"& _ 
                "_NO] = @Original_PATIENT_NO)) AND ((@IsNull_PATIENT_NAME = 1 AND [PATIENT_NAME] "& _ 
                "IS NULL) OR ([PATIENT_NAME] = @Original_PATIENT_NAME)) AND ((@IsNull_PATIENT_SEX"& _ 
                " = 1 AND [PATIENT_SEX] IS NULL) OR ([PATIENT_SEX] = @Original_PATIENT_SEX)) AND "& _ 
                "((@IsNull_PATIENT_AGE = 1 AND [PATIENT_AGE] IS NULL) OR ([PATIENT_AGE] = @Origin"& _ 
                "al_PATIENT_AGE)) AND ((@IsNull_START_TIME = 1 AND [START_TIME] IS NULL) OR ([STA"& _ 
                "RT_TIME] = @Original_START_TIME)) AND ((@IsNull_SURGEON = 1 AND [SURGEON] IS NUL"& _ 
                "L) OR ([SURGEON] = @Original_SURGEON)) AND ((@IsNull_SCRUB = 1 AND [SCRUB] IS NU"& _ 
                "LL) OR ([SCRUB] = @Original_SCRUB)) AND ((@IsNull_CIRCULATING = 1 AND [CIRCULATI"& _ 
                "NG] IS NULL) OR ([CIRCULATING] = @Original_CIRCULATING)) AND ((@IsNull_ANESTHESI"& _ 
                "ONLOGIST = 1 AND [ANESTHESIONLOGIST] IS NULL) OR ([ANESTHESIONLOGIST] = @Origina"& _ 
                "l_ANESTHESIONLOGIST)) AND ((@IsNull_DIAGNOSIS = 1 AND [DIAGNOSIS] IS NULL) OR (["& _ 
                "DIAGNOSIS] = @Original_DIAGNOSIS)) AND ((@IsNull_RIGHT_EYE = 1 AND [RIGHT_EYE] I"& _ 
                "S NULL) OR ([RIGHT_EYE] = @Original_RIGHT_EYE)) AND ((@IsNull_LEFT_EYE = 1 AND ["& _ 
                "LEFT_EYE] IS NULL) OR ([LEFT_EYE] = @Original_LEFT_EYE)) AND ((@IsNull_S_AN_GA ="& _ 
                " 1 AND [S_AN_GA] IS NULL) OR ([S_AN_GA] = @Original_S_AN_GA)) AND ((@IsNull_S_AN"& _ 
                "_NEURO = 1 AND [S_AN_NEURO] IS NULL) OR ([S_AN_NEURO] = @Original_S_AN_NEURO)) A"& _ 
                "ND ((@IsNull_S_AN_STANDBY = 1 AND [S_AN_STANDBY] IS NULL) OR ([S_AN_STANDBY] = @"& _ 
                "Original_S_AN_STANDBY)) AND ((@IsNull_S_AN_RETROBULBAR = 1 AND [S_AN_RETROBULBAR"& _ 
                "] IS NULL) OR ([S_AN_RETROBULBAR] = @Original_S_AN_RETROBULBAR)) AND ((@IsNull_S"& _ 
                "_AN_PERIBULBAR = 1 AND [S_AN_PERIBULBAR] IS NULL) OR ([S_AN_PERIBULBAR] = @Origi"& _ 
                "nal_S_AN_PERIBULBAR)) AND ((@IsNull_S_AN_TOPICAL = 1 AND [S_AN_TOPICAL] IS NULL)"& _ 
                " OR ([S_AN_TOPICAL] = @Original_S_AN_TOPICAL)) AND ((@IsNull_S_AN_SUBCONJUNCTIVA"& _ 
                "L = 1 AND [S_AN_SUBCONJUNCTIVAL] IS NULL) OR ([S_AN_SUBCONJUNCTIVAL] = @Original"& _ 
                "_S_AN_SUBCONJUNCTIVAL)) AND ((@IsNull_PTERYGIUM_NASAL = 1 AND [PTERYGIUM_NASAL] "& _ 
                "IS NULL) OR ([PTERYGIUM_NASAL] = @Original_PTERYGIUM_NASAL)) AND ((@IsNull_PTERY"& _ 
                "GIUM_TEMPORAL = 1 AND [PTERYGIUM_TEMPORAL] IS NULL) OR ([PTERYGIUM_TEMPORAL] = @"& _ 
                "Original_PTERYGIUM_TEMPORAL)) AND ((@IsNull_BRIDAL_SUPERIOR = 1 AND [BRIDAL_SUPE"& _ 
                "RIOR] IS NULL) OR ([BRIDAL_SUPERIOR] = @Original_BRIDAL_SUPERIOR)) AND ((@IsNull"& _ 
                "_BRIDAL_70VICRYL = 1 AND [BRIDAL_70VICRYL] IS NULL) OR ([BRIDAL_70VICRYL] = @Ori"& _ 
                "ginal_BRIDAL_70VICRYL)) AND ((@IsNull_BRIDAL_80SILK = 1 AND [BRIDAL_80SILK] IS N"& _ 
                "ULL) OR ([BRIDAL_80SILK] = @Original_BRIDAL_80SILK)) AND ((@IsNull_BRIDAL_OTHERS"& _ 
                " = 1 AND [BRIDAL_OTHERS] IS NULL) OR ([BRIDAL_OTHERS] = @Original_BRIDAL_OTHERS)"& _ 
                ") AND ((@IsNull_SUBCONJUNCTIVAL_XYLOCAIN_WITH = 1 AND [SUBCONJUNCTIVAL_XYLOCAIN_"& _ 
                "WITH] IS NULL) OR ([SUBCONJUNCTIVAL_XYLOCAIN_WITH] = @Original_SUBCONJUNCTIVAL_X"& _ 
                "YLOCAIN_WITH)) AND ((@IsNull_SUBCONJUNCTIVAL_XYLOCAIN = 1 AND [SUBCONJUNCTIVAL_X"& _ 
                "YLOCAIN] IS NULL) OR ([SUBCONJUNCTIVAL_XYLOCAIN] = @Original_SUBCONJUNCTIVAL_XYL"& _ 
                "OCAIN)) AND ((@IsNull_SUBCONJUNCTIVAL_NONE = 1 AND [SUBCONJUNCTIVAL_NONE] IS NUL"& _ 
                "L) OR ([SUBCONJUNCTIVAL_NONE] = @Original_SUBCONJUNCTIVAL_NONE)) AND ((@IsNull_P"& _ 
                "TERYGIUM_SCISSORS = 1 AND [PTERYGIUM_SCISSORS] IS NULL) OR ([PTERYGIUM_SCISSORS]"& _ 
                " = @Original_PTERYGIUM_SCISSORS)) AND ((@IsNull_PTERYGIUM_OTHER = 1 AND [PTERYGI"& _ 
                "UM_OTHER] IS NULL) OR ([PTERYGIUM_OTHER] = @Original_PTERYGIUM_OTHER)) AND ((@Is"& _ 
                "Null_CAUTERY_MILD = 1 AND [CAUTERY_MILD] IS NULL) OR ([CAUTERY_MILD] = @Original"& _ 
                "_CAUTERY_MILD)) AND ((@IsNull_CAUTERY_69BLADE = 1 AND [CAUTERY_69BLADE] IS NULL)"& _ 
                " OR ([CAUTERY_69BLADE] = @Original_CAUTERY_69BLADE)) AND ((@IsNull_CAUTERY_MODRA"& _ 
                "TE = 1 AND [CAUTERY_MODRATE] IS NULL) OR ([CAUTERY_MODRATE] = @Original_CAUTERY_"& _ 
                "MODRATE)) AND ((@IsNull_CAUTERY_EXTENSIVE = 1 AND [CAUTERY_EXTENSIVE] IS NULL) O"& _ 
                "R ([CAUTERY_EXTENSIVE] = @Original_CAUTERY_EXTENSIVE)) AND ((@IsNull_CONJUNCTIVA"& _ 
                "L_SUPERIOR = 1 AND [CONJUNCTIVAL_SUPERIOR] IS NULL) OR ([CONJUNCTIVAL_SUPERIOR] "& _ 
                "= @Original_CONJUNCTIVAL_SUPERIOR)) AND ((@IsNull_CONJUNCTIVAL_OTHER_SITE = 1 AN"& _ 
                "D [CONJUNCTIVAL_OTHER_SITE] IS NULL) OR ([CONJUNCTIVAL_OTHER_SITE] = @Original_C"& _ 
                "ONJUNCTIVAL_OTHER_SITE)) AND ((@IsNull_SIZE1 = 1 AND [SIZE1] IS NULL) OR ([SIZE1"& _ 
                "] = @Original_SIZE1)) AND ((@IsNull_SIZE2 = 1 AND [SIZE2] IS NULL) OR ([SIZE2] ="& _ 
                " @Original_SIZE2)) AND ((@IsNull_GRAFT_80VERGIN = 1 AND [GRAFT_80VERGIN] IS NULL"& _ 
                ") OR ([GRAFT_80VERGIN] = @Original_GRAFT_80VERGIN)) AND ((@IsNull_GRAFT_100NYLON"& _ 
                " = 1 AND [GRAFT_100NYLON] IS NULL) OR ([GRAFT_100NYLON] = @Original_GRAFT_100NYL"& _ 
                "ON)) AND ((@IsNull_GRAFT_OTHER = 1 AND [GRAFT_OTHER] IS NULL) OR ([GRAFT_OTHER] "& _ 
                "= @Original_GRAFT_OTHER)) AND ((@IsNull_GRAFT_90NYLON = 1 AND [GRAFT_90NYLON] IS"& _ 
                " NULL) OR ([GRAFT_90NYLON] = @Original_GRAFT_90NYLON)) AND ((@IsNull_GRAFT_RUNNI"& _ 
                "NG = 1 AND [GRAFT_RUNNING] IS NULL) OR ([GRAFT_RUNNING] = @Original_GRAFT_RUNNIN"& _ 
                "G)) AND ((@IsNull_GRAFT_INTERRUPTED = 1 AND [GRAFT_INTERRUPTED] IS NULL) OR ([GR"& _ 
                "AFT_INTERRUPTED] = @Original_GRAFT_INTERRUPTED)) AND ((@IsNull_GRAFT_COMBINED = "& _ 
                "1 AND [GRAFT_COMBINED] IS NULL) OR ([GRAFT_COMBINED] = @Original_GRAFT_COMBINED)"& _ 
                ") AND ((@IsNull_SUBCONJUNCTIVAL_GENTAL = 1 AND [SUBCONJUNCTIVAL_GENTAL] IS NULL)"& _ 
                " OR ([SUBCONJUNCTIVAL_GENTAL] = @Original_SUBCONJUNCTIVAL_GENTAL)) AND ((@IsNull"& _ 
                "_SUBCONJUNCTIVAL_CEFAZOLIN = 1 AND [SUBCONJUNCTIVAL_CEFAZOLIN] IS NULL) OR ([SUB"& _ 
                "CONJUNCTIVAL_CEFAZOLIN] = @Original_SUBCONJUNCTIVAL_CEFAZOLIN)) AND ((@IsNull_SU"& _ 
                "BCONJUNCTIVAL_DEXAMETHASONE = 1 AND [SUBCONJUNCTIVAL_DEXAMETHASONE] IS NULL) OR "& _ 
                "([SUBCONJUNCTIVAL_DEXAMETHASONE] = @Original_SUBCONJUNCTIVAL_DEXAMETHASONE)) AND"& _ 
                " ((@IsNull_SUBCONJUNCTIVAL_OTHERS = 1 AND [SUBCONJUNCTIVAL_OTHERS] IS NULL) OR ("& _ 
                "[SUBCONJUNCTIVAL_OTHERS] = @Original_SUBCONJUNCTIVAL_OTHERS)) AND ((@IsNull_TOPI"& _ 
                "CAL_MAXITROL = 1 AND [TOPICAL_MAXITROL] IS NULL) OR ([TOPICAL_MAXITROL] = @Origi"& _ 
                "nal_TOPICAL_MAXITROL)) AND ((@IsNull_TOPICAL_TOBRADEX = 1 AND [TOPICAL_TOBRADEX]"& _ 
                " IS NULL) OR ([TOPICAL_TOBRADEX] = @Original_TOPICAL_TOBRADEX)) AND ((@IsNull_TO"& _ 
                "PICAL_OTHER = 1 AND [TOPICAL_OTHER] IS NULL) OR ([TOPICAL_OTHER] = @Original_TOP"& _ 
                "ICAL_OTHER)) AND ((@IsNull_EXTRA_NOTES = 1 AND [EXTRA_NOTES] IS NULL) OR ([EXTRA"& _ 
                "_NOTES] = @Original_EXTRA_NOTES)) AND ((@IsNull_SURGEON_SIGNATURE = 1 AND [SURGE"& _ 
                "ON_SIGNATURE] IS NULL) OR ([SURGEON_SIGNATURE] = @Original_SURGEON_SIGNATURE)));"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PTERYGIUM_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_"& _ 
                "SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DI"& _ 
                "AGNOSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBA"& _ 
                "R, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, PTERYGIUM_NASAL, PTERYGI"& _ 
                "UM_TEMPORAL, BRIDAL_SUPERIOR, BRIDAL_70VICRYL, BRIDAL_80SILK, BRIDAL_OTHERS, SUB"& _ 
                "CONJUNCTIVAL_XYLOCAIN_WITH, SUBCONJUNCTIVAL_XYLOCAIN, SUBCONJUNCTIVAL_NONE, PTER"& _ 
                "YGIUM_SCISSORS, PTERYGIUM_OTHER, CAUTERY_MILD, CAUTERY_69BLADE, CAUTERY_MODRATE,"& _ 
                " CAUTERY_EXTENSIVE, CONJUNCTIVAL_SUPERIOR, CONJUNCTIVAL_OTHER_SITE, SIZE1, SIZE2"& _ 
                ", GRAFT_80VERGIN, GRAFT_100NYLON, GRAFT_OTHER, GRAFT_90NYLON, GRAFT_RUNNING, GRA"& _ 
                "FT_INTERRUPTED, GRAFT_COMBINED, SUBCONJUNCTIVAL_GENTAL, SUBCONJUNCTIVAL_CEFAZOLI"& _ 
                "N, SUBCONJUNCTIVAL_DEXAMETHASONE, SUBCONJUNCTIVAL_OTHERS, TOPICAL_MAXITROL, TOPI"& _ 
                "CAL_TOBRADEX, TOPICAL_OTHER, EXTRA_NOTES, SURGEON_SIGNATURE FROM S_OPER_PTERYGIU"& _ 
                "M WHERE (PTERYGIUM_ID = @PTERYGIUM_ID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_NASAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_NASAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_TEMPORAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_TEMPORAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_SUPERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_70VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_70VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_80SILK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_80SILK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_NONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_NONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_SCISSORS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_SCISSORS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_MILD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MILD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_69BLADE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_69BLADE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_MODRATE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MODRATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_SUPERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_OTHER_SITE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHER_SITE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_80VERGIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_80VERGIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_90NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_90NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_RUNNING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_RUNNING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_INTERRUPTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_COMBINED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_COMBINED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_TOBRADEX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_TOBRADEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_ID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PTERYGIUM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CREATE_DATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OPERA_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_NAME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_SEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PATIENT_AGE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_START_TIME", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_START_TIME", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SCRUB", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SCRUB", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CIRCULATING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIAGNOSIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RIGHT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LEFT_EYE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LEFT_EYE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_GA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_GA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_NEURO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_STANDBY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_TOPICAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PTERYGIUM_NASAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_NASAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_NASAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_NASAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PTERYGIUM_TEMPORAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_TEMPORAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_TEMPORAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_TEMPORAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BRIDAL_SUPERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_SUPERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BRIDAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_SUPERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BRIDAL_70VICRYL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_70VICRYL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BRIDAL_70VICRYL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_70VICRYL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BRIDAL_80SILK", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_80SILK", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BRIDAL_80SILK", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_80SILK", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BRIDAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BRIDAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_NONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_NONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_NONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_NONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PTERYGIUM_SCISSORS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_SCISSORS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_SCISSORS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_SCISSORS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PTERYGIUM_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_MILD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MILD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_MILD", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MILD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_69BLADE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_69BLADE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_69BLADE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_69BLADE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_MODRATE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MODRATE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_MODRATE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MODRATE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_SUPERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_SUPERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_SUPERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONJUNCTIVAL_OTHER_SITE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHER_SITE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONJUNCTIVAL_OTHER_SITE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHER_SITE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIZE1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIZE1", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIZE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIZE2", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_80VERGIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_80VERGIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_80VERGIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_80VERGIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_100NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_100NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_100NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_100NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_90NYLON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_90NYLON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_90NYLON", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_90NYLON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_RUNNING", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_RUNNING", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_RUNNING", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_RUNNING", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_INTERRUPTED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_INTERRUPTED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_INTERRUPTED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_GRAFT_COMBINED", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_COMBINED", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_GRAFT_COMBINED", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_COMBINED", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_GENTAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_GENTAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_GENTAL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_GENTAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SUBCONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SUBCONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_TOBRADEX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_TOBRADEX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_TOBRADEX", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_TOBRADEX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOPICAL_OTHER", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EXTRA_NOTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_NOTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EXTRA_NOTES", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_NOTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PTERYGIUM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.TakeoHospitalInventory.My.MySettings.Default.TakeoDBConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PTERYGIUM_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX"& _ 
                ", PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGN"& _ 
                "OSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, "& _ 
                "S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, PTERYGIUM_NASAL, PTERYGIUM_"& _ 
                "TEMPORAL, BRIDAL_SUPERIOR, BRIDAL_70VICRYL, BRIDAL_80SILK, BRIDAL_OTHERS, SUBCON"& _ 
                "JUNCTIVAL_XYLOCAIN_WITH, SUBCONJUNCTIVAL_XYLOCAIN, SUBCONJUNCTIVAL_NONE, PTERYGI"& _ 
                "UM_SCISSORS, PTERYGIUM_OTHER, CAUTERY_MILD, CAUTERY_69BLADE, CAUTERY_MODRATE, CA"& _ 
                "UTERY_EXTENSIVE, CONJUNCTIVAL_SUPERIOR, CONJUNCTIVAL_OTHER_SITE, SIZE1, SIZE2, G"& _ 
                "RAFT_80VERGIN, GRAFT_100NYLON, GRAFT_OTHER, GRAFT_90NYLON, GRAFT_RUNNING, GRAFT_"& _ 
                "INTERRUPTED, GRAFT_COMBINED, SUBCONJUNCTIVAL_GENTAL, SUBCONJUNCTIVAL_CEFAZOLIN, "& _ 
                "SUBCONJUNCTIVAL_DEXAMETHASONE, SUBCONJUNCTIVAL_OTHERS, TOPICAL_MAXITROL, TOPICAL"& _ 
                "_TOBRADEX, TOPICAL_OTHER, EXTRA_NOTES, SURGEON_SIGNATURE FROM dbo.S_OPER_PTERYGI"& _ 
                "UM"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT PTERYGIUM_ID, CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX"& _ 
                ", PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGN"& _ 
                "OSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, "& _ 
                "S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, PTERYGIUM_NASAL, PTERYGIUM_"& _ 
                "TEMPORAL, BRIDAL_SUPERIOR, BRIDAL_70VICRYL, BRIDAL_80SILK, BRIDAL_OTHERS, SUBCON"& _ 
                "JUNCTIVAL_XYLOCAIN_WITH, SUBCONJUNCTIVAL_XYLOCAIN, SUBCONJUNCTIVAL_NONE, PTERYGI"& _ 
                "UM_SCISSORS, PTERYGIUM_OTHER, CAUTERY_MILD, CAUTERY_69BLADE, CAUTERY_MODRATE, CA"& _ 
                "UTERY_EXTENSIVE, CONJUNCTIVAL_SUPERIOR, CONJUNCTIVAL_OTHER_SITE, SIZE1, SIZE2, G"& _ 
                "RAFT_80VERGIN, GRAFT_100NYLON, GRAFT_OTHER, GRAFT_90NYLON, GRAFT_RUNNING, GRAFT_"& _ 
                "INTERRUPTED, GRAFT_COMBINED, SUBCONJUNCTIVAL_GENTAL, SUBCONJUNCTIVAL_CEFAZOLIN, "& _ 
                "SUBCONJUNCTIVAL_DEXAMETHASONE, SUBCONJUNCTIVAL_OTHERS, TOPICAL_MAXITROL, TOPICAL"& _ 
                "_TOBRADEX, TOPICAL_OTHER, EXTRA_NOTES, SURGEON_SIGNATURE FROM dbo.S_OPER_PTERYGI"& _ 
                "UM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE PTERYGIUM_ID=@PTERYGIUM_ID"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PTERYGIUM_ID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "INSERT INTO [dbo].[S_OPER_PTERYGIUM] ([CREATE_DATE], [OPERA_NO], [PATIENT_NO], [P"& _ 
                "ATIENT_NAME], [PATIENT_SEX], [PATIENT_AGE], [START_TIME], [SURGEON], [SCRUB], [C"& _ 
                "IRCULATING], [ANESTHESIONLOGIST], [DIAGNOSIS], [RIGHT_EYE], [LEFT_EYE], [S_AN_GA"& _ 
                "], [S_AN_NEURO], [S_AN_STANDBY], [S_AN_RETROBULBAR], [S_AN_PERIBULBAR], [S_AN_TO"& _ 
                "PICAL], [S_AN_SUBCONJUNCTIVAL], [PTERYGIUM_NASAL], [PTERYGIUM_TEMPORAL], [BRIDAL"& _ 
                "_SUPERIOR], [BRIDAL_70VICRYL], [BRIDAL_80SILK], [BRIDAL_OTHERS], [SUBCONJUNCTIVA"& _ 
                "L_XYLOCAIN_WITH], [SUBCONJUNCTIVAL_XYLOCAIN], [SUBCONJUNCTIVAL_NONE], [PTERYGIUM"& _ 
                "_SCISSORS], [PTERYGIUM_OTHER], [CAUTERY_MILD], [CAUTERY_69BLADE], [CAUTERY_MODRA"& _ 
                "TE], [CAUTERY_EXTENSIVE], [CONJUNCTIVAL_SUPERIOR], [CONJUNCTIVAL_OTHER_SITE], [S"& _ 
                "IZE1], [SIZE2], [GRAFT_80VERGIN], [GRAFT_100NYLON], [GRAFT_OTHER], [GRAFT_90NYLO"& _ 
                "N], [GRAFT_RUNNING], [GRAFT_INTERRUPTED], [GRAFT_COMBINED], [SUBCONJUNCTIVAL_GEN"& _ 
                "TAL], [SUBCONJUNCTIVAL_CEFAZOLIN], [SUBCONJUNCTIVAL_DEXAMETHASONE], [SUBCONJUNCT"& _ 
                "IVAL_OTHERS], [TOPICAL_MAXITROL], [TOPICAL_TOBRADEX], [TOPICAL_OTHER], [EXTRA_NO"& _ 
                "TES], [SURGEON_SIGNATURE]) VALUES (@CREATE_DATE, @OPERA_NO, @PATIENT_NO, @PATIEN"& _ 
                "T_NAME, @PATIENT_SEX, @PATIENT_AGE, @START_TIME, @SURGEON, @SCRUB, @CIRCULATING,"& _ 
                " @ANESTHESIONLOGIST, @DIAGNOSIS, @RIGHT_EYE, @LEFT_EYE, @S_AN_GA, @S_AN_NEURO, @"& _ 
                "S_AN_STANDBY, @S_AN_RETROBULBAR, @S_AN_PERIBULBAR, @S_AN_TOPICAL, @S_AN_SUBCONJU"& _ 
                "NCTIVAL, @PTERYGIUM_NASAL, @PTERYGIUM_TEMPORAL, @BRIDAL_SUPERIOR, @BRIDAL_70VICR"& _ 
                "YL, @BRIDAL_80SILK, @BRIDAL_OTHERS, @SUBCONJUNCTIVAL_XYLOCAIN_WITH, @SUBCONJUNCT"& _ 
                "IVAL_XYLOCAIN, @SUBCONJUNCTIVAL_NONE, @PTERYGIUM_SCISSORS, @PTERYGIUM_OTHER, @CA"& _ 
                "UTERY_MILD, @CAUTERY_69BLADE, @CAUTERY_MODRATE, @CAUTERY_EXTENSIVE, @CONJUNCTIVA"& _ 
                "L_SUPERIOR, @CONJUNCTIVAL_OTHER_SITE, @SIZE1, @SIZE2, @GRAFT_80VERGIN, @GRAFT_10"& _ 
                "0NYLON, @GRAFT_OTHER, @GRAFT_90NYLON, @GRAFT_RUNNING, @GRAFT_INTERRUPTED, @GRAFT"& _ 
                "_COMBINED, @SUBCONJUNCTIVAL_GENTAL, @SUBCONJUNCTIVAL_CEFAZOLIN, @SUBCONJUNCTIVAL"& _ 
                "_DEXAMETHASONE, @SUBCONJUNCTIVAL_OTHERS, @TOPICAL_MAXITROL, @TOPICAL_TOBRADEX, @"& _ 
                "TOPICAL_OTHER, @EXTRA_NOTES, @SURGEON_SIGNATURE);"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CREATE_DATE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "CREATE_DATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OPERA_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "OPERA_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PATIENT_NO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_NAME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_NAME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_SEX", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_SEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PATIENT_AGE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PATIENT_AGE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_NASAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_NASAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_TEMPORAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_TEMPORAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_SUPERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_70VICRYL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_70VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_80SILK", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_80SILK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_NONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_NONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_SCISSORS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_SCISSORS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_OTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_MILD", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MILD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_69BLADE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_69BLADE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_MODRATE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MODRATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_SUPERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_OTHER_SITE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHER_SITE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE2", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_80VERGIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_80VERGIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_100NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_90NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_90NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_RUNNING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_RUNNING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_INTERRUPTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_COMBINED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_COMBINED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_GENTAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_TOBRADEX", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_TOBRADEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_NOTES", Global.System.Data.SqlDbType.NVarChar, 350, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "UPDATE       S_OPER_PTERYGIUM"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                START_TIME = @START_TIME, SURGE"& _ 
                "ON = @SURGEON, SCRUB = @SCRUB, CIRCULATING = @CIRCULATING, ANESTHESIONLOGIST = @"& _ 
                "ANESTHESIONLOGIST, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DIAGNOSIS = @DIAGNOSIS, RIGHT_EYE "& _ 
                "= @RIGHT_EYE, LEFT_EYE = @LEFT_EYE, S_AN_GA = @S_AN_GA, S_AN_NEURO = @S_AN_NEURO"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         S_AN_STANDBY = @S_AN_STANDBY, S_AN_RETROBULBAR = @S"& _ 
                "_AN_RETROBULBAR, S_AN_PERIBULBAR = @S_AN_PERIBULBAR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "S_AN_TOPICAL = @S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL = @S_AN_SUBCONJUNCTIVAL, PTER"& _ 
                "YGIUM_NASAL = @PTERYGIUM_NASAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PTERYGIUM_TEMPORAL = "& _ 
                "@PTERYGIUM_TEMPORAL, BRIDAL_SUPERIOR = @BRIDAL_SUPERIOR, BRIDAL_70VICRYL = @BRID"& _ 
                "AL_70VICRYL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         BRIDAL_80SILK = @BRIDAL_80SILK, BRIDAL_O"& _ 
                "THERS = @BRIDAL_OTHERS, SUBCONJUNCTIVAL_XYLOCAIN_WITH = @SUBCONJUNCTIVAL_XYLOCAI"& _ 
                "N_WITH, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUBCONJUNCTIVAL_XYLOCAIN = @SUBCONJUNCTIVAL_X"& _ 
                "YLOCAIN, SUBCONJUNCTIVAL_NONE = @SUBCONJUNCTIVAL_NONE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  PTERYGIUM_SCISSORS = @PTERYGIUM_SCISSORS, PTERYGIUM_OTHER = @PTERYGIUM_OTHER, "& _ 
                "CAUTERY_MILD = @CAUTERY_MILD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAUTERY_69BLADE = @CAUT"& _ 
                "ERY_69BLADE, CAUTERY_MODRATE = @CAUTERY_MODRATE, CAUTERY_EXTENSIVE = @CAUTERY_EX"& _ 
                "TENSIVE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CONJUNCTIVAL_SUPERIOR = @CONJUNCTIVAL_SUPERI"& _ 
                "OR, CONJUNCTIVAL_OTHER_SITE = @CONJUNCTIVAL_OTHER_SITE, SIZE1 = @SIZE1, SIZE2 = "& _ 
                "@SIZE2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         GRAFT_80VERGIN = @GRAFT_80VERGIN, GRAFT_100NY"& _ 
                "LON = @GRAFT_100NYLON, GRAFT_OTHER = @GRAFT_OTHER, GRAFT_90NYLON = @GRAFT_90NYLO"& _ 
                "N, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         GRAFT_RUNNING = @GRAFT_RUNNING, GRAFT_INTERRUPTED "& _ 
                "= @GRAFT_INTERRUPTED, GRAFT_COMBINED = @GRAFT_COMBINED, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   SUBCONJUNCTIVAL_GENTAL = @SUBCONJUNCTIVAL_GENTAL, SUBCONJUNCTIVAL_CEFAZOLIN ="& _ 
                " @SUBCONJUNCTIVAL_CEFAZOLIN, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUBCONJUNCTIVAL_DEXAMETH"& _ 
                "ASONE = @SUBCONJUNCTIVAL_DEXAMETHASONE, SUBCONJUNCTIVAL_OTHERS = @SUBCONJUNCTIVA"& _ 
                "L_OTHERS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TOPICAL_MAXITROL = @TOPICAL_MAXITROL, TOPIC"& _ 
                "AL_TOBRADEX = @TOPICAL_TOBRADEX, TOPICAL_OTHER = @TOPICAL_OTHER, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            EXTRA_NOTES = @EXTRA_NOTES, SURGEON_SIGNATURE = @SURGEON_SIGNATURE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "WHERE        (PTERYGIUM_ID = @Original_PTERYGIUM_ID); "
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@START_TIME", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "START_TIME", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SCRUB", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SCRUB", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CIRCULATING", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "CIRCULATING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ANESTHESIONLOGIST", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "ANESTHESIONLOGIST", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIAGNOSIS", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DIAGNOSIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RIGHT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "RIGHT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LEFT_EYE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "LEFT_EYE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_GA", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_GA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_NEURO", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_NEURO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_STANDBY", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_STANDBY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_RETROBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_RETROBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_PERIBULBAR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_PERIBULBAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_TOPICAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_TOPICAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@S_AN_SUBCONJUNCTIVAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "S_AN_SUBCONJUNCTIVAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_NASAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_NASAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_TEMPORAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_TEMPORAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_SUPERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_70VICRYL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_70VICRYL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_80SILK", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_80SILK", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BRIDAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "BRIDAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN_WITH", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_XYLOCAIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_NONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_NONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_SCISSORS", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_SCISSORS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PTERYGIUM_OTHER", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "PTERYGIUM_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_MILD", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MILD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_69BLADE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_69BLADE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_MODRATE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_MODRATE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAUTERY_EXTENSIVE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CAUTERY_EXTENSIVE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_SUPERIOR", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_SUPERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONJUNCTIVAL_OTHER_SITE", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "CONJUNCTIVAL_OTHER_SITE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE1", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIZE2", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SIZE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_80VERGIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_80VERGIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_100NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_100NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_90NYLON", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_90NYLON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_RUNNING", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_RUNNING", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_INTERRUPTED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_INTERRUPTED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GRAFT_COMBINED", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "GRAFT_COMBINED", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_GENTAL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_GENTAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_CEFAZOLIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_DEXAMETHASONE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUBCONJUNCTIVAL_OTHERS", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "SUBCONJUNCTIVAL_OTHERS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_MAXITROL", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_MAXITROL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_TOBRADEX", Global.System.Data.SqlDbType.Bit, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_TOBRADEX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOPICAL_OTHER", Global.System.Data.SqlDbType.NVarChar, 250, Global.System.Data.ParameterDirection.Input, 0, 0, "TOPICAL_OTHER", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EXTRA_NOTES", Global.System.Data.SqlDbType.NVarChar, 350, Global.System.Data.ParameterDirection.Input, 0, 0, "EXTRA_NOTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SURGEON_SIGNATURE", Global.System.Data.SqlDbType.NVarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "SURGEON_SIGNATURE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PTERYGIUM_ID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "PTERYGIUM_ID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable = New DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable, ByVal PTERYGIUM_ID As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PTERYGIUM_ID,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function SelectPterygium(ByVal PTERYGIUM_ID As Decimal) As DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(PTERYGIUM_ID,Decimal)
            Dim dataTable As DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable = New DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSOPERATIONNOTE.S_OPER_PTERYGIUMDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSOPERATIONNOTE) As Integer
            Return Me.Adapter.Update(dataSet, "S_OPER_PTERYGIUM")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PTERYGIUM_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_NASAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_TEMPORAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_70VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_80SILK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_OTHERS As String,  _
                    ByVal Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_XYLOCAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_SCISSORS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_OTHER As String,  _
                    ByVal Original_CAUTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_69BLADE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_MODRATE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal Original_SIZE1 As String,  _
                    ByVal Original_SIZE2 As String,  _
                    ByVal Original_GRAFT_80VERGIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_OTHER As String,  _
                    ByVal Original_GRAFT_90NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_RUNNING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_COMBINED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_TOBRADEX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHER As String,  _
                    ByVal Original_EXTRA_NOTES As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_PTERYGIUM_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_PTERYGIUM_NASAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_PTERYGIUM_NASAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_PTERYGIUM_TEMPORAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_PTERYGIUM_TEMPORAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_BRIDAL_SUPERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_BRIDAL_SUPERIOR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_BRIDAL_70VICRYL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_BRIDAL_70VICRYL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_BRIDAL_80SILK.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_BRIDAL_80SILK.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_BRIDAL_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_BRIDAL_OTHERS,String)
            End If
            If (Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_XYLOCAIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_SUBCONJUNCTIVAL_XYLOCAIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_NONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_SUBCONJUNCTIVAL_NONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_PTERYGIUM_SCISSORS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_PTERYGIUM_SCISSORS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_PTERYGIUM_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_PTERYGIUM_OTHER,String)
            End If
            If (Original_CAUTERY_MILD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_CAUTERY_MILD.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_CAUTERY_69BLADE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_CAUTERY_69BLADE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_CAUTERY_MODRATE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_CAUTERY_MODRATE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_CAUTERY_EXTENSIVE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_SUPERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_CONJUNCTIVAL_SUPERIOR.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_OTHER_SITE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_CONJUNCTIVAL_OTHER_SITE,String)
            End If
            If (Original_SIZE1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_SIZE1,String)
            End If
            If (Original_SIZE2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_SIZE2,String)
            End If
            If (Original_GRAFT_80VERGIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_GRAFT_80VERGIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_100NYLON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_GRAFT_100NYLON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_GRAFT_OTHER,String)
            End If
            If (Original_GRAFT_90NYLON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_GRAFT_90NYLON.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_RUNNING.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_GRAFT_RUNNING.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_INTERRUPTED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = CType(Original_GRAFT_INTERRUPTED.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_COMBINED.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = CType(Original_GRAFT_COMBINED.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_GENTAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = CType(Original_SUBCONJUNCTIVAL_GENTAL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = CType(Original_SUBCONJUNCTIVAL_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = CType(Original_SUBCONJUNCTIVAL_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_OTHERS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(102).Value = CType(Original_SUBCONJUNCTIVAL_OTHERS,String)
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_TOBRADEX.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = CType(Original_TOPICAL_TOBRADEX.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHER Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(108).Value = CType(Original_TOPICAL_OTHER,String)
            End If
            If (Original_EXTRA_NOTES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(110).Value = CType(Original_EXTRA_NOTES,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(112).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_NASAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_TEMPORAL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_70VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_80SILK As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_OTHERS As String,  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_SCISSORS As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_OTHER As String,  _
                    ByVal CAUTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_69BLADE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_MODRATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal GRAFT_80VERGIN As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_OTHER As String,  _
                    ByVal GRAFT_90NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_RUNNING As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_COMBINED As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_TOBRADEX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal EXTRA_NOTES As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (RIGHT_EYE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_NASAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(PTERYGIUM_NASAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_TEMPORAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(PTERYGIUM_TEMPORAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_SUPERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(BRIDAL_SUPERIOR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_70VICRYL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(BRIDAL_70VICRYL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_80SILK.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(BRIDAL_80SILK.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(BRIDAL_OTHERS,String)
            End If
            If (SUBCONJUNCTIVAL_XYLOCAIN_WITH.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(SUBCONJUNCTIVAL_XYLOCAIN_WITH.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_XYLOCAIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(SUBCONJUNCTIVAL_XYLOCAIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_NONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(SUBCONJUNCTIVAL_NONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_SCISSORS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(PTERYGIUM_SCISSORS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(PTERYGIUM_OTHER,String)
            End If
            If (CAUTERY_MILD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CAUTERY_MILD.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_69BLADE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CAUTERY_69BLADE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_MODRATE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(CAUTERY_MODRATE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_EXTENSIVE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_SUPERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(CONJUNCTIVAL_SUPERIOR.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_OTHER_SITE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(CONJUNCTIVAL_OTHER_SITE,String)
            End If
            If (SIZE1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(SIZE1,String)
            End If
            If (SIZE2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SIZE2,String)
            End If
            If (GRAFT_80VERGIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(GRAFT_80VERGIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_100NYLON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(GRAFT_100NYLON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(GRAFT_OTHER,String)
            End If
            If (GRAFT_90NYLON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(GRAFT_90NYLON.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_RUNNING.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(GRAFT_RUNNING.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_INTERRUPTED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(45).Value = CType(GRAFT_INTERRUPTED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_COMBINED.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(46).Value = CType(GRAFT_COMBINED.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_GENTAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(47).Value = CType(SUBCONJUNCTIVAL_GENTAL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(48).Value = CType(SUBCONJUNCTIVAL_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(49).Value = CType(SUBCONJUNCTIVAL_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_OTHERS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(50).Value = CType(SUBCONJUNCTIVAL_OTHERS,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(51).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_TOBRADEX.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(52).Value = CType(TOPICAL_TOBRADEX.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHER Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(53).Value = CType(TOPICAL_OTHER,String)
            End If
            If (EXTRA_NOTES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(54).Value = CType(EXTRA_NOTES,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(55).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_NASAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_TEMPORAL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_70VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_80SILK As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_OTHERS As String,  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_SCISSORS As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_OTHER As String,  _
                    ByVal CAUTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_69BLADE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_MODRATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal GRAFT_80VERGIN As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_OTHER As String,  _
                    ByVal GRAFT_90NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_RUNNING As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_COMBINED As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_TOBRADEX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal EXTRA_NOTES As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PTERYGIUM_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_NASAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_TEMPORAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_70VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_80SILK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_OTHERS As String,  _
                    ByVal Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_XYLOCAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_SCISSORS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_OTHER As String,  _
                    ByVal Original_CAUTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_69BLADE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_MODRATE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal Original_SIZE1 As String,  _
                    ByVal Original_SIZE2 As String,  _
                    ByVal Original_GRAFT_80VERGIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_OTHER As String,  _
                    ByVal Original_GRAFT_90NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_RUNNING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_COMBINED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_TOBRADEX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHER As String,  _
                    ByVal Original_EXTRA_NOTES As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String,  _
                    ByVal PTERYGIUM_ID As Decimal) As Integer
            If (CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (RIGHT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_NASAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(PTERYGIUM_NASAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_TEMPORAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(PTERYGIUM_TEMPORAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_SUPERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(BRIDAL_SUPERIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_70VICRYL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(BRIDAL_70VICRYL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_80SILK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(BRIDAL_80SILK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(BRIDAL_OTHERS,String)
            End If
            If (SUBCONJUNCTIVAL_XYLOCAIN_WITH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(SUBCONJUNCTIVAL_XYLOCAIN_WITH.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_XYLOCAIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(SUBCONJUNCTIVAL_XYLOCAIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_NONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(SUBCONJUNCTIVAL_NONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_SCISSORS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(PTERYGIUM_SCISSORS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(PTERYGIUM_OTHER,String)
            End If
            If (CAUTERY_MILD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CAUTERY_MILD.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_69BLADE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CAUTERY_69BLADE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_MODRATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(CAUTERY_MODRATE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_EXTENSIVE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_SUPERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(CONJUNCTIVAL_SUPERIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_OTHER_SITE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(CONJUNCTIVAL_OTHER_SITE,String)
            End If
            If (SIZE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(SIZE1,String)
            End If
            If (SIZE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(SIZE2,String)
            End If
            If (GRAFT_80VERGIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(GRAFT_80VERGIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_100NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(GRAFT_100NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(GRAFT_OTHER,String)
            End If
            If (GRAFT_90NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(GRAFT_90NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_RUNNING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(GRAFT_RUNNING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_INTERRUPTED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(GRAFT_INTERRUPTED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_COMBINED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(GRAFT_COMBINED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_GENTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(SUBCONJUNCTIVAL_GENTAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(SUBCONJUNCTIVAL_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(SUBCONJUNCTIVAL_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(SUBCONJUNCTIVAL_OTHERS,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_TOBRADEX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(TOPICAL_TOBRADEX.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(TOPICAL_OTHER,String)
            End If
            If (EXTRA_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(EXTRA_NOTES,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_PTERYGIUM_ID,Decimal)
            If (Original_CREATE_DATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_CREATE_DATE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_OPERA_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_OPERA_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_PATIENT_NO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_PATIENT_NAME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_PATIENT_NAME,String)
            End If
            If (Original_PATIENT_SEX Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_PATIENT_SEX,String)
            End If
            If (Original_PATIENT_AGE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_PATIENT_AGE,String)
            End If
            If (Original_START_TIME Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_START_TIME,String)
            End If
            If (Original_SURGEON Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_SURGEON,String)
            End If
            If (Original_SCRUB Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_SCRUB,String)
            End If
            If (Original_CIRCULATING Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_CIRCULATING,String)
            End If
            If (Original_ANESTHESIONLOGIST Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_ANESTHESIONLOGIST,String)
            End If
            If (Original_DIAGNOSIS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_DIAGNOSIS,String)
            End If
            If (Original_RIGHT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(Original_RIGHT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_LEFT_EYE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(Original_LEFT_EYE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_GA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(Original_S_AN_GA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_NEURO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(Original_S_AN_NEURO.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_STANDBY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(Original_S_AN_STANDBY.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_RETROBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(Original_S_AN_RETROBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(92).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_PERIBULBAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(Original_S_AN_PERIBULBAR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(94).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_TOPICAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(Original_S_AN_TOPICAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(96).Value = Global.System.DBNull.Value
            End If
            If (Original_S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(Original_S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(98).Value = Global.System.DBNull.Value
            End If
            If (Original_PTERYGIUM_NASAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(Original_PTERYGIUM_NASAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(100).Value = Global.System.DBNull.Value
            End If
            If (Original_PTERYGIUM_TEMPORAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(Original_PTERYGIUM_TEMPORAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(102).Value = Global.System.DBNull.Value
            End If
            If (Original_BRIDAL_SUPERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(Original_BRIDAL_SUPERIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(104).Value = Global.System.DBNull.Value
            End If
            If (Original_BRIDAL_70VICRYL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(Original_BRIDAL_70VICRYL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(106).Value = Global.System.DBNull.Value
            End If
            If (Original_BRIDAL_80SILK.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(Original_BRIDAL_80SILK.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(108).Value = Global.System.DBNull.Value
            End If
            If (Original_BRIDAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(Original_BRIDAL_OTHERS,String)
            End If
            If (Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(112).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_XYLOCAIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(Original_SUBCONJUNCTIVAL_XYLOCAIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(114).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_NONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(Original_SUBCONJUNCTIVAL_NONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(116).Value = Global.System.DBNull.Value
            End If
            If (Original_PTERYGIUM_SCISSORS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(Original_PTERYGIUM_SCISSORS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(118).Value = Global.System.DBNull.Value
            End If
            If (Original_PTERYGIUM_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(Original_PTERYGIUM_OTHER,String)
            End If
            If (Original_CAUTERY_MILD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(Original_CAUTERY_MILD.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(122).Value = Global.System.DBNull.Value
            End If
            If (Original_CAUTERY_69BLADE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(Original_CAUTERY_69BLADE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(124).Value = Global.System.DBNull.Value
            End If
            If (Original_CAUTERY_MODRATE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(Original_CAUTERY_MODRATE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(126).Value = Global.System.DBNull.Value
            End If
            If (Original_CAUTERY_EXTENSIVE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(Original_CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(128).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_SUPERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(Original_CONJUNCTIVAL_SUPERIOR.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(130).Value = Global.System.DBNull.Value
            End If
            If (Original_CONJUNCTIVAL_OTHER_SITE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(Original_CONJUNCTIVAL_OTHER_SITE,String)
            End If
            If (Original_SIZE1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(Original_SIZE1,String)
            End If
            If (Original_SIZE2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(136).Value = CType(Original_SIZE2,String)
            End If
            If (Original_GRAFT_80VERGIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = CType(Original_GRAFT_80VERGIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(137).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(138).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_100NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = CType(Original_GRAFT_100NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(139).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(140).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(141).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(142).Value = CType(Original_GRAFT_OTHER,String)
            End If
            If (Original_GRAFT_90NYLON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = CType(Original_GRAFT_90NYLON.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(143).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(144).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_RUNNING.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = CType(Original_GRAFT_RUNNING.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(145).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(146).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_INTERRUPTED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = CType(Original_GRAFT_INTERRUPTED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(147).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(148).Value = Global.System.DBNull.Value
            End If
            If (Original_GRAFT_COMBINED.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = CType(Original_GRAFT_COMBINED.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(149).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(150).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_GENTAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = CType(Original_SUBCONJUNCTIVAL_GENTAL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(151).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(152).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_CEFAZOLIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = CType(Original_SUBCONJUNCTIVAL_CEFAZOLIN.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(153).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(154).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_DEXAMETHASONE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = CType(Original_SUBCONJUNCTIVAL_DEXAMETHASONE.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(155).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(156).Value = Global.System.DBNull.Value
            End If
            If (Original_SUBCONJUNCTIVAL_OTHERS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(157).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(158).Value = CType(Original_SUBCONJUNCTIVAL_OTHERS,String)
            End If
            If (Original_TOPICAL_MAXITROL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = CType(Original_TOPICAL_MAXITROL.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(159).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(160).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_TOBRADEX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = CType(Original_TOPICAL_TOBRADEX.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(161).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(162).Value = Global.System.DBNull.Value
            End If
            If (Original_TOPICAL_OTHER Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(163).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(164).Value = CType(Original_TOPICAL_OTHER,String)
            End If
            If (Original_EXTRA_NOTES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(165).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(166).Value = CType(Original_EXTRA_NOTES,String)
            End If
            If (Original_SURGEON_SIGNATURE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(167).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(168).Value = CType(Original_SURGEON_SIGNATURE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(169).Value = CType(PTERYGIUM_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_NASAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_TEMPORAL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_70VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_80SILK As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_OTHERS As String,  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_SCISSORS As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_OTHER As String,  _
                    ByVal CAUTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_69BLADE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_MODRATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal GRAFT_80VERGIN As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_OTHER As String,  _
                    ByVal GRAFT_90NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_RUNNING As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_COMBINED As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_TOBRADEX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal EXTRA_NOTES As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PTERYGIUM_ID As Decimal,  _
                    ByVal Original_CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal Original_OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PATIENT_NAME As String,  _
                    ByVal Original_PATIENT_SEX As String,  _
                    ByVal Original_PATIENT_AGE As String,  _
                    ByVal Original_START_TIME As String,  _
                    ByVal Original_SURGEON As String,  _
                    ByVal Original_SCRUB As String,  _
                    ByVal Original_CIRCULATING As String,  _
                    ByVal Original_ANESTHESIONLOGIST As String,  _
                    ByVal Original_DIAGNOSIS As String,  _
                    ByVal Original_RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_NASAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_TEMPORAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_70VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_80SILK As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_BRIDAL_OTHERS As String,  _
                    ByVal Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_XYLOCAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_SCISSORS As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PTERYGIUM_OTHER As String,  _
                    ByVal Original_CAUTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_69BLADE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_MODRATE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal Original_SIZE1 As String,  _
                    ByVal Original_SIZE2 As String,  _
                    ByVal Original_GRAFT_80VERGIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_OTHER As String,  _
                    ByVal Original_GRAFT_90NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_RUNNING As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_GRAFT_COMBINED As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal Original_TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_TOBRADEX As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_TOPICAL_OTHER As String,  _
                    ByVal Original_EXTRA_NOTES As String,  _
                    ByVal Original_SURGEON_SIGNATURE As String) As Integer
            Return Me.Update(CREATE_DATE, OPERA_NO, PATIENT_NO, PATIENT_NAME, PATIENT_SEX, PATIENT_AGE, START_TIME, SURGEON, SCRUB, CIRCULATING, ANESTHESIONLOGIST, DIAGNOSIS, RIGHT_EYE, LEFT_EYE, S_AN_GA, S_AN_NEURO, S_AN_STANDBY, S_AN_RETROBULBAR, S_AN_PERIBULBAR, S_AN_TOPICAL, S_AN_SUBCONJUNCTIVAL, PTERYGIUM_NASAL, PTERYGIUM_TEMPORAL, BRIDAL_SUPERIOR, BRIDAL_70VICRYL, BRIDAL_80SILK, BRIDAL_OTHERS, SUBCONJUNCTIVAL_XYLOCAIN_WITH, SUBCONJUNCTIVAL_XYLOCAIN, SUBCONJUNCTIVAL_NONE, PTERYGIUM_SCISSORS, PTERYGIUM_OTHER, CAUTERY_MILD, CAUTERY_69BLADE, CAUTERY_MODRATE, CAUTERY_EXTENSIVE, CONJUNCTIVAL_SUPERIOR, CONJUNCTIVAL_OTHER_SITE, SIZE1, SIZE2, GRAFT_80VERGIN, GRAFT_100NYLON, GRAFT_OTHER, GRAFT_90NYLON, GRAFT_RUNNING, GRAFT_INTERRUPTED, GRAFT_COMBINED, SUBCONJUNCTIVAL_GENTAL, SUBCONJUNCTIVAL_CEFAZOLIN, SUBCONJUNCTIVAL_DEXAMETHASONE, SUBCONJUNCTIVAL_OTHERS, TOPICAL_MAXITROL, TOPICAL_TOBRADEX, TOPICAL_OTHER, EXTRA_NOTES, SURGEON_SIGNATURE, Original_PTERYGIUM_ID, Original_CREATE_DATE, Original_OPERA_NO, Original_PATIENT_NO, Original_PATIENT_NAME, Original_PATIENT_SEX, Original_PATIENT_AGE, Original_START_TIME, Original_SURGEON, Original_SCRUB, Original_CIRCULATING, Original_ANESTHESIONLOGIST, Original_DIAGNOSIS, Original_RIGHT_EYE, Original_LEFT_EYE, Original_S_AN_GA, Original_S_AN_NEURO, Original_S_AN_STANDBY, Original_S_AN_RETROBULBAR, Original_S_AN_PERIBULBAR, Original_S_AN_TOPICAL, Original_S_AN_SUBCONJUNCTIVAL, Original_PTERYGIUM_NASAL, Original_PTERYGIUM_TEMPORAL, Original_BRIDAL_SUPERIOR, Original_BRIDAL_70VICRYL, Original_BRIDAL_80SILK, Original_BRIDAL_OTHERS, Original_SUBCONJUNCTIVAL_XYLOCAIN_WITH, Original_SUBCONJUNCTIVAL_XYLOCAIN, Original_SUBCONJUNCTIVAL_NONE, Original_PTERYGIUM_SCISSORS, Original_PTERYGIUM_OTHER, Original_CAUTERY_MILD, Original_CAUTERY_69BLADE, Original_CAUTERY_MODRATE, Original_CAUTERY_EXTENSIVE, Original_CONJUNCTIVAL_SUPERIOR, Original_CONJUNCTIVAL_OTHER_SITE, Original_SIZE1, Original_SIZE2, Original_GRAFT_80VERGIN, Original_GRAFT_100NYLON, Original_GRAFT_OTHER, Original_GRAFT_90NYLON, Original_GRAFT_RUNNING, Original_GRAFT_INTERRUPTED, Original_GRAFT_COMBINED, Original_SUBCONJUNCTIVAL_GENTAL, Original_SUBCONJUNCTIVAL_CEFAZOLIN, Original_SUBCONJUNCTIVAL_DEXAMETHASONE, Original_SUBCONJUNCTIVAL_OTHERS, Original_TOPICAL_MAXITROL, Original_TOPICAL_TOBRADEX, Original_TOPICAL_OTHER, Original_EXTRA_NOTES, Original_SURGEON_SIGNATURE, Original_PTERYGIUM_ID)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertPTERYGIUM( _
                    ByVal CREATE_DATE As Global.System.Nullable(Of Date),  _
                    ByVal OPERA_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NO As Global.System.Nullable(Of Decimal),  _
                    ByVal PATIENT_NAME As String,  _
                    ByVal PATIENT_SEX As String,  _
                    ByVal PATIENT_AGE As String,  _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_NASAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_TEMPORAL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_70VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_80SILK As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_OTHERS As String,  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_SCISSORS As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_OTHER As String,  _
                    ByVal CAUTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_69BLADE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_MODRATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal GRAFT_80VERGIN As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_OTHER As String,  _
                    ByVal GRAFT_90NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_RUNNING As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_COMBINED As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_TOBRADEX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal EXTRA_NOTES As String,  _
                    ByVal SURGEON_SIGNATURE As String) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(2)
            If (CREATE_DATE.HasValue = true) Then
                command.Parameters(0).Value = CType(CREATE_DATE.Value,Date)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (OPERA_NO.HasValue = true) Then
                command.Parameters(1).Value = CType(OPERA_NO.Value,Decimal)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NO.HasValue = true) Then
                command.Parameters(2).Value = CType(PATIENT_NO.Value,Decimal)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PATIENT_NAME Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(PATIENT_NAME,String)
            End If
            If (PATIENT_SEX Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(PATIENT_SEX,String)
            End If
            If (PATIENT_AGE Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(PATIENT_AGE,String)
            End If
            If (START_TIME Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(10).Value = Global.System.DBNull.Value
            Else
                command.Parameters(10).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(DIAGNOSIS,String)
            End If
            If (RIGHT_EYE.HasValue = true) Then
                command.Parameters(12).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                command.Parameters(13).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(15).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(16).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(17).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(18).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(19).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                command.Parameters(20).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                command.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_NASAL.HasValue = true) Then
                command.Parameters(21).Value = CType(PTERYGIUM_NASAL.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_TEMPORAL.HasValue = true) Then
                command.Parameters(22).Value = CType(PTERYGIUM_TEMPORAL.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_SUPERIOR.HasValue = true) Then
                command.Parameters(23).Value = CType(BRIDAL_SUPERIOR.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_70VICRYL.HasValue = true) Then
                command.Parameters(24).Value = CType(BRIDAL_70VICRYL.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_80SILK.HasValue = true) Then
                command.Parameters(25).Value = CType(BRIDAL_80SILK.Value,Boolean)
            Else
                command.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_OTHERS Is Nothing) Then
                command.Parameters(26).Value = Global.System.DBNull.Value
            Else
                command.Parameters(26).Value = CType(BRIDAL_OTHERS,String)
            End If
            If (SUBCONJUNCTIVAL_XYLOCAIN_WITH.HasValue = true) Then
                command.Parameters(27).Value = CType(SUBCONJUNCTIVAL_XYLOCAIN_WITH.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_XYLOCAIN.HasValue = true) Then
                command.Parameters(28).Value = CType(SUBCONJUNCTIVAL_XYLOCAIN.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_NONE.HasValue = true) Then
                command.Parameters(29).Value = CType(SUBCONJUNCTIVAL_NONE.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_SCISSORS.HasValue = true) Then
                command.Parameters(30).Value = CType(PTERYGIUM_SCISSORS.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_OTHER Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(PTERYGIUM_OTHER,String)
            End If
            If (CAUTERY_MILD.HasValue = true) Then
                command.Parameters(32).Value = CType(CAUTERY_MILD.Value,Boolean)
            Else
                command.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_69BLADE.HasValue = true) Then
                command.Parameters(33).Value = CType(CAUTERY_69BLADE.Value,Boolean)
            Else
                command.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_MODRATE.HasValue = true) Then
                command.Parameters(34).Value = CType(CAUTERY_MODRATE.Value,Boolean)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_EXTENSIVE.HasValue = true) Then
                command.Parameters(35).Value = CType(CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_SUPERIOR.HasValue = true) Then
                command.Parameters(36).Value = CType(CONJUNCTIVAL_SUPERIOR.Value,Boolean)
            Else
                command.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_OTHER_SITE Is Nothing) Then
                command.Parameters(37).Value = Global.System.DBNull.Value
            Else
                command.Parameters(37).Value = CType(CONJUNCTIVAL_OTHER_SITE,String)
            End If
            If (SIZE1 Is Nothing) Then
                command.Parameters(38).Value = Global.System.DBNull.Value
            Else
                command.Parameters(38).Value = CType(SIZE1,String)
            End If
            If (SIZE2 Is Nothing) Then
                command.Parameters(39).Value = Global.System.DBNull.Value
            Else
                command.Parameters(39).Value = CType(SIZE2,String)
            End If
            If (GRAFT_80VERGIN.HasValue = true) Then
                command.Parameters(40).Value = CType(GRAFT_80VERGIN.Value,Boolean)
            Else
                command.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_100NYLON.HasValue = true) Then
                command.Parameters(41).Value = CType(GRAFT_100NYLON.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_OTHER Is Nothing) Then
                command.Parameters(42).Value = Global.System.DBNull.Value
            Else
                command.Parameters(42).Value = CType(GRAFT_OTHER,String)
            End If
            If (GRAFT_90NYLON.HasValue = true) Then
                command.Parameters(43).Value = CType(GRAFT_90NYLON.Value,Boolean)
            Else
                command.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_RUNNING.HasValue = true) Then
                command.Parameters(44).Value = CType(GRAFT_RUNNING.Value,Boolean)
            Else
                command.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_INTERRUPTED.HasValue = true) Then
                command.Parameters(45).Value = CType(GRAFT_INTERRUPTED.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_COMBINED.HasValue = true) Then
                command.Parameters(46).Value = CType(GRAFT_COMBINED.Value,Boolean)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_GENTAL.HasValue = true) Then
                command.Parameters(47).Value = CType(SUBCONJUNCTIVAL_GENTAL.Value,Boolean)
            Else
                command.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_CEFAZOLIN.HasValue = true) Then
                command.Parameters(48).Value = CType(SUBCONJUNCTIVAL_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(49).Value = CType(SUBCONJUNCTIVAL_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_OTHERS Is Nothing) Then
                command.Parameters(50).Value = Global.System.DBNull.Value
            Else
                command.Parameters(50).Value = CType(SUBCONJUNCTIVAL_OTHERS,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(51).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_TOBRADEX.HasValue = true) Then
                command.Parameters(52).Value = CType(TOPICAL_TOBRADEX.Value,Boolean)
            Else
                command.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHER Is Nothing) Then
                command.Parameters(53).Value = Global.System.DBNull.Value
            Else
                command.Parameters(53).Value = CType(TOPICAL_OTHER,String)
            End If
            If (EXTRA_NOTES Is Nothing) Then
                command.Parameters(54).Value = Global.System.DBNull.Value
            Else
                command.Parameters(54).Value = CType(EXTRA_NOTES,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(55).Value = Global.System.DBNull.Value
            Else
                command.Parameters(55).Value = CType(SURGEON_SIGNATURE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdatePTERYGIUM( _
                    ByVal START_TIME As String,  _
                    ByVal SURGEON As String,  _
                    ByVal SCRUB As String,  _
                    ByVal CIRCULATING As String,  _
                    ByVal ANESTHESIONLOGIST As String,  _
                    ByVal DIAGNOSIS As String,  _
                    ByVal RIGHT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal LEFT_EYE As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_GA As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_NEURO As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_STANDBY As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_RETROBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_PERIBULBAR As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_TOPICAL As Global.System.Nullable(Of Boolean),  _
                    ByVal S_AN_SUBCONJUNCTIVAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_NASAL As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_TEMPORAL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_70VICRYL As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_80SILK As Global.System.Nullable(Of Boolean),  _
                    ByVal BRIDAL_OTHERS As String,  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN_WITH As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_XYLOCAIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_NONE As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_SCISSORS As Global.System.Nullable(Of Boolean),  _
                    ByVal PTERYGIUM_OTHER As String,  _
                    ByVal CAUTERY_MILD As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_69BLADE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_MODRATE As Global.System.Nullable(Of Boolean),  _
                    ByVal CAUTERY_EXTENSIVE As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_SUPERIOR As Global.System.Nullable(Of Boolean),  _
                    ByVal CONJUNCTIVAL_OTHER_SITE As String,  _
                    ByVal SIZE1 As String,  _
                    ByVal SIZE2 As String,  _
                    ByVal GRAFT_80VERGIN As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_100NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_OTHER As String,  _
                    ByVal GRAFT_90NYLON As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_RUNNING As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_INTERRUPTED As Global.System.Nullable(Of Boolean),  _
                    ByVal GRAFT_COMBINED As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_GENTAL As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_CEFAZOLIN As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_DEXAMETHASONE As Global.System.Nullable(Of Boolean),  _
                    ByVal SUBCONJUNCTIVAL_OTHERS As String,  _
                    ByVal TOPICAL_MAXITROL As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_TOBRADEX As Global.System.Nullable(Of Boolean),  _
                    ByVal TOPICAL_OTHER As String,  _
                    ByVal EXTRA_NOTES As String,  _
                    ByVal SURGEON_SIGNATURE As String,  _
                    ByVal Original_PTERYGIUM_ID As Decimal) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = Me.CommandCollection(3)
            If (START_TIME Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(START_TIME,String)
            End If
            If (SURGEON Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(SURGEON,String)
            End If
            If (SCRUB Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(SCRUB,String)
            End If
            If (CIRCULATING Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(CIRCULATING,String)
            End If
            If (ANESTHESIONLOGIST Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(ANESTHESIONLOGIST,String)
            End If
            If (DIAGNOSIS Is Nothing) Then
                command.Parameters(5).Value = Global.System.DBNull.Value
            Else
                command.Parameters(5).Value = CType(DIAGNOSIS,String)
            End If
            If (RIGHT_EYE.HasValue = true) Then
                command.Parameters(6).Value = CType(RIGHT_EYE.Value,Boolean)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (LEFT_EYE.HasValue = true) Then
                command.Parameters(7).Value = CType(LEFT_EYE.Value,Boolean)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (S_AN_GA.HasValue = true) Then
                command.Parameters(8).Value = CType(S_AN_GA.Value,Boolean)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (S_AN_NEURO.HasValue = true) Then
                command.Parameters(9).Value = CType(S_AN_NEURO.Value,Boolean)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (S_AN_STANDBY.HasValue = true) Then
                command.Parameters(10).Value = CType(S_AN_STANDBY.Value,Boolean)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (S_AN_RETROBULBAR.HasValue = true) Then
                command.Parameters(11).Value = CType(S_AN_RETROBULBAR.Value,Boolean)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (S_AN_PERIBULBAR.HasValue = true) Then
                command.Parameters(12).Value = CType(S_AN_PERIBULBAR.Value,Boolean)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (S_AN_TOPICAL.HasValue = true) Then
                command.Parameters(13).Value = CType(S_AN_TOPICAL.Value,Boolean)
            Else
                command.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (S_AN_SUBCONJUNCTIVAL.HasValue = true) Then
                command.Parameters(14).Value = CType(S_AN_SUBCONJUNCTIVAL.Value,Boolean)
            Else
                command.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_NASAL.HasValue = true) Then
                command.Parameters(15).Value = CType(PTERYGIUM_NASAL.Value,Boolean)
            Else
                command.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_TEMPORAL.HasValue = true) Then
                command.Parameters(16).Value = CType(PTERYGIUM_TEMPORAL.Value,Boolean)
            Else
                command.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_SUPERIOR.HasValue = true) Then
                command.Parameters(17).Value = CType(BRIDAL_SUPERIOR.Value,Boolean)
            Else
                command.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_70VICRYL.HasValue = true) Then
                command.Parameters(18).Value = CType(BRIDAL_70VICRYL.Value,Boolean)
            Else
                command.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_80SILK.HasValue = true) Then
                command.Parameters(19).Value = CType(BRIDAL_80SILK.Value,Boolean)
            Else
                command.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (BRIDAL_OTHERS Is Nothing) Then
                command.Parameters(20).Value = Global.System.DBNull.Value
            Else
                command.Parameters(20).Value = CType(BRIDAL_OTHERS,String)
            End If
            If (SUBCONJUNCTIVAL_XYLOCAIN_WITH.HasValue = true) Then
                command.Parameters(21).Value = CType(SUBCONJUNCTIVAL_XYLOCAIN_WITH.Value,Boolean)
            Else
                command.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_XYLOCAIN.HasValue = true) Then
                command.Parameters(22).Value = CType(SUBCONJUNCTIVAL_XYLOCAIN.Value,Boolean)
            Else
                command.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_NONE.HasValue = true) Then
                command.Parameters(23).Value = CType(SUBCONJUNCTIVAL_NONE.Value,Boolean)
            Else
                command.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_SCISSORS.HasValue = true) Then
                command.Parameters(24).Value = CType(PTERYGIUM_SCISSORS.Value,Boolean)
            Else
                command.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (PTERYGIUM_OTHER Is Nothing) Then
                command.Parameters(25).Value = Global.System.DBNull.Value
            Else
                command.Parameters(25).Value = CType(PTERYGIUM_OTHER,String)
            End If
            If (CAUTERY_MILD.HasValue = true) Then
                command.Parameters(26).Value = CType(CAUTERY_MILD.Value,Boolean)
            Else
                command.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_69BLADE.HasValue = true) Then
                command.Parameters(27).Value = CType(CAUTERY_69BLADE.Value,Boolean)
            Else
                command.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_MODRATE.HasValue = true) Then
                command.Parameters(28).Value = CType(CAUTERY_MODRATE.Value,Boolean)
            Else
                command.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CAUTERY_EXTENSIVE.HasValue = true) Then
                command.Parameters(29).Value = CType(CAUTERY_EXTENSIVE.Value,Boolean)
            Else
                command.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_SUPERIOR.HasValue = true) Then
                command.Parameters(30).Value = CType(CONJUNCTIVAL_SUPERIOR.Value,Boolean)
            Else
                command.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (CONJUNCTIVAL_OTHER_SITE Is Nothing) Then
                command.Parameters(31).Value = Global.System.DBNull.Value
            Else
                command.Parameters(31).Value = CType(CONJUNCTIVAL_OTHER_SITE,String)
            End If
            If (SIZE1 Is Nothing) Then
                command.Parameters(32).Value = Global.System.DBNull.Value
            Else
                command.Parameters(32).Value = CType(SIZE1,String)
            End If
            If (SIZE2 Is Nothing) Then
                command.Parameters(33).Value = Global.System.DBNull.Value
            Else
                command.Parameters(33).Value = CType(SIZE2,String)
            End If
            If (GRAFT_80VERGIN.HasValue = true) Then
                command.Parameters(34).Value = CType(GRAFT_80VERGIN.Value,Boolean)
            Else
                command.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_100NYLON.HasValue = true) Then
                command.Parameters(35).Value = CType(GRAFT_100NYLON.Value,Boolean)
            Else
                command.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_OTHER Is Nothing) Then
                command.Parameters(36).Value = Global.System.DBNull.Value
            Else
                command.Parameters(36).Value = CType(GRAFT_OTHER,String)
            End If
            If (GRAFT_90NYLON.HasValue = true) Then
                command.Parameters(37).Value = CType(GRAFT_90NYLON.Value,Boolean)
            Else
                command.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_RUNNING.HasValue = true) Then
                command.Parameters(38).Value = CType(GRAFT_RUNNING.Value,Boolean)
            Else
                command.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_INTERRUPTED.HasValue = true) Then
                command.Parameters(39).Value = CType(GRAFT_INTERRUPTED.Value,Boolean)
            Else
                command.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (GRAFT_COMBINED.HasValue = true) Then
                command.Parameters(40).Value = CType(GRAFT_COMBINED.Value,Boolean)
            Else
                command.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_GENTAL.HasValue = true) Then
                command.Parameters(41).Value = CType(SUBCONJUNCTIVAL_GENTAL.Value,Boolean)
            Else
                command.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_CEFAZOLIN.HasValue = true) Then
                command.Parameters(42).Value = CType(SUBCONJUNCTIVAL_CEFAZOLIN.Value,Boolean)
            Else
                command.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_DEXAMETHASONE.HasValue = true) Then
                command.Parameters(43).Value = CType(SUBCONJUNCTIVAL_DEXAMETHASONE.Value,Boolean)
            Else
                command.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (SUBCONJUNCTIVAL_OTHERS Is Nothing) Then
                command.Parameters(44).Value = Global.System.DBNull.Value
            Else
                command.Parameters(44).Value = CType(SUBCONJUNCTIVAL_OTHERS,String)
            End If
            If (TOPICAL_MAXITROL.HasValue = true) Then
                command.Parameters(45).Value = CType(TOPICAL_MAXITROL.Value,Boolean)
            Else
                command.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_TOBRADEX.HasValue = true) Then
                command.Parameters(46).Value = CType(TOPICAL_TOBRADEX.Value,Boolean)
            Else
                command.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (TOPICAL_OTHER Is Nothing) Then
                command.Parameters(47).Value = Global.System.DBNull.Value
            Else
                command.Parameters(47).Value = CType(TOPICAL_OTHER,String)
            End If
            If (EXTRA_NOTES Is Nothing) Then
                command.Parameters(48).Value = Global.System.DBNull.Value
            Else
                command.Parameters(48).Value = CType(EXTRA_NOTES,String)
            End If
            If (SURGEON_SIGNATURE Is Nothing) Then
                command.Parameters(49).Value = Global.System.DBNull.Value
            Else
                command.Parameters(49).Value = CType(SURGEON_SIGNATURE,String)
            End If
            command.Parameters(50).Value = CType(Original_PTERYGIUM_ID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _s_OPER_SCLERAL_BUCKLINGTableAdapter As S_OPER_SCLERAL_BUCKLINGTableAdapter
        
        Private _tblDoctorTableAdapter As TblDoctorTableAdapter
        
        Private _tblSurgeryTableAdapter As TblSurgeryTableAdapter
        
        Private _s_OPER_INJECTIONTableAdapter As S_OPER_INJECTIONTableAdapter
        
        Private _s_OPER_GENERAL_OPERATIVETableAdapter As S_OPER_GENERAL_OPERATIVETableAdapter
        
        Private _s_OPER_PHACOEMULSIFICATIONTableAdapter As S_OPER_PHACOEMULSIFICATIONTableAdapter
        
        Private _s_OPERA_ECCETableAdapter As S_OPERA_ECCETableAdapter
        
        Private _s_OPER_PAR_PLANA_VITRECTOMYTableAdapter As S_OPER_PAR_PLANA_VITRECTOMYTableAdapter
        
        Private _s_OPER_TRABECULECTOMYTableAdapter As S_OPER_TRABECULECTOMYTableAdapter
        
        Private _s_OPER_PTERYGIUMTableAdapter As S_OPER_PTERYGIUMTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property S_OPER_SCLERAL_BUCKLINGTableAdapter() As S_OPER_SCLERAL_BUCKLINGTableAdapter
            Get
                Return Me._s_OPER_SCLERAL_BUCKLINGTableAdapter
            End Get
            Set
                Me._s_OPER_SCLERAL_BUCKLINGTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TblDoctorTableAdapter() As TblDoctorTableAdapter
            Get
                Return Me._tblDoctorTableAdapter
            End Get
            Set
                Me._tblDoctorTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TblSurgeryTableAdapter() As TblSurgeryTableAdapter
            Get
                Return Me._tblSurgeryTableAdapter
            End Get
            Set
                Me._tblSurgeryTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property S_OPER_INJECTIONTableAdapter() As S_OPER_INJECTIONTableAdapter
            Get
                Return Me._s_OPER_INJECTIONTableAdapter
            End Get
            Set
                Me._s_OPER_INJECTIONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property S_OPER_GENERAL_OPERATIVETableAdapter() As S_OPER_GENERAL_OPERATIVETableAdapter
            Get
                Return Me._s_OPER_GENERAL_OPERATIVETableAdapter
            End Get
            Set
                Me._s_OPER_GENERAL_OPERATIVETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property S_OPER_PHACOEMULSIFICATIONTableAdapter() As S_OPER_PHACOEMULSIFICATIONTableAdapter
            Get
                Return Me._s_OPER_PHACOEMULSIFICATIONTableAdapter
            End Get
            Set
                Me._s_OPER_PHACOEMULSIFICATIONTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property S_OPERA_ECCETableAdapter() As S_OPERA_ECCETableAdapter
            Get
                Return Me._s_OPERA_ECCETableAdapter
            End Get
            Set
                Me._s_OPERA_ECCETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property S_OPER_PAR_PLANA_VITRECTOMYTableAdapter() As S_OPER_PAR_PLANA_VITRECTOMYTableAdapter
            Get
                Return Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter
            End Get
            Set
                Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property S_OPER_TRABECULECTOMYTableAdapter() As S_OPER_TRABECULECTOMYTableAdapter
            Get
                Return Me._s_OPER_TRABECULECTOMYTableAdapter
            End Get
            Set
                Me._s_OPER_TRABECULECTOMYTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property S_OPER_PTERYGIUMTableAdapter() As S_OPER_PTERYGIUMTableAdapter
            Get
                Return Me._s_OPER_PTERYGIUMTableAdapter
            End Get
            Set
                Me._s_OPER_PTERYGIUMTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Connection) Is Nothing)) Then
                    Return Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Connection
                End If
                If ((Not (Me._tblDoctorTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblDoctorTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblDoctorTableAdapter.Connection
                End If
                If ((Not (Me._tblSurgeryTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tblSurgeryTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tblSurgeryTableAdapter.Connection
                End If
                If ((Not (Me._s_OPER_INJECTIONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._s_OPER_INJECTIONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._s_OPER_INJECTIONTableAdapter.Connection
                End If
                If ((Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter.Connection) Is Nothing)) Then
                    Return Me._s_OPER_GENERAL_OPERATIVETableAdapter.Connection
                End If
                If ((Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Connection) Is Nothing)) Then
                    Return Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Connection
                End If
                If ((Not (Me._s_OPERA_ECCETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._s_OPERA_ECCETableAdapter.Connection) Is Nothing)) Then
                    Return Me._s_OPERA_ECCETableAdapter.Connection
                End If
                If ((Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Connection) Is Nothing)) Then
                    Return Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Connection
                End If
                If ((Not (Me._s_OPER_TRABECULECTOMYTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._s_OPER_TRABECULECTOMYTableAdapter.Connection) Is Nothing)) Then
                    Return Me._s_OPER_TRABECULECTOMYTableAdapter.Connection
                End If
                If ((Not (Me._s_OPER_PTERYGIUMTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._s_OPER_PTERYGIUMTableAdapter.Connection) Is Nothing)) Then
                    Return Me._s_OPER_PTERYGIUMTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblDoctorTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tblSurgeryTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._s_OPER_INJECTIONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._s_OPERA_ECCETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._s_OPER_TRABECULECTOMYTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._s_OPER_PTERYGIUMTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSOPERATIONNOTE, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PHACOEMULSIFICATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._s_OPERA_ECCETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.S_OPERA_ECCE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._s_OPERA_ECCETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._s_OPER_PTERYGIUMTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PTERYGIUM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._s_OPER_PTERYGIUMTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._s_OPER_TRABECULECTOMYTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.S_OPER_TRABECULECTOMY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._s_OPER_TRABECULECTOMYTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PAR_PLANA_VITRECTOMY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblDoctorTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TblDoctor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblDoctorTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.S_OPER_SCLERAL_BUCKLING.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tblSurgeryTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TblSurgery.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tblSurgeryTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.S_OPER_GENERAL_OPERATIVE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._s_OPER_GENERAL_OPERATIVETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._s_OPER_INJECTIONTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.S_OPER_INJECTION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._s_OPER_INJECTIONTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSOPERATIONNOTE, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PHACOEMULSIFICATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._s_OPERA_ECCETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.S_OPERA_ECCE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._s_OPERA_ECCETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._s_OPER_PTERYGIUMTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PTERYGIUM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._s_OPER_PTERYGIUMTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._s_OPER_TRABECULECTOMYTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.S_OPER_TRABECULECTOMY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._s_OPER_TRABECULECTOMYTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PAR_PLANA_VITRECTOMY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblDoctorTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TblDoctor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblDoctorTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.S_OPER_SCLERAL_BUCKLING.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tblSurgeryTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TblSurgery.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tblSurgeryTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.S_OPER_GENERAL_OPERATIVE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._s_OPER_GENERAL_OPERATIVETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._s_OPER_INJECTIONTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.S_OPER_INJECTION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._s_OPER_INJECTIONTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSOPERATIONNOTE, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._s_OPER_INJECTIONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.S_OPER_INJECTION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._s_OPER_INJECTIONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.S_OPER_GENERAL_OPERATIVE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._s_OPER_GENERAL_OPERATIVETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblSurgeryTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TblSurgery.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblSurgeryTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.S_OPER_SCLERAL_BUCKLING.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tblDoctorTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TblDoctor.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tblDoctorTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PAR_PLANA_VITRECTOMY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._s_OPER_TRABECULECTOMYTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.S_OPER_TRABECULECTOMY.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._s_OPER_TRABECULECTOMYTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._s_OPER_PTERYGIUMTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PTERYGIUM.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._s_OPER_PTERYGIUMTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._s_OPERA_ECCETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.S_OPERA_ECCE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._s_OPERA_ECCETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.S_OPER_PHACOEMULSIFICATION.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSOPERATIONNOTE) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblDoctorTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblDoctorTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tblSurgeryTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tblSurgeryTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._s_OPER_INJECTIONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._s_OPER_INJECTIONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._s_OPER_GENERAL_OPERATIVETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._s_OPERA_ECCETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._s_OPERA_ECCETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._s_OPER_TRABECULECTOMYTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._s_OPER_TRABECULECTOMYTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._s_OPER_PTERYGIUMTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._s_OPER_PTERYGIUMTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._s_OPER_SCLERAL_BUCKLINGTableAdapter, Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Connection)
                    Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblDoctorTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblDoctorTableAdapter, Me._tblDoctorTableAdapter.Connection)
                    Me._tblDoctorTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDoctorTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblDoctorTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblDoctorTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblDoctorTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tblSurgeryTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tblSurgeryTableAdapter, Me._tblSurgeryTableAdapter.Connection)
                    Me._tblSurgeryTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tblSurgeryTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tblSurgeryTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tblSurgeryTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tblSurgeryTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._s_OPER_INJECTIONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._s_OPER_INJECTIONTableAdapter, Me._s_OPER_INJECTIONTableAdapter.Connection)
                    Me._s_OPER_INJECTIONTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_INJECTIONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._s_OPER_INJECTIONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._s_OPER_INJECTIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._s_OPER_INJECTIONTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._s_OPER_GENERAL_OPERATIVETableAdapter, Me._s_OPER_GENERAL_OPERATIVETableAdapter.Connection)
                    Me._s_OPER_GENERAL_OPERATIVETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_GENERAL_OPERATIVETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._s_OPER_GENERAL_OPERATIVETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._s_OPER_GENERAL_OPERATIVETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._s_OPER_GENERAL_OPERATIVETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._s_OPER_PHACOEMULSIFICATIONTableAdapter, Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Connection)
                    Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._s_OPERA_ECCETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._s_OPERA_ECCETableAdapter, Me._s_OPERA_ECCETableAdapter.Connection)
                    Me._s_OPERA_ECCETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPERA_ECCETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._s_OPERA_ECCETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._s_OPERA_ECCETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._s_OPERA_ECCETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter, Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Connection)
                    Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._s_OPER_TRABECULECTOMYTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._s_OPER_TRABECULECTOMYTableAdapter, Me._s_OPER_TRABECULECTOMYTableAdapter.Connection)
                    Me._s_OPER_TRABECULECTOMYTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_TRABECULECTOMYTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._s_OPER_TRABECULECTOMYTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._s_OPER_TRABECULECTOMYTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._s_OPER_TRABECULECTOMYTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._s_OPER_PTERYGIUMTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._s_OPER_PTERYGIUMTableAdapter, Me._s_OPER_PTERYGIUMTableAdapter.Connection)
                    Me._s_OPER_PTERYGIUMTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_PTERYGIUMTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._s_OPER_PTERYGIUMTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._s_OPER_PTERYGIUMTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._s_OPER_PTERYGIUMTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._s_OPER_SCLERAL_BUCKLINGTableAdapter) Is Nothing) Then
                    Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Connection = CType(revertConnections(Me._s_OPER_SCLERAL_BUCKLINGTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_SCLERAL_BUCKLINGTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblDoctorTableAdapter) Is Nothing) Then
                    Me._tblDoctorTableAdapter.Connection = CType(revertConnections(Me._tblDoctorTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblDoctorTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tblSurgeryTableAdapter) Is Nothing) Then
                    Me._tblSurgeryTableAdapter.Connection = CType(revertConnections(Me._tblSurgeryTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tblSurgeryTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._s_OPER_INJECTIONTableAdapter) Is Nothing) Then
                    Me._s_OPER_INJECTIONTableAdapter.Connection = CType(revertConnections(Me._s_OPER_INJECTIONTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_INJECTIONTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._s_OPER_GENERAL_OPERATIVETableAdapter) Is Nothing) Then
                    Me._s_OPER_GENERAL_OPERATIVETableAdapter.Connection = CType(revertConnections(Me._s_OPER_GENERAL_OPERATIVETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_GENERAL_OPERATIVETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._s_OPER_PHACOEMULSIFICATIONTableAdapter) Is Nothing) Then
                    Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Connection = CType(revertConnections(Me._s_OPER_PHACOEMULSIFICATIONTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_PHACOEMULSIFICATIONTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._s_OPERA_ECCETableAdapter) Is Nothing) Then
                    Me._s_OPERA_ECCETableAdapter.Connection = CType(revertConnections(Me._s_OPERA_ECCETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPERA_ECCETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter) Is Nothing) Then
                    Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Connection = CType(revertConnections(Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_PAR_PLANA_VITRECTOMYTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._s_OPER_TRABECULECTOMYTableAdapter) Is Nothing) Then
                    Me._s_OPER_TRABECULECTOMYTableAdapter.Connection = CType(revertConnections(Me._s_OPER_TRABECULECTOMYTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_TRABECULECTOMYTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._s_OPER_PTERYGIUMTableAdapter) Is Nothing) Then
                    Me._s_OPER_PTERYGIUMTableAdapter.Connection = CType(revertConnections(Me._s_OPER_PTERYGIUMTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._s_OPER_PTERYGIUMTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
